node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "label"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "input"
  input: "transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\t\000\000\000"
      }
    }
  }
}
node {
  name: "reshape"
  op: "Reshape"
  input: "transpose"
  input: "reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "w_in"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 9
          }
          dim {
            size: 32
          }
        }
        tensor_content: "\0249\004>\320\262/?B\026\022@\307\225\221?\307\255\235>\226\266[?k\306\273>{Q,>\013\3616>\217\277\020\277\365\225\231\275z0\321>\235\305\342>\220,W\277\317\235\023>\251 \254\276\275\360\016\277;\326\205\274\363\352\205\275#\375\005?\225\251\232?\014\204n\276\271\331\250\277\3566P>\251Q\200\276~\2069\277j\365\255\277\213\264S?\360^\274>d\005\017>`\317\211?\364\256I>m-\206?\\\2617=\277(O?\003\034b?C\200\316\276\tM\'\276\340O\007=v\325U\275\374\373\352?\021q\306=\221\267\272=\351_\260\277p\024\004\277Z\270\323>\326f\310>\353\273\336>\021?\307=\346\277\252\277\010\000\306=\025\376\t\277rc\020>k\273\234\276\2727@>P2\037?j\366y?1\201\014?T3\324\276\356\256\002>\355\035\002?YAw\277\371@f?\364\r\205\276\231_\351=\007\034\204=4\206}>\250\320\332\276f[\267\277Y\265\200\276z\261\220\275\004z\335\275\356\253%?5\002\005=\177K\343>\177R5<\365\027\211>\202IV?\262\247\023<\341\332\3028\223\202\206=8%\230\274S\036\275=q\352\364>\014~\311\276\016(\341\276\343\225r>\323+\037?\'\274\266\277r\3124>%u\030\277\r1\234\275l\006\010?\002\326B>\326\205D\276\013\376D>t\361\033\277\346\327\332>\311*\021\277\330I\002<Ne\317\276iP\311?:#\376\276LR7\300\031\265\002@\256>\206\277\272w\255\277\247\330\210\276c\326\244\276\272\0055\277(\307t?\325\t\232<l\3759>\303KU\277\374|\006\300\246\353\264\276\324U\350?\016\375m\277\316\030\215?\3352\201\2762iF>\215-c\276\323\372\000\277\257\332\014?ol3\277\350\312\201\277\255o\021\277M\022\010\277\2379\207\276\363\327C?\337EA?:y\222?\211\006%>\302\021z=\320\352V\277\336\300\031\277\360\276\003=B^\016\275\355\261\232\277w\260\325=Y\340\"?\216Sg>\335\222\376=\316\255\347\275\235\016\213\276P\254}?\232T\217\277\367\270\362\277\225\332\244\277\006\220P>\0230\300>mUi\277\221\027\005>\340DR?Z\247\315\273\306<\255?\217\370`\277\310A\003?\014\256\312\277%>3>io\032\277v\n\317?\330\306]\277-\251\271\276EuB\275\231>\252\2777\363\304>\232I\245\277\253\345\212?\311\261\272=\t\304\017=)\204\314\277UYC\276\311s\201\276\350e\202\276\305\321\325=\227\362p?\355\373\200?\220\020\t\277E\"\327=\201\003D>\327\211\310>\342P6\277\210\302\333\276\360\375\250\274\016\301\373\276.\267H\276\2458\014\300\005\243\031?`@#?7\361\256?\3553\360\276\212\235c?<\244\251\276\254\"\n\275H\253\317\276\376\327O?K\217\231\276\252C6\277\335\215\006\277j\356\262?\241v\342\27775$\276\303\211\241?9\225$@\035\034\231\2775\356L?\267*\204\277\243tG?\264\346\241\275\370\372\200\277\307\250\314\276\024\376=\277_a\322?\021<\325\277\2423\372>\250\313m>\305\037\231\277\007\220{\275?J\033\277\302\300\004\277\371\254\277?d\256\202>\3721V\277U\364\253>\n/\007\277\320\305\345>\313\313\013?[kQ\276\235\277\255=m\307\031?\220]\017\300\2323\010\277j=\225>\020\353\235?\325k7\277\212\362\214\277\241c\006\300\"\274y>Ow\271>C\033\365\275\256=\n\276@\227\245?\006\355b?\017\373\021\300y\013\343\275\223\030(\277\265XO\275\002%\224>Z)\231>\274%%?2\377S\277\224\253[\277\345\222h\275R\037\"?)\241b\277\324V\353>,(\331\276z\254\301=\036\\\t?T\233\313?\312i\023?\177c\323=\367\231\211\276\0343\247>\2465F?>Y\321\275\241\353\336\276\325\263#\277\275\242\344\276f|\232\277\343^\027?\311\257\"\277(CR>\236\306\036@a\327\364<\212\372\232> \337\212>\222\177\247?\265&\375\276\232J\"?\345\340\365>uz|>=G&?\261p\323?N\037\227?\037c\207\277u\254\337>"
      }
    }
  }
}
node {
  name: "w_in/read"
  op: "Identity"
  input: "w_in"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_in"
      }
    }
  }
}
node {
  name: "b_in"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "\242\216$\276\317eC@\250\320\274?\376\303x\277\3373\246?\2715l?\260\207\261?G\244\205\276\030GQ\276u\t\205?\216d\353?\302nT?\203\244\243\277j\024\223?e\350\r@\341\375\006\276\337\203\331?\022T\251=\211\344\023@=yR?\025\242\034@\332\200\301?\354|\211?\317\201\014\277\214\204_??N\n@\037\271\357>wv\010?\003\251\034?O?F\276\202\306\263<\033C\250?"
      }
    }
  }
}
node {
  name: "b_in/read"
  op: "Identity"
  input: "b_in"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@b_in"
      }
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "reshape"
  input: "w_in/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "MatMul"
  input: "b_in/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "relu"
  op: "Relu"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split"
  op: "Split"
  input: "split/split_dim"
  input: "relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 128
    }
  }
}
node {
  name: "rnn/Shape"
  op: "Shape"
  input: "split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice"
  op: "StridedSlice"
  input: "rnn/Shape"
  input: "rnn/strided_slice/stack"
  input: "rnn/strided_slice/stack_1"
  input: "rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack"
  op: "Pack"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1"
  op: "Pack"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack"
  op: "Pack"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1"
  op: "Pack"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "\022UH\275\030\273m:\201N\251\275\200\3076\274\273|\372\274\251\221\264\275\005\365\273\275X\333-=\307*\334=\353P\r;M\205\213\2743\215D=\330\221\341=L\n5<\320p3;\243\313\303=\360\364\340\275\005\030\222<\300\374\373<\276\244\007<\261\221\336=\345d\025\275\304\271\204:K/\321\271\003\235\227=\360j =\323%%\275\335\204\320<w,\037<z\203p\274\006|\356\275\234q\276=\341\211\302\275\267\207u\273B\223\036\276\230sH\273\341\220X\275\326\240\360\275\206\363\023>\2559\316\275x\271/\275\016j\037\274P\371\250==\352\224=\351\217\030=\225Y~<?]\354\274\355f{<\235_\254\275\2134\300\2754\0059<\n#\266<\361w\272\2746\252\217\275\r\353\202\274F\035;\274\343\230\034=1\216\322\274\303Sf\275\327\221/\2755\247:>\2520\000>\322\370\201=\240\323\325\275\357\275\334\274\234\252\274;\225\212\037>L\276V\275\016\006\364\275\231\033\266<-\204)\276P\213\223\275\255\301a;}\224U>\241\303L>Z;\313=)\241\345\275j\334\\=)\026\023=\252\"j\275xY\252\275\372\202L;-\016\246<\264\210u;[k\270=n\230\307=\363\336\230<\364\367H\275>Jh=b\361\243<8\277\221\2757\367\367<>9\203=\026\267\013>\244D\251\275\242\263\030\275;\247\007=\201u2<\216\\\024>\237\202\215\275\252*\307=\340\317\242=\240\260\006\276\366\350\256\274N\344\356=\341\316\345<\370\277O\275\300\247\023>\232\374\203\274vm+\275|9\363=\230\207*\273\317B\322=\370|\322\2752\303\256\275\273\351*=\323/\335\274AX\366=\345f7\276?\030\341\275Fs\230=.\277g\275\350\365\225<#%\224\275\354\204\231\275\256\0101>\214\321\332\275\337xi=\340\334\257\274\270#\016=\267\306==\027\305|\2755U*=C\226\277\273Mb\177=\020P\341\275\272\314`<o\023\247\275\257\030\271=[\270\252=\021\207\315\275f\251\235<\246\005\215\273\337\245\210\276\327S\035\274\221+\214\275\245\350\276\275\271$\336=\3418\232\275r\201\213=\322\377\321\272\220\355\306<\262\322o\273\\\271k\275\345\251\364=\310\220\300<9\200%>\316^H\275\232\377\031\276\310\256\351\275\374\031\003>\206\247\265\275\251\213\351\275M-)\276&v\223\274\343s\272=\314e\260<|\312\214=B\224\017\276X\302\022>H\225\007>\236\246\227=\246\316\025>\331\341\024==\362\010\276X\026j\275\340\233c\274\371\232:>\222\350\334=\215\266{\271\371\213j=\330A\037\276\366\272\244\275\253#\332\2758q\271\273g\365\t>\272%\360<\316}\221=\350\354\211=\373Q\322\275\350\003\241=p\370^<Q\030\216\275\274uG=\204\030\371=\"\327\020\275\2117\273\275\227\241\350\275\211t\275\275\326O\260\275\335p\034\276\222\303\255=\226X\374\275Y\243\314<W\262\350\273~?\302\274\266\230\004> \343?>\323\266\207=\006\031X=\274\355\343<\356q\037\274\254\273n\275\000\307\\\275\337\213\246\274\221d\364=\0237\235\275\032S%=\005\253\204<\343\341\n>\372\312\002\276\002\200\222\275\224\273\233\275=\305\340\275\346~]=\206\366\216=<\356T\274\337\202\000\276\334\263)\275\021\273}=W\032\300\275\335\207I>\262\243)=\003\301\344\275\356\033&>\364\372\273\274\344\005\204\275\020\217~=\234\214\036\276|}?=\t\367\'\276~PQ\2755\200\251<\035\376^=\340\223\270\275\033\232]\274\241\377$\276\227\370\233\272\310*E\275\005\261\374=\326-\202\270\344\341\373<\250\226\357=V\2061\275\247v\216=\2349\235\274\027\372.\276\037\201\010<5\253O>\230=x=0H\264<\342\231\364\2753\023{=\362\027\251;\335\332\302\274\202&\t=\262\343C\275pyr\275\301q\247=\242lb<\326\364\373\273\217\320\\\276\2020\252=b\010Q=\250$\201=\335\226\034<\311(#>\025\360\331=\361\271\032\274_[?<\2538J\275z\021\212\275\025a\341\275\376\277\241\275\215;%\276\237f\027\276\177p\241=D\3602=(4 \273x\313\001\275\221\n\031=\237\032*> \326A\275B\262\357=\330\357\330\274\274f\010\276\236\274:\275\231\212\373\275n\236j=\334c\323\275\000/\003>dj\343\273\275\357\t\276\212\235\324;\211\372\022\276\237\304\r>\376\271\235\275e\220\373=\037s\227=\325\004\014>\354\347\213\275\211i\032>\026`5=\"\342\355=\375\335p\275_\004g=9\223+\275\246hA\275\345\031\373\274\010/V=\302\240\032\276sV\364<\327)\346\274\301&\037<s\356\335\275\227\276\203=\326{\242=\2368\204=\342\376\312\275d\032\023\276\252\226>=\261\\\330\273\271%\204=\307n\367<\036C\261=Y\200\270=i\261\344\275}\246|\2753\004y\275x\250\317\275\314d0>\216\335\247<\306\254\337<\324\366 =u\036\326\275[q\274=\366\373 >\177\321\312=\374P4=\224\212N\274/\306{\275T\\\313=Q\3675=\324\326\r>\226|\n>vF\333\274Uo#\275\206\362%=\214\235\215\275{\245>=\036\007\007>\373\302\210<M\372\361<\2129\010\275\306\231\346<\3039M=<\204k=\024\303?\275\263\301\013>\275\264\007>d\335V\275vv\371\274\221K\235<\250\016\242=[\243e\275z3\270=>\244\240\275\347\266+\276\215\t/\276\237p\360\275uZ\220<\337\255\252\274\365\316\254<\232\263\277=\247\274\037\272Vm\3637\355fA:\346\356x\271\325\373=:\353\347)\272\243@~\274\200\342[\273\"6\3769N\242\244;\210\217\214\273\262~\346\2722\224\3368\007\035\0308$Y\23085\305\010\274\220\307\274;\367\314n7\r\264\335\272\n\335\335\270\247\323\3067\003\372\3519\005\3003\266X>\333\270\2555V:@\207\307\267\014\020\002\274Q\013<:k\307\335\273\360\234C;\323\337\265:\242\223\203;\355\000?9e:r\271\370\227\2259\274;D\274cy\201\271M\252\321\270\365\324\272\272\031\302I\275\330\t\226:\353|\254\275{\250;=\214\370L\275\313\210\307:1\023\02475%\264\270\371\035\035\272\372\304S\272\246\266\2448\000XH\275\307-\222\274h\332\231\274\3535\345=\207\304\024\2671\337w:\007-8:a\2037;\321\245Y<\207d\007:\323ls\274p\376\353<\024\225\212:\352\303\203\273\263)\364\272\362P\013\271\265\267\0339\030pA:\337\002\002:?\232\230\271\310$\264\273)dW=*i\221\270\370\313\373\274\335\205\233\274\037\035\212;\332\252S\271\2108\342\270\357\032\202\266\371\257J;\377\017\222;\240\307O8\344e\"\274\374\314\034\273\030\031\3638\235\211\371\272\300\005\323\266Ui_\272.\272\37791\215]\272Nl\215;\266D_:\007]C\273\330p\271\272\302a\024:\355\301A;4\r\367\271L[\317\273\320\303\256\271\307\234\331;t\0370:\251\232p\271\244\246\274\273Z\311\3369\335\217\016\270Y\262<\271\342\351\374\271\257c\255\272\031\362\2568S\277 ;z\341\243;)l);\376\307F;\2161\000;\354my\273U\330\036\274\020\235z\273\330o\027\274z;\2029]H<\271\340\265\252;M\031E\274\317  ;a&\222;E\356\266\272\236X\362:\366%\211:\022\344\202:N\030\326=cw\031<\277p1>55\230=\341b@\276\177A\251<\347\335;\276#\267\205=C\227\370\275\302M\034>\327/\t=\343K\312=\035\366\245<\245\304\021=\207\306o\274hZ\226\275\355\013\236=X\235\356\274)\310*\275BX\245\275\200\020\237\273\36459>\304\353;<\205\316\216<\316\2251=\253\340\302;\226\260\310\275\014\212\275\275\025<^;\276\253B=\177\237\036\276\234\351\247\275\005\374$=\201$\024\275\241\230A=tI\201=\211\003\361\275\021\377$>n\030\r>\347O\246\275\333C@\276?\355\355\274\026$\031\276\373\224@>\243\3733=\261\002\221=)<.\276y\231\262\275\344\005t\275A\321\344\274\216)\">\020eC\276\013E\273\273\333r[=W\333\222\273\034L3\276\357\232\340=_\314\237\275\260@\272\275M\230\262\274\334\366\"\275\336\217\t\275n\305\330\274\204\354\300=\272p\006><\226\'=dY\375=|n\210=F5\201\274O\256~=q\036\253=.\250\311\273`\270>=BS%>\325\3347>t\304\240\273\227\301.=0\273\002>3-\034\274\227\257\301=!\'\375\275\303^\237\271;\340\000\276\300K\236\274\320\000)>42|<\266\200\311\274\347\206\026\275\007\211\326\274\013\205\242\275\324\271\240\275\21029\275\202Z\200\275w\022\367\275\303\005>=o\267\027\276~\310\201\275\016\365\316=\274\253\266\275\r\004K=\201\256\225\275f\224\270\275\265 \025>\"|3>%\276\356\275\347U\350= $9\275\207?*\275E\375/>\347\031\335\273\370\357\227=\323\243\024>3F\204\275\260\035^\274\360\r}\274\255|\366\274t\257[=m\207\264\275s\237\230\275d\351M>\262\302\265=y\3722=~(7\275\227\227\327=y$K\275\357\302\035>\273\232\332=3\211\030>m-\215\275+r\343;\356]1>\261\222\203\275\r5\277=Rm\020=\320\305\"\276z\204\220=\225\272\271\275\023\217#>\216\376\275=\354\357q=\300\024\277\275\372\000\"\274r039\310.\230=)\202\301=\276|0<L\020\303\275\233i\024\275\262b\016=\030?\327\2752-\304<NM\027\275y9\022>sX\337:W\210-=\033\371a=\374y\346\274\010\217\332=N\314h\275\004/!\276\204<\014>\373\032E<\022R\000<\355\262\036>\315\242\212\274/\212_\273\204\030\002\276\311X\307\275\347\230\004\276\356\216\025\276\262\266\253=\022\025\035>l\276\365=t\276\201\275:F*>A*\030;d4|\274p\272\020\276L\255;\276g\204\375\274\020\225\027>\033\366.>\"\316O\275\353f%\274j\333&\274O\361\037\276w+\256\275%\356\003\274\211h\031>\201\225:<\026\334\355\275\017\240\010\276b\337\264=\345\306\323<\243J\020>\303\313\351\275\373\004?\274\242}c\274\035\311\333\275\256!$>\026\203G=u\346_\275\261g\017\276\220\261\251\274zS\322=\221\376\326<\244\261C\275\307\306I>\022Ro\273\365\277\006=P\341:\276\231\222\271\274\002V\356=f\372\004>\372\306 =\272;\320\2757\272U=\255\262\365<\001\262 \273\030\263\227\275\274\363\013\276z;\'>\342?\362\274w5\002<\'\014\375=F\216j=\245\300\362=W;\323\275\344\242\233\275\371\227.=\205\256\023\276DH\336<\373\254\232=\266\3453>\273\036\316\2755Q5>\212u\244\275`\024\321\275\037\311\006\275A\007y\275\276\215\257\272?f(\276p\255\366\2754\031\007>\212\210\233=\330\030}\275\366\333h=\204\032\001>\037\374\335=\212=\325\273\035n\004>]\312\247\275\n\305O\275X\305\325=O\367\347;Co\361\275\325\232Y=\253\370\366;\204\242b\276bVe=\356\313\314=\'\343\270<\212F\351=\316\323\262\274X\302\323=L/\006\274A\217\026\276x\371\'>\253v\312\275 ^H;\002$m\273\n\254\t\276fvO=\364j <\023+\302\275\335\237u=\003\333\335\275\266\365\032\275\037ld<\302\272J9\340-\023\274\330\322\353=\225\024\312=1U\272\274\341u\324:Y=V\275\357\025\273=\313\034\016\276p\022\374\275\344kg\274V\320\263\275\034T\356=\224@\334\275\031\317M\274\026\223\201=\207\211\313<m\316\">\016\263\346\275\302{\322=\362\204&\275E\000y=\357\240\241=%\216\367=<>\230=\334\276\362\274\034p\202=\274\270\253\275a?\002\275\372\257\357\275\205\3406\276\211\\g\273]\027%>\022\353\301\275\347\367\303\274p+a=uz\342<\010C\363<i\3028\275\347?\247=\223Q\300\275\321X\326\274n\236:;/\320(>\014\022\033\275\206W\341\274\331(\225\274Q\371\007>_\340)>\324\365\313=\374g;\274\367\245\255=\347\266\250\275\203\246\234\275^[\364\275\336m&\272\205(C>\273<\333<z\304#\275\345\311\036\275\255P\223\275Y\342\016\275\336\254\001\276\210\327\340\270\377\315\311\274\331\244\337=\214\345\350=\236\034\003>\236\330G=s\373\211\274Bd:\275\260b\315=\033G\224\275\010\202\230;\304R\'=+\237\325=\343F\366\275\301\031\324=\217\376v\275\215\177\r\276\267\326\247\275\344\031\010>\235\210\267\275&c\235\275\217\222\210\275\'\036\007>\210\336L\273\031U\023>\223\341\371\275\027\356\201= \317;=]\221\376;\301.\006=E\320\025>l\340\255=X\027\003\275\331\006J\275\377\217\235=\231!\001\276\275\365\371=\244\253b\275\376]\r\276\360hi=u\335E\273\237y\310=F\211\275=\332\253\222\273?\230\362\274j\361\245<o\'k<n\032S\275b9\252=j\342K<\003\344]\275\253\362\261=|\207\202\276j=\361\275d\377\371=\362\213\211\273\212\260l\274k\236\357=\362\343\316=\247c\215:\325\273\316=\311FL\275\230\245\242< *I\273\235&(<LN\357:jU\340\274\003\372 >Q\273\353\274\007)\200;\3127\003\276\251\344\023\275!p\275\275\211\341\221\275\345\204\203\274F|\301;9\356\272\274\324AO=\225\025\247\274\001[\376=\367\203V>7\227\230<hm\207=\017\323\024=0i\223\275\313A\275;n\362\336;x\377\n=\304B\214\273K\026\034>\344EH\275`\256L\274J\014m\275\326\342\334\273\325\310x\275\212G\232\274\265,\313:PU_\275\373\202\210=Z\344K\275l\227\200=\253\030\225<\265\306@>\376\340\317\274i\033\267<\021\021\212\274c\373\244\275\363\016<\273\224\177\253\275\365\232\004=O\222\235<\177\2347\274\314<(>\204d+\276i\335C<\025@\357\275>T\245\275\004/7>\014j\035>\221\253\247<\234\351\303\274G\362\337\274\327\3200>\311L\212\273\322\331R>\325\336\031\273\247\007\221\275\333&\000\276\274\251y\273l\213\376=\362\r\232=\212\375\207\274\326<\004\275\260Q{<L L=\235\200\022\276rQ\026=\305\253\274\274\335\262\205=\245\275\210=b\205:<\325\224\031>\243B\006>\210\037)=\025\037\227\275\256\036\204=c=\225=\0138,<\307\304\372\275\375\0237=M \266<\260F\037=\247\256\302=\360\272\361;\022\214A>\322\357\207\275|;\246=\000\265\273\2757h]\275D\247\341\275\337\307\302=\351\334\264=\3758i<\301\341\215\275\022\322l\275\020+\022>\20585\276\202\246\374\275\244\324\022\275\277\275\242=\3107)>s5\207;h\240\243\274\340\177\005\275\343V\006\275\353\367\262\275\254p\r\2767T(>k:\341\275\213-\226=\234=\321=\036_\225=\212\224G=>\036\260;\240B\257<\260V\037\276\031R:=\333\321\246<\035\023)\276%\270\257\270\2718\205\274\316\375\036\275\273\226\252;\236\020,;\n\215\240\273\037\351\302\274\237$\013>\271\207\321=;\232\272=\032\302\311\275\273\225\005\276\245\272\224=\252l\001;r\221\242\274\337_{\275\327l/\274\"\232l<\354O\251\2756\200\271=\224\330\277\274\275\3124>\r\366\346<\013\241\341=R\272\246=p\351\233\275Y\306+\2745#\023\276d\311\266;\020{\035>\026\307s=J\225\n>\257w\332=l\\\223\275\357\027\010\275d*C\274|??\276\177B\371\274(\341\275\275?\223\013>\006\220\236<\235\337\236\275>$\'\276\250S\247\275\354\003\021>X\341\254\274\325Y\205:Cl3=\2415\024=\033\260\231\275n\305\215\275\323\264\305\273\326\360\312\273\3066>>m\3002\275\352\223e\276+3$=\232\331!\276\315%\272:\006q}\273\254{\336\273\215Qy\275\022/\230<\323<\250\273\243\255\352=\336\305N>\262Vu=\027\303\002<\272+\023=\242h\261=\277\031\207=mt-=\207\306_\275\273\206\362=]\203\302=2\210\017\276\360\245\331\275\252\225P=|\0363\276\232\363\243\275Br\240\275MH\224=Ou\354\275K\366\353=\354Ap>\205pq=\226\204E>\364\363`\275\317\213c;\234\355}=\341w\006=fY\324=\350uw=\323\265\367<\300\322\311\275\343\350\276<a\333K>\213l8>\363\352\n>\t-\303\275\270\254v=\034.\003=\211W\001>\371!\371=[\000\215<\007\'\325\274\036\244\260\275\203\343\221=;\224\242=D\304\210\275$\233J;\262\036\303\274\365\024o\273)\026s\275p\264\021\275\305\251\344\274\0318\316\274\3762\250=}\032\347\2745\243\032\275@\264\203\275\016\001\337=\360\331G\273\243z\315\2734V\367\275\262\252Z\275\344\240\245:\357`\211<h\275!:\366fx\274\256\346\375=\365\003\236:\007\\U<hq\227\275\347_\321<\302\276\317=X\177\252\272\315M\263\275E\311\212=\"\335=\275\331S\261\274W\367\253=\216W\314\273\251\203\177=\315\244\301\275j<8\275Pw\210<\227,\374\275\007\322\264\275?\327 \276q|\253\275L\270\r;rF@\276\177z\244=\353\311,<TM\311=7\366\370\275\234\356\306\274\010(\370\275\375\237J=\373Sb\275rO\234=<\000\225\275?\375\363<G\243E>^f\356\274\004\371&\275\267!\261\275\034I]\274\250\024\250\275\213\322G\275\302]\225;\000*\271\274E\355a\275\306A\244;\264\244\223\275\004\217\002=}3\306\272w`m=\376\205s;\262\246z>7%B=#\346\307\274>e\367=Qpf\275!\371\253=\3416\327\275?\237\244\273\300%4>*\276\207<C\004J\275\370\261f=CD\002=\\\324\221\275N!\347\275\020\261\216<\314\210<=,\351\353<\274\026\253<\314\253\014>\366@O\272\2736o\274\355q\023>:\303\337<;\320\331=\333\234\205=\361\205\331=q\342==K\034\334<@\264\307=\250_===\357\232<II\316\2739\213z<1\265\350\275\333\247\254\275F\327r\275\264\263\037\275^\254\000\276\243!\300=.\250\224=\270\271\331=u\202\217\2759v2;H=\346<?|a\275\376\362\004\276\260\213h\275\256\332\346<\237\361\377<vTu=\247\245\203;\304\330\230\275\243&\315\275\360\352\343<\240\357\255\274(\221x=\205\252\335=\"\313E<\001k\200\276\014\351\t>T4I\275\000\262^\274y\224\245=R\311\202<\3072\224\274\200\264\347=\025g\034\275\021\220\">\006\230\360\275\342AO=M=\357;\275\257\010>0\247\246=9\353\030=\361|\350\275\340\010\032<\325\312\357\275:[\253<\251\366)\274}\324X<\317w\364\275\302\255\212=\"w\246;|\326\314\274\263rE>\252\315R>\235\310!>\263\272;\273\266\227\005\276\243\375F\272\361\317\330= \177\024\274\270\325\216\275\345\334}=\377|\266\275\230\313\355\275JI\215\274\271\203\025>\255\222\235\275\375\027#>h\001\300\275\004\307\342\275\246\264\234=W\033\263\273\221\232\324\275\3300\233=\366\210\334\275\216?7\276\211\365F=\316B\213<_\207\036=\312\2114\273\203$\333=\204q\306=\313\n\235=\273d\240\274\013\026$\2757\023_=\007\337\010>\315d\230\275W\033\005\275\220D\213=Wu,>e\250\007>\'\266\260<\007\301\231\275l\274\277\274c\227M>\367\344\024<\217\234[\2753\037~=Z\362\010>!Y*\275\305S\231\274}\202 >\301\344\277\275-\273\311=\2053\276;\036\315\215=\251\"\276=\266,i\275\272g*>\3007F=\023@\022>S\250\013\27628\236\273*\341\020>7G\351=\\\221d\2755\0312\276\211\037\r>\021\"\275=t\221\276;\211\274\275=\020\017\363=\314eg=O\0038\275\301\331\202=\323\224c\275\013\376\025>\314\215\216=\245\334\021\276\272\'\022>Z\236t=\335t\030\275\342\n<\274\017\321\333<Z\232,;\023\266\303\275\016\250e\275=b\023\276.\306\276\275\234\323!>VdB>\27520=x\261\246\275G\224\312=\237\036,>\207X6>k\333\240=X\002\277\274\003\255\374\275\322QQ=\235\247*\276\275\272\206\275;\257\'<\242\205\316\275_\226\0079\033\315\326\274\020@\232=\244\241\232\275B5\003\275\001\267\002\275\203\376\n=\361 \355=\230C\251\275\3302\277\275\326\363\261;\376y\253<9\305\272=<\324\206\275\302\334\005=\006`\210\275\324\227\327=\305\3515>\276\307\224=%\234\024<3ST\2753\372$\273\005\031f=5\3400\276\325\223\214\275\316\262\032=\310e\014\276\206\313i=\350\036\t=;\005\306<\372\023-\275UM>\276xE->\3230\t=\332\035\274;\271\333f=\325\300 \276\263\272\013>\0240\215=\303\002\201=5\217G>Q\360 =3q\257\275\314Y\220=\365u}\275\264\362B=:x\306=\037\221\313\275;\267\017>\232\205\263\275;\236\031=s\373\374\274lC\'\276\302\253\270:!\226\244;\277\215|\275\252dj<W\034\032>\010c\220=\360\005{=\003oa\275\323\373+=\241\227K=\317\223\314\273\376t\243=\335\306\026\276B\232\234\275\227\031\320\275\377\014\234=\330\343\020=\317\203d:\243\003|\275(\310y=\t\312\027=\360:1\274\026\202\265<\324\\\360=\270u?\27547\307=\010K\365=(\301\345=\370P\">H\370\353\275~U\213\274\234\307\235\275\267\326\261=\214\207F=s\t\373\275\342u\353<\001\303*>\034\2155\275\216\251\"\276\354_\262=W\274\000>\333\'/\2767{z\275\035\200\373=\352A\010>i\357\302\275\200\202\253=lX\350=\024\321\324<7\341Q>$?\375=o\364\3179\302\266\r>\242\007\270=\251\375\324\275\374^\013\275\327P\217=\243d\037\275r\363\360\275\203a\252=\2758\273\275\277k\216\275\\\032\330=\323\324\357;\242\345\312\274\322\016+\275z\360\332\275N\225\302\275\366\222\231<\233I@>\251\357N\276i9\374=\033\033+=PQ\306;\326\272\215=\256*\237\275\"$\371\275\231l\336\275`\343\350\2733\320E=\310~w\275=F\304=5\204R\274w\323G\276*\007\302\275\223!@<9\233\336</w)\274\2237\253\275H=\276\274\362\034\371=}\021\021\275z4\231<O\3568>\353l\254;\334\350\217;/\205\222\275\277\025\271\275s\334\224\275\366\352\245=\003\362\273\275\236\035\320\274\267\\$\276W\235.>*\262_=\245e\207\272\264\215\345\275r\002\026\276?\262\357;E\260r\275\260\3503>\014\232\275=\177\005\344\2748\216\327\275\346,\326=\312\271\333\274\001\224\t\276ftQ=\364\320H=\351\262\034>\315zY\275H\026\360\274\210P%\276u\304\357=\014D\006\276\377\032\334\274\252Pv\274k\311\266<$\263\023=\362\264F>x\363\341\274\201\010\\\274\373\352\035>o\370\r=1S\245<c\217\362\275\322\360\344<,\025\277<\342O\373<\206\014\332=\300\372\000\2754R\225\275\007t\035\276\272\222\033\276\206\0277=\365\000\001>6\032\r\275\035\014\372:m\353W\274\355mS<\311N\005>9\244\304\273\316\\\207=\366\2640\275\207Ep\274\231\032\313=\030\256\202=r,\326\274\272\004t\2742u\264=\207K\273=6\353\261\272\275\003\241=\207\237\243\275\367\302\240\275@k\273=\336\253\244=f\277\243\275\245\276\344\274\305.\363\275\204C#=\330\360\205=\n\265\020\276b\203\177=\247\335Z\275v\364\002\275\000Y\242=\200\242\t>C\273\302\275\362\254\203\275oA\027>9\371\267\275\266\032\006=: G\275\264`\006\273\247\317E\275Cq\242=\351\256\002\276\2366,>\373\221\302\275}\027\355\275\210N\321=} \n>\351\265o=h`\370<{\216\307\274\337\016\300=\226\332\352=\307\365\000\276\002A\233:\030\350\263=\037\310\025\273\014\rB\276\217z\020=\'A]=J\341\263\274\314h\005\275U\324\206=\003@j\275\344a\210=\243\357\242=\325d?\276\302\242\204\271B\3507\273\017W\267\2729\025\006>\020\215\333=`\344O<\207V\362<#\313s\275\237\320\032>\367Qq\275\2556\025<a2\214\274<@4=\330\323\344\274\255\315\212\275\232\334\245<:\341\317\275B\266\254\274\351\247\033=d\336\243=o]\265=\236\306\333:%p\347\275[\002N\273H\035\215=^\237\362\275H\305\340=\273\221)>\327\005\317=\330\"\250=x\335\353\275\366\342\206\276\230\365 \276\265i\215\275\221\355\r\276f{8</\317B<\3417_=\365YS=\250 h=\365\014\240=T\314\314\275\335\020p\274_\337\220\275J\222\204<\035\206\263\275\213\027\330\275\n\353\004<\322\213\025\275E\305\r\275\301\331\256\275\250l\"\275\311\320\347=|\002(;\207rk=\334\372\275=h\305\256=\230,P\274:\237\341=\347W\013;\336\030\337=\005\t\334=$\244\365=\336:b<y.p\273\263J\017=\321I\n=\260\252\242=l\322\315\275\007\244\001\275\031?\372\274\nn\351\275\362\366\376\273FW\330;\235=\255<\260R\\=mz\214\275\273|J=E\216\305\274G\234\230<\263-\242\274X=\325\275Z(\214\275@\250\203\275\255\241\004\275\370j\211=.\254u;\033a\214=\346y\332=\2173\273\275\370\030+>\260\317\305;\216EU\275\364\353\255\274\236\210x>Jz-\275*`\376=\034\010\221\275E\212\034=|\301\373=\250\307?>+\202\"\274\361j\254=\231\234\370=\325I\206\275\006\021\277\275f\334\263=K\032&\275\261X\213\275\267x\341\275\013\000\022>\257\356\244={\377#\276\365?A;~C\006=\274\306\'\275<\330\222\275B\376\031=\264\025\016>\333\217\033\275\0108\270\275<x\352=\271\224\374<\000\nM\275\236\367)> \2741=\2679\017\275\204\235\332=\253h\005>\267\005E=D\366\246=\301\242\330\275(\\\376<\"\205\177;]c#\276\261\311>=\215?\017=\0138/\276\357\r\232<T\322\256\274\202\252\246\275\300JQ=\244\353\306\275\031F\341\274E\316\353<Z\253\003\274:\246\263;\210ON\275\013\302\325\274\336\356#=\261\032\242=\342+5\275\272\237\014\276\035\357\025<p4k=\272\220\343\275\000\260)>\003T,\274\200i\315=\262\355\212\275*\2201\275D\001\262=\246\301\271\275\313\332\005>\205\356\335=\222\020\301\275\356(&=\265\344\216=r\200f;\342\237\361=\327\230\342\275\243\372\020>\356\002\355\275\352\216\020\275\225\004\020>t\336r=\271\030\r\276?\350\021>\037\277\343<\223\353\r\276\032\221\036\276\017\t\002<\017\346l\275\031\233\364=\t\312\207<\324*\254\274\232\341\332<)\246@=D.\014\276\212\336\374\274R\212\230=\007\020\252=\354\321\r\2768\241\204=S\010\035>-\275Z>wW\307\275D\251\242=\220\322\024>{}\222=\333\366\223\2751\263b>f\264\302=\206\234\017\276\323\345\010;\337\363/=\361\240}=\326\256\342\275\211\037\223=\343\254\323=@\375R=,\342\220=\224\360\274\275\340\014\216\275\221\267\n>\003\357\235<U;\n\275ghh\275\321\342Z=\203<\037=\253\351\334=\3521W\274\362.\352<=#U>^\276\261\275\031\261\274;\\ma\273s^\346=\274\232\335\274i\027\273\274\374\341q\275\016\351s\274J\254\340\275\311\035u=\003k-\274\372\213\267\274\270Q\037>e\360\375=\354\\\373\275\275\344\025>@\273\346=\322\327\260=)\300(:\265>)\276\372i\245\274\264\254\3749Z\241\2048\264\300k7$48;\247\340*\272G\215\356:S8\247\2702W\035:\314\263\260\270\351\010\230\270\305\370\3319*u\205\273\313\374\366\270&6\204\2711\226\033<\301\204\225;?p\2618\002\274\233\271a\017\0268Qr`\272\332?\2628\231\272l9\036%\350\271\261L\002\274\033\006\0068h\346\001;%\304^6\353h\245\271m)-\270\262\324\230\267\320z\302<\361\n3=<B\206\272\330\322\240\275\355;o\271\264\361\204\272\216\321S;)\242\206;\357q\206\2744\237\314=.\032!\271\220\346\314\272\334\223\354\275\362:\300;\"\210\213\274U\000X=\323hb\274\371\340\312\271\211\360\236=\004We:^^\341\272\000\242\355\274\356\243\235\275\260k\n\271\232\223\261=Ju};\222\013\216\272\231J\035<\330L(71 \"=\305\204\t=\314W\313\270E\305\0259\253\220\323\274\317\275\204:f\342\2617\032\022!9x94;A\237\227:\342\367#:\252\010k\267\320\332\242:}\361\372\270\337\t\000\271\316}\252;&\231K:\216\023\343\272\270\213\263\271\242\r&9\213\300\300;/8\204\271\321\310\243\271S\025\0349\001E\005\27300\326\267\347\"\3049\224ct\273O\033\206:QqG9\003\244\217;D\37077@\'f\272\204\317\350\273\201R\245\270;\271\341<\247\213\270\274\374aL=\202\006M\271$c\234\272\367w\214;\342\227\021;\003\007\250:#]\331\274E8\006\270\261H\214\273DZ\027=\026\036W;\244\2219<\340YT\275\034\244\332;\232\346\220\274\375`%<\242\276\372\270sd\r\272@}\027;\262\2614\273*\210l\273$o\036<XX\374\274}5\303\271\235W%;#T\020<\330\235Q<\247\327\201\273\316\373\243<(\\\017;\373*\214\272\255\233\251\273\341\013\"\273\016\032\037\276\257\3770=\227\260A=gY\025\276\334ON;\036V\021>\306\243x==\276\324=\352D\014\276\t\010\307\275\r\242\t=\372.\364<\325\312\n=SV~\275\307\376\325\2753T\362<\207:F\275Wo==\232\256\023\275\302t\036\276j\213\225=\336%\241\273f%\037\275G@\306=\251<\256\275{h\275=\227g\277=\244[A>F\372\316\274\372\343\236\275.\323\341\275v\002\255\275FW\355\272\253\020\357\275\3143\006\276s\351\017\274+2\010=\256P\007=!\334\032\276Y\354\034>Ij#\276\342\212\242\275\277f\t=\\\236$\272/\277x\275\200K\237=\237\177&\276W\373\236\274\311\373\271\275\204\253\037\274\032\327\n\273\0229|\275\332\322\300\275H>\t\274\007\321\014=\026\320\250<K|\276;\023\021\210\273\247a}=\3075\320<\272t\216=A\215&>\355\236\014\276yew\274g`r=\t\016z=.\372\007\275{\217\353\275\334\001\207<\333x\215=f\202z=\t\260&\275\025)\201\275\004\203\274=\034\215\344\275\210\266\315=\250\266\301==\205r=q\325h\273m\tP<\344\252\235=~\315\002\276A\016\230\275A\217\362<\352\215]=\362\022\030>\276\233\265=i\246K>\311\036\021\276\257`\233\274W \364\273\027\332\276=\230\371\247=l\373?=\200\234\360=\343\302\354<\275\371\337\275\217Id\272\355\023\343\275\377\202\305\275\2059\265=\034\224<\275$c\375\275\014\365\025>5\201\234:\367\r>>\210\256\335\274\t&\032\274c\261\375\275\036\303\302=\3232h=\346\025\024=.\207\234=\3349\300=j\377\236\275\374\221H=\000\216\350<\225\310\306\275{\367\257\275\303\272\272<\200\377\004=\030c\277=\247f\221\275\3602!\273\361|\272= \373\t>Q\341\020<\355\345\210\273P\324`\274=\367,\274\357\375\202=\274t>\274[t#>\315M!\276\350^9\275\364\244s\275\205\t\226\275^4m\276\320\265[>8\344\037\273z\035\240;\351\223i\275\327&\353\275\220\023\177;:\215U>\257\276\377<\221\023M<\365l\004>\304\247\376\272\325jZ;V\210\371<\373}\356\275f\033\244=g\225\341\274\247\177\371\275\242w<\276\274\271\360<z\023O=\377Dx>\205\271\002<\177=f\275w~\037\275\203#u=\014\302p=\216D\344=f\251F>J\241W>\221\'\230\275W\334+\275W\025\353\272\273\214t>w\037K\275\273/\024\276\257\354\006\276\375\203^\275\225\032\306<S\030\276\275\345\262\010\276\344\255\013\276E>\257\275z\013b9\017\365\\=\350\234\017=\345\330z\276h\317\300\274\"\030\036\275\r\025\254=\034\211>\276\273\006\212\275\200\000\204=\243\264\317\275?M\212\273\325\\3;>xb<\367\r\010<-\320%\273u\306\213=8X\217\275\313\232\242\275\225\250h\274Cj\243\27324\254=\035j\">\262\3476<\317AY;\356\247\377=\215\316\341=CJ \274X\300\221=\237c\337=\300%\005\275\264\223\024>\271\324>\273\246\r\203=\033\376\023=\3051U=\262\017&\275+\236\244\274\257\004\302\275G\246]=u\371I\275\323\303\263:\212\000\';\346\013$=\212\332X=\233\\\005>o\227\347=\341\375\313<\002R\344=P.\362<\315S\265\274\350\224\332\275(\031\273=\\J><\026\3639>X\320\307\275b\234\275=\277\344%>j\024&>\214\254\307\275\365\327\200=\276K\223\275\200\302\243<\334#\"<\235\231T=\302\321P>\203\347\003\2756\272\230=9\330\273\274Z\003\242<\316,Z\276{\326\274\275\303L\255=\205\201\206<\272\022\304=4Q\255;&\233\266=i\235\261<vi\250\274\026\302P\275\261\0143\276\240\263 \275\344\274\320=\253\2036;\337\017\222\275n\220\257=\222\204\277\275\250\021\224=O&\355;\344\037\203=\264\214B\276\215P!=\033P7\276qI\356=\304\356\306=_\237\242\275\374)A\275\231\266~\274\345l\301\275\217\216k>t8\245\275 \233\335=\363&E=\231\271,>\340\361\244=%\300\017\275\257<\213=\332\016\275\274\221\344;>H7\375=\344|\233\273\031\221\200=\235o\010\276\240\\\267\275\232\351\225=\202\227\347=\362\227\225\275\301n\276\275\316\211\344;\354\036\345\275u\270\307=Wb3\276\302\224\007\276\001\342\317\275V:=\275\350\305\366\275\250l\002\276\262d\312\2732F\260\2752\344\272;F\312\200=\220\363\006\276\020J\013>U\325\003=9\367};UE\000>\027\206\213=\215\007\027\276Qu\362\275\366\304\034=\237x\212<A\212\202\275\255\370\276\275\364\027\334\275\215\022\372\273\245\311\270=\336<#=\034\312\256=)\261\034<0$J\275\024\334\327=\024\276\364\2756\321\321\275%\347\263\275 \'+\274\t\221\270=uo\372=\340\303\037>\207\005\003>\361{\207<\007d\030\273\017\236;=\235\243\325\274X;\222\275\005\354A\272\020n\210=pY\022\275I\025\024=\243\247\021=\n\211\317<C\363|=S\322b=\332nR>\222C\"\275^c\224<\027\375\332\275\000\024\032>\314\r\362<\016\232\320\275S\240\344\275\014H9=\223\310\365=\n\201?=\0331\014\275l:,<+B\250\275\332\226\264=\320]\001>\3117B;\033/\363;\003\001\250=\315E\344\274BE\233=\212m\304\275\031\370K>\037\211\035>\203\231\314;\335t\227\275\005\323\315\275\273\356\365\275\324Q\306=V\274\014\275\330\270/\274\314\341\332;\221@=\276\345\257\215=\235.\330=N\273\376\274`\2263>\234c\377=psG\275!iF\275_\037\265=[W\032>\n\343\232\274\377[.\273\037\301\233\273\332\031\001>\346\254\315\273\321\366\236:2b\002=yqZ;\335\277\302\275\343\302&\275\013\035m;\224n\010<\367P\326=\017\021\320=R\'`\275\317<\341\272\n\263\236=\371\377\025>\264\337\027\275\001\262 \276\016\013\207=\035\245\232\274\030\3054=W\343\263\275\006\270,=?\202\362<\274~\032\276\n\251?\276\276?\036>\330y3\275\366\375~\276\025S\331=Q\222\260\275\032=b=\353=\375=\250\006\302\275\363\2559\275u*\r>e\0217<\262h\031=2}\017>\251\010\245\275\226h\220<\2417I=\320\337\036\274\264\203\035=\037\013&>}\261\237=\036@\001\276\261\t\310=\326?\363=O\216\304<*\337\'\275<\t\3677F?\234=\276FE\275\347)\006\275]\305B<\315\217\r<\373p\017>\230f\346=\267~\374=\306\255%\276\243\256\014<\355\236\032>\233\300\037<}+^\275\374n\010=X\334\004=\236k\030\275\2243\207==\326&=\302|\265\275\210\010\261\274Y\344M=\231\017(<\306\300\214\275\033*7>\233\254l\275r\016\234=\225\214\221=\031a\\\275\363\nK\274\235Y\020\276\005H\036=\r\202\367=\302\215\025<\303\005\374;\337\341&<\202(\275<X\'\250<d\367\006>\207\232\347=M\310\007\276\213\227\222\273\343\353R\275\355\324\276=\251`_\274b-\333=h\021\343<\371R\361=\000\021\321\275H\003\023\276G\3646=d\301\230=\251\371\346=E\253\036=\211\211\275\273\361\232J=S\2551=\251\016\353=\335\321\366\275\t\007>\276\201S\267;3+\330<1?\344\274\327I\021>)\317M<\303\030\234\275/e\244=P\325\022\276\007\307>\275\274dG\276V\211\350=\332\227\004\275\016-I>\311q\201=()\033=\024\3647\276\323\371G\272L<\014<Jx\343\275z\375\377=;\376`\275\316$\264=\206\303\016>\307\374\332\275\025M\253=\0238\300<vo\035=V\025\004\275\340\330\"=\316\034\321=\251V\n>3Z\003\276D\344$\275\350\334\234=#7\374=\210\2322>\\\376\036\275\006*d=\313\255\200=P\201\332\275s\204\034\275\373T\035\276r\017.\274\261\235\302\274\336\333m\2753\014\013\276\320\251\203\275\016\307\016\276\341\200K;:j\235\275\313\221E\275E[\261\275Um\023=>-\342=\2510\342\274\361A\'\276\372\315\033>\034\020\004<a~\363\275Si\272=\304[\245\275\320\201&=\223\\\244;jj%\276d\025\t\276\2126\235\275\220\202B\275\2558a=\272\020]=\212*\021>\221n\330\275A\025\233\275\305^+=\353\237\236\275\313A\224;\340\025\210\275\302\225\035=\254\')\275\327\310\262\275\366\342\t\276\234\t@<PW\216\275\332\233\026=\364\360~\275\361V\244=\361<\017>#\307\231=M[K>\312\005\302\273\2653\202=vO\247=ysY=\000W\370=\206AS=Bn\272\275\001\204\277=\354\344\371\275\020f\334\275\3138\373\275\243\376\027>\306\214\013\273j\240\243=\275\317\r\276\016E\016\275e]{=\n\246\n\276\265\305\314\275=\021\330=\234$\177<\364\356)>\272U\371\274C%\215\275\024J\354=\016\017;\275\2177\001\275\354k\275=v\371\205\275\217\262\272=\211)I\274z\351\035>(\250%=?\231I>\364}\373=\237\373\034\276\206\013#\276\266N\260=\342^\263=\221:\270=<\271\014=\230\236\022\276N\355!\276M0\365;\221i\312<\220\335\266\275\301P\352<L\337\031\276\313\236\232;(~\326=\014\215T=\256M\251\275\245j\251\2747\006g=\305V$\276l\337#>|)\017=\365Q?<\257\237\007\276\247\006\307\275\254$\224\274n\330\363\275\241\210$=z\013=>\201X\004>\326\371\234=+\270l=\342\260\324=7\253\250;UM\026>\025\202\250\275\363\243\323\273\244\222\337\275\364\211\032\275\237\220\016>\331\330\330\275We9\274\331\026\205\275\036\3073\274(\243\274\275\354\352\236\2758\364\025>\3317\251\275R-\345\274o\020\n<0\2317>=\036\031\276P\330\372\274\224\261\016>\265\225\330=\277i\304\275\326\227\361\2743\306\014>\351\022\010>\377\253\374\275\336>^\275 \2327\276\364 \017\274\007\243\341\275\223\272\203=\031+\260\275]\333C\275>\321\256=n\027\215\2756s\314\275\376\"0\275\030s\332\275X\312\261\275\205?$=\346G~=.\260\263=y\303u=Y\247\005\276O\315\223\275m\246\275<[k\271=\021\007\n=\334\371\275=;p\363\275\263%\010>Y\215 >\242S\330;g\035\360\274/\343j\275\"+\271=\343,\244=w\365\273\275\301\302\302=c\376\235\2749\331r=.rH<\t\027\363\273\363\364\202=\022\005\006>\032\334\200\274p\236\245=t\352\230=\347=\372\275_\036\254\275y\256\370\275\320hI=6hI>\352m\303\275\257\275\035\276tt\333\273\003\337.>\235;v\275Ip#>\256<\023>\326\263\221\275\311\002\325=\304\030\307\275\332\032#>\361b\265=\241\316#>\\\253\023\275\366\026l=P\227\001>>\000\327=\340\014\306\275o3\314=\277z/\276\377\342*>\333\317\255\275:^\266\275\300\006\013\276\'\202\"\276\035t\021>e\231\242\275\313\362\256\275\231\0055=\364\254V=\322\335\021:\374q\001=\014\375?=\037\350\242=D6\001\275\013p7=\"a\315=q<\000;\247\025\332:\3571\004>\261\013\027>\034-\357=U\235k\274T-\024\274~R\373<\007\267\342=\t\033#:\025\255@=My\232\271\010\252\221\274\306\376\345:\020%9\273\206;Z\274\344\036\200=4|d\275\207\243{\275\363\206\205;KN\367;\217\227\207\274\0059\267<\310\222{\275\374s\021=\311\340\320;\264h\365\275\031\352$\275\357U|\274D\324\307\275L2Q\274\354\022\210>\223\273\256=+\321\177>4\350y\276:{-\276p\377D=\372,\304\275X\364g=\271;2\276o^\271\274\312?\317=\2248\330=+\371\376=\201R+\275Om\216\274\233{\307\274m\210\364\2754\266\250<_\342)\275\354\335K=\2216\016=\226\363u=\010\235\336=\233\032\007\275\317)\241=\306\2325\275\333hs;\211}V=^R\203=\027\250\231=\374\361F\274J\336\021=g\233\263=(\010\344\274\3768\313\274\212\276\214\275\304\013#>?\223\254<S\240r\275e\307\210\274S\246\024\275$\252%<*\315\037=\370\026g\272\370\'H\275\320\323R\275Y\267\213;h\'\022=\037\317\311\275xU\216\275\362\025\032\276\270\226u\275\223}/\274Pg\211=\203fl<\351X\\<\030F\274\275\314\237!=\356\202(>\331\301\276=\247\242\013\275\324\034\215=\n\2731<\037\201\264\274>_O;d\021\232;\340\0278\276\240\336F=\257\005d=Q\333\224\274\213\225\010\275[\267\365=\337~:\275\024Y%>3\223\355\272\000\035)\276\3055\321\274\264\253\332=z7\020>i\240_=\210\221/\275N\215\232=\305iy\275pd\016=\211\215X=\222\030\330\275rk!><\274\247=u\2362\274\004YH\274\t\371\035;\343t\216\274~\016u\274\314\365\353<h\356\213;\221\233w=d\351?=\001\246.=\246\276\027=\363O\347\275\226\241\347=3\254\256\275\255\032\207;\340&\027\272\275\253\240<`;\036\275\250\342|:9\276(\275UDy<=\342\353<\220\365\220\275\010\263\3647]J\211\273\315\005\353\272\250Z8=\375k\251=\205EJ:\264\352y\2759N\213=\245\266\036;\037\300%=\313\377B=\355\325-\273\243\262\026\2768W\314\275\214l\204\273EQw;\034A\311=\353\3300\276\314d\r=5\207\307<.\271f9c=\211>\334!\254\275m\245\230\271\010O?<\307\336\002>\215\234\206=M\365\263:\315\364,=P\212\3479\240$\r\275\2330\221\275-HB\273\236\321\024\2754+\370<\340\035\355\275\310\351\276=\352ip<*\336-=0\317\220=\352\266j;\201\353\250=\231\007C\274\267cr;\303\252]\275s\371\364\274\037&\323<\373S7:}3\217=\302j.=Fwp=\032\257\202<s\333\026\276\277\235(=\206N\330\273\035\021\274:\361\270\026<\354\211\013>\316U\017>qV\214:\225,\304=\031\333\230=p\324\243\270+\361\216<\213\014\352:\266\262\370<*\320\017\275\212_\023<c98\275\030.B<\256,\024=7&\001\276\021a\322<@0o<v\350\007\275\374\372\236\275.\206\205\273N$\223=\233\2448\273\217v\024;\316\255\337=\317\026.\275\213\013\221=\332\351D\275\375\314\372\275Fw\277=\222Tw\275\302v\260\274\230>\344;\273\273\306<b0\263;4\367\372\274h\217\270<c\362\330<\3245\306=\306#\217=\320n\314=\247\366\371=\006\203\001<\200\323\037>\033\303\021={\241\314=\314\027\025\276>\330\314\272aM\233\275\203\332\017=\331\311\\\275~\263\210;\250\235\272=\255\274[=\003\306\376\274\205\306;=\221g\324\275\275\235\215\273\3406\211=\034_\002\274\377\3613\275\232\341\336=\3355\373\275\035\221T<\367\277\t\274\335Y\371\273Aw\237\275\361\030\321\273\n\326\t\276\237>\032=\320\361\021>\273\246\026\276\335\207\035=o\272\006<\226\200\211=`\004x\275+\220\376<\370\234\205<\t:\224\275\354\317D>\'\007\r=\306\3465\276\217@>\275S=%\274\355,\304<|r\325\275p\203\313\271\025\t\331\275\207`\270<\226\243\210=\324\3313\276\331`\335=k\234\311\275\3679\335\273Q8\341\275\330\240\236=D\235\025\276\335\3030\274\000\201\333;\327\243\034\275\r\220z\275\343c\036\276\032\"\">\305\"4=\273D\033<\264\033\306\275\263}\016=\245(\030>\332_\"\276\305\355\376<\016\361\226<\037s6<,\313$= \n\360\275B?\033>\020\215\344<\025I\325\274,\237\001>\371\014\024=\361\030\260<[fU\275\327\'\026\275\035\017\033=)*\211\275\222\231`<Q\2754=@\204\267<\336TH\275>\000@\2755\313\007>;\222\264\27593;\275\355\377\244\275\372\351\r>\333\343\030;\"}h=\000\014.\275\n\257B\274\252\276\205<2\0319=v\005\334\275z%\202=4\237\275<\304{\310<9[\206=\021\014\005\276\353\024|=\227\243E<\201\321\206=I/y\275\000\354\r> \3549=\2146\031=a\026b\275\313\275\023\275\023\"\303\275Lg\220=\362\373\233=\366\030\006>\305e\267={\315\007>\006\'\332<\216\336\017=\035\212\274\275\023L\005\276?s\317=!\333\366\275\200\3744>\300\0222\275*\233\366=P\371>=W\262\013\275d\270\027>\315\342\031\276\351q\310\274cR\306<B\203\233;\214f\256\274\204\261\262\275\'\211\263;\357\256\250\274H\026O\272ia\255\275\364\265`=l\034\025<\312\237\001>*\026\010>\270\205\n\276\330jx=}?\010>\233\203\275=\014\313\014=\266\243\341\273\306\246k=^!\206=~i\"=\023\212\027\2769\r\237=+Bt\275\306_\233\275}\023\003\275y\337;<a%\014\275\330;\207\274C\241\256\274\245Fg=\207~K=t\233,\275\204\340\313<-\034\312\275\303Y\307=1\3624\275\332\345\263=b;\322\275\354\223\262<P\245\325=CX\337\275\272v@>\342g\210\275\313=y>\224|\230\275\214\320\341\2753i\273=\037Y\242=E\363<>p\307/\276hh\256\275\224\365\343\275\242K\000>\363_\022>\305\377i=iR\025\276yB\227\274U\354$>p\223\321=\360+\255<\263\375\001;V\234\\=\rA\237=\036:\246<\245\274(>\035\237\r\276\250+\353\274\365ua<_M\210\274\236C\303=\245\034\231\274\'\336\347\274\224\227\203=\274\2520=8\333V\275\035\252\273<f(7>\260\334\326=\311m\377=\350\241\017\276M\330\217=tp\365=\352\323\017=\0014N\275\350\257\251=.u\"=[h2\275L\351\026>\216\203\237\273\205N\341\275\217\216{\275\025m\235\275\221qI>\320[\244=\273t\331<\261\202\036>+\207\036>|\307\303\275\247\303/;\247g\010\276\315\247\301=Z\240\241\273\237\334\255\274rX\263=\214\213\233\275\273p\240\275\263\272\262=\007&\364\275\255\3360\275x\371\332=\244\207\217\274\302\236\373<\252\254\005\276\017\357\315=L\321=\274\034\036.=\2671@\275\265E\372\275\365O\325=O\254\t\276\361\276\036>2\354\036\276\214\266\313;\340\\\007\276\030\214\326=\222\333\235=<f\022=\203\021\217=@wR\275Q\243\005=oS\334\2753<\226:\211\202;\273U\223\364=\321\275\215=\205\255%=d\'x=hs>\274x)`\275\214\254-=\330z\231\275\326.\376\275\026\242C\275fde\273\273^\201\272\336\t\340=\246&\330=\277\331V:9D\202\274>\221\302<\237\237k\275\213WT\275\217\005\027\274\201\266w\273z~\233\275[Ov<\230U\r\273\375 \220\274\365\300c<\231V!>\274V\227=\353\207\263\275Y\234\333\275\365\230\r\273\'\341*>\366\205\310= \237\233=\351|\007\276\032[i\275\014\010\230\275\026C\000\276\355U\245\2753\026S\275\275\255T\275\203\334\302\273X\231\340=\212\217\355=y\323\246\275\214z\201\274\010*N=\n\365{\275kF\355=\356r\362=n\230\003>\007\202\203\274c\305\315=\253\370\377<\362})\275\360\217.<^{\017=.\314\256\275\374aj;\374\036\262=\316!\240\275*5q\275\006O\302;\316\345q=\264\177\265=-\240r=\212\243\315<\347&\373\274Y\267\030>7\351\343;18\244<\014\354\035=F-\022=\237\351\255\272\354\231\003<$N\226=\026\261\">@\215\230=\324\376\215\273\341\251\005\276\030X\036\274^\362\017\276\245\275\213\275\330WJ\274\207\177#;\032\376\212\275\240H\204\275\237Q}\274iDN=\027\213R=U\342w\275Z\361\250<?\356\267<n^\257\273\367]9\276\376\272\035\275P\326\364=9\005\246=V\0055=\376\336\001\276\023\211s\275\256u\270=v\023\275\275q\315*>\313+\210=\231n\223=\250K\357=p\345j\275\265/!\275I\004o\275q\272\264\275\354 \233\275\360\271\335=(\tu\274\r\360\265\275\032\037\312;\260\242\366\275\324\316\320=2F\304;\342\243\252=\223\321\014>\002eT=\025\030:=\177\335\020>5\347b=\263\233\237<\241\025w\271\370d1>\375)f\275\237Y\327\274t\234X<\260r\027>\346\r4=\3409\365\274\232 \324=\333\240\332=\301\332\027\274st\350=\210;e:\016\240?:\022\315E\272\tS\014>b\226M;qU\313=\257\026\201\274\202\220\215=d\317\356=\366\334\3449v\375?\275\237\217\251<\232\372\352\275\324\377e=\262\362O=\360\357\032\276\246.+\275\2022F=w\254f\275B\303\242\275k\316\213\273F\262\241= b\257=\210f\236\274*\254\326=qj7<\241\236\020=\330\252*<JN\007\276\3009\t\276-\006.=\332\241E>\364\\;:rd\236\275\320\346\003>\240I\376\275\277\236\236<\022\006\265<$0\250<I\324q\275\247\220:>\001,\005\274ep\n>\241Gm=\266J\227\275\351{\374<\345\314\311\274As\323=Gv^\276\267\325M=\300\271c\275p*\n\276!\035\270;\214,\347\274\006]\376=\245\267\352<\317\037\326\273\240\317\036>M\310\214\275\276b\226\275f\013\374\273\013\310\371\2752\364=>\232\n\241=\022\010\\\274\'\275\t;avp<\303\214\033=\232\016\004\2737\327W=\346x%>\030\303\267<OU\376=\331\314*\274\005\332!\275\347\376\212\274\243Q\335;2\325\254=\310T/\275\266\306$\276\357!\030>f\031\215\273\327\361\031=\240\007\020=\207\027\010\274\260t\257=\306\036\202=w\321\244=0|W\275AyI=\220\301$\275\003#\r=\300P\220\275[\246-=V\210a>fX\350=\240]\323\275\n|!>\276#\231=\022\025<\273\035\327\322\275\305\272\005\276\253\214\227<\026v\355\272wK\261\275\016\364H\275\231\234\332<\347\217\366\275H\352\006\273\274\343\211=\002\222v=\221\261\360;\226\332\314\273\2302\022;\032\363\205=\245O\200=DL\242;\363\237\231\275Tg\232<E\254\201=\322}l=\317\232\035\276\210,\325\275*\244\314\275\013gF\275\277\004g\275\353\211\031\274Q\274\000\275\304\261\027\270t8\025\274&\r\261=\2208\017>5\234\2529\312\361\n\273\037_\n<\213$6=\305\245_\275M\226#;\263\005\035<\371\350\277=LS\242=wZN=+\003\256<\001\221P=~\371W\275\234\332_\275}\356{\2758\353\016=\270\216\020\274\0021\"\276\257I\300\275\010\314\240\274\236\"\231\275\343\320\313\274\020w\224\274\005\204R=\245\035]=-E\013=Q\263\302=6..\275r@\257\274Oj\034\2748h\245\275\212Z&;\372\224\306\275\0040\256<~\244\343=\3565<\276\366\020\336=w\307\273<\330P<<\312\301\303=\364\tu\276\362\355\304=>c\360<\335$->.\317\024=\353\315\233=\334\267b=_\250\335<\260\021\002<\326_0>\3076,=\331:\266<N\351\321\273\305\327\014\276\210\246[\275\234C\220=j\251\201>\241\357\005>\272<{\276\302\217\r<\271@\325;\177\3742=\351\276\334<:\247W>!3\302\274\202Q\257<Of\230<\'\357\207=\351\370b\275\267!\347\274v|\344<\244X\222=F\"\204=\004\210\236\275a\322==\016>\324=\302\352\001> \305q=\366c\340=x\351\213<\240;\224=\220\010\305\274\330\341\240:{\312\206=\242\351_\275\036\021\271<\227\353N\274\207\275\246=\325\367\025\272EQ\232<?\006\275\275\354+\311\274\345\241\037=\343<\245=\351\217{=\310\251>>\013+)\276P\336\223\275O\333\224\274\255\226\274\275\310\357\006=\371\326\215<wM\005>J\213\"\275Z9\n=\200\024\345=6^\325\275I\320\325\275f:\024>\nG\306\275\346\255\247\274.j\271\274\334vd8\277#\004\275\332t\001=c\260\330<k\304\243=A\267%\2762\315\251\275\323\205V=C\306\273\274E\243\302\2747@$\276\237\365V\275\327\001\217<6U\034<v\302x\276:\215\017\276\302\243\030\274\350E:\275\022\311\n<4\001\245\274\372\033\017>\346L\260\273\221a\013=\021\374\203=j\222\202=(\007\005\276\037\2544=\267\024\332\275\346\2066=\343\2219\275\020:,=\346\346\241\275\036%\016\273X\264u\271~\226\231\274M\277\356=$:\340<\206\356\"=\025\237z<\361Q\342=\360\254%\276\\\2613<70\215<O\002z=\250&\253<\263!\233=\024E4>\006:_\275IQg;{j\001\276d\177\224\275\302\021\352=v\003H\276\334x\356\274\351\2072\276zQU=\273\330\000>\346\304\367\273g\315\003\274\031\262\032\276*\033->\236\006\036=]\374\262=<\272\277=\302\377\005<k\335a=Z\262E=\t\334\r\275\371\021O=\200\307\302=\374b\354\275\224\244\364\274Q\265\030\276\273*\310\275\332\330\017\276\345\230\260\275!\3529;\020\334\263<\247\031r\275,\025\014>\016%n\275\310Ev<\357Y\260\275\355\274\344\274II\353=\370\021\022:?z^\275o\243\352=\337P\232=\014\2412\276\266\266\006=i\353\264=\016\303\001>o\240\354\274\317\005C=\360\272\204\272\235\3156=\265\364V>\212\3075>\204N/\276\362\236\214\275~D\002\276\3705\214=C\260\203\275\365?\035=Cz\263=i\002\363\275\264\007\r>\325c\305=\231\246\020=\265\006H\275{v\221\274\221\014\027\275\217^J\274\207>\007>\362\017\350\275\013\036\365\274i\270\237\275\337\0316\274/\215\002>\014\335\300\275GA =5\337\004\276<f\320\275]\276\251=\244\000*\276\340\303\016>\271WM=F\241\346;m\021\007\276v\031N=Z\021\026>\242\345\327<x\254\360=S,\227<%\351\202=\305\010\267=\217\324\225\274\007\006B\275\355\"\354\275\020\332\223;Vk\365\271\246\210\022>\30483={8\363:V\321\t\276\326\2676=\004\244\262\275+^\035;{f\331;Jn\021;\367K\311\275)\263\020>B2Q<\250\r\007=d\307\355=\026p\345<\347\370i\274\2324\306\274\006\214\376;m;\237\274p@#>6\333?<\315\266\025\275\307\261\223=M:\364=\336\374H\276\266a\324<\353\313\022\276\023\346\214\276\006\217\">\030\242(\276\013\035\223=F\235\330<\202\241\314\275\220o\214\275\324\t\244=n\3234=k~7\273\020H\344<T|\031>n\210{\274\326\303\305<\322\215\313\275Sme<\002\201w=\354\242#=\262\273O>\003=\034\276\220\275?=\177/\207;,\273\300;\003\321z<\206\234\273\275\336`\353\275\020\356\270<%*\361;^\366s=bE\251\274\277\022\323\275\260v/\274\203\006\331=K`\024\276\273gU=I\221K\273\266\375\255\274o\236^>\271U!>\014-\275;\356\177\252\2751@\226<t\234\025\275\200I\252=~\360\024<>nq;1B\226;\342\254\256=\016\251\254=\227\207\205=\225\352;\276\3266h=\257\331\206=\2128\304\274f\365\305\275\351\025\356=\265\271\3379\3124\316=B\222p=R3\211=\312Z\024>5-\231=\336|\223\274\301\257N\274:\227\214=\333j\211\275\340s\232\274\261\333\217\275E\242\r>\374\350\332=\241\224\017>\377\26199\341\314\r>\344\305^\276\350\254\227\274c{\257<\262U\"=\027\244\233\2756\'\020>\0055\250\275\031\352\235=\036\002~=\201\336I=\317w\200\275\017+\366\274\344\r\222\275X\177\306\275\023\367\274:\203\363\000\273\357\366\305\272PY\243=w\376d\275.\254\005\276\344\213<<\213\262_\275\221\010\253=\353\305r=\321\321\315\275tc\360=\323\327\211;\334$\250\272\310\241\242\275*\\\210\275\007C`<Adk>g\037\213<rS\323=\370\345W\275(8u<\273B\t\274\020\361M\275j\231Y=\013E\375=\203[\342<\232\364D=\3265\224\275\375\245[<?B\211=f-;<\207o\277\273_\270E=\366\322\0259H\026\005\273!\257\361\275/\376\302;tv\323=+\335\264=\035\361h\275\010x\361\275\3156\323\275\272\036\372;d\327\205=\336\016\244\274\324\217\306=\374\222\r=\240z\034>\214\221\320\275\3577\004=K[\342\275\030?$=r\236w\274\260\266\270<t\375L=\327\350.\276\352Zg\276\027<\341\274`=\302=;5\016><\250\"\272$\007\213=\370\224\327=\017\200\351;u\"\234=\205>\234=\272;\223=\024\241\237\274\272\324\017\275\246\346\001\276\240\355\254\273\357{\354\275ut\315=\036\2008=Hv\213\273\370\255h=\263\364\211<T\360\273\275G\241\373;\037Y\006\274,\t\272= 2\212\275\205 \376<\374\317\004>-\372\326\274\367\376S=@f5\275r\021\313=\307\021\312\275\306\2143\275\255\370\"\274\026T\321\275\346\002Y\273\231\240\232\275\305-\204\2743\241\257<&\237\376=\250\3672\275\376\003\225=c\023\344\274\270{y=\201\366\237<HO-=B\006\374;$Xa>\252?\353<\327q\332=\205\326\010\276S\257\361=V\025\026>\325\275\320=\223\230\030\275tu\241=\240\231\363\275\236g\375\274h\016\362\274\001Dk<\"n\373=\250\205!\276\0254 =E\247\004>\300\3049=A\317\266=\245>\035<#}\336\2751\310x<\375\177==\007\234\3139\257\373\242=\020\250@<\237r(\275_\332\306\274\260#\335\275\261\007h\272`\305\240\275\032_\210=\375K\310=\016\304\003\276\371\220\215=\350p\013:\3055\236\273r\263\006\276\013/^=\352\334|:y\207\252=\222\020\n\274xBn\273\301\247\262\274\376\213\3448\327\277\277:\313\273\035=\347\376\227\274T\236\255=\253\031\263\273\340\307:\275\034\243\370\274!:\030=g\200\252=]\275\006\276`9\026\273\221\303\321\272T\357\310\274\344v\363;\3065\243\275\033;l\275\rF:>\365\2700=\214\245A=*\356a\275!\001\342=\247\224\236\275\272\262X\275q\205w=\246h\232\275\273G\222<-h\310\275\365\263\253=\364\223\363=\366\263\000\274\352_<>\001\016D;\256\n\r=A\313\364\273\303\003\221\274\035\017\251\274!\020\361\273\335\037\264<\264\351\320=\264\3118\275\361\022h\275\312J\344=9\223\031;\351\315\325=\221\260A=\361\275\005=\322+H9\312/\244=D\211\260\274zT\014<\223=\320\275\031qm;\010D\003\275jo;=\274\022\224;>:\010<%\352\017\275\260\'\306<?\233\247;)\342(\274Z\364\373\274\312D\205\274\206x)\275\251\211\225\2723WA\275\315&\255<\003M\253\273\242uV\274-\307\245\274\202v\020=\220\365\205\275\2219\000=\244\355\344=\325A=\274L\346z;\247\034\225<\351\244\256=I\365\234\274\341\324R\274d\203\320\275\330\032\226\274c\362B\275\331\261\257=o\"\265\275o\264W<\326\354\342<\022\"\207\275\250N\310\275}\363\241=\376\000\010=\260`\371<Gvg=`_\206\275\227\022\322;Z\007\272\275A\305\223\275\327\334\235\275\213\243W\275\237\317\232\275D\0041\273\000\334\004=N\366\223;\216\006\"\276\326\t\267<B\3778\275fu\323\275\355\005\224\273\343\323\202\273\355\206\036\275\214\223\257\275M{\337<\235\'6\275\375\235\344;u\304\206=\033\026\226=0\036\203=\314)\201\274\"Q\030;\272\233\r\272 w\346:\000(D>-\321\364\275\230\377s9\037\313M=\230s\200\274\216wI=\361\204E=:\356\224\273\317\336\214:\177/U=qy\307<\376\376p\274_\262\026<\323w_=\'\313\254\275\237\226c=vZ/=.uE\276\305?\035<IlM=\314\276\\;N\2100\275\375\271\203\275a\266\270\274~\254\005>$\002\236<\331\322)\275bJ\253=\236\201\n>\225:\031=_6\254=\033\371s\275E\345\373\274\252\236:=\251\260\201= \371\305\275ZY9\275o\300\202\273\307f\027>7\204\252\273\234\303\021>v\372\242\274\303r\000>4\355\020\276\374y\032<\305\265\322\274\245\374\036\276\371.\343\274#\315\325=\212\006S\274[i\033\274\264\032A\276\217\200\322\275\203.\027\275\030\263\237<\321GR\275\254`\266\274\337\337D\275\030\252\005>\224\315<\276\345\217\235\275\343N\275\2748\370\237\274i?j\275\022*w=\342\204\031\276<\"\247\274\267o\006\275\307r\324\275\206V\375\275:~n;\267\274G\274\030b\\\275\225\343\266\275Ex\324\275\225\335\235\275\225\374\371<\357\332\177\275\320\353\307\2757\330Z=\240q\241<>\003\377\275\372U\002\276\265\242(\275\3637\217=\024\316\302\274\313\244\235=\310~\247=\'J!\276\243\023\201\275\353#\225;NL\252=l\374\346\274\256\372/=\302\260\306=\271\032\226=q\t\277=\302\210\270=\200dJ\272\026]V\275\324\327\217=#\353\243\275\277\3718\276]\347=<\3115\327\275\n\213\266\274\327\220.=\034\235M\275~p\021>S\214\000;\365\004\324;\035y \274\276\317l=\307\263\253<?\353%\2733\336>>\233\332i\275ev\243=\262\250f=\000\233]<\374\000T\275\355g\224=D2\277\274\255\371\321=\245#\276\275\033\323_\275\036\357\311\272\325?\021\274\363\022\361=\323\322\364\2736\2174:A\021\311\275}.J\275\326m#<\354\250\214=R\237z\273\205\317\233<l\352\240\275xGZ\273\344k(\276(\324\031<\030\277\302<\257a|\275\276\237\345\274\237t8\274\365r\350=a\257\314;QN6\275\263#\361\275\344DN<\346n`\275\301\276 >s\340\204\275\r\303\302\275\347\342\237<u\366\340\275l\310\222=5W\262\275EGH=\346\366b=\252\375\246\275t2\252=\345G\223\275\226\340\245\275\020V\221\275\025\020\016>\343\346\316\275\'M\251\272a\363\206=\335\014\273\275|\2036\276\221\305\355=\177qk<\222\211$=O\007D>e\207t=aD\252\275\2724\254\275\260\321\347\273\226\260x\275\247\223\034=&\343\002\275\370La\274K\362\000\276\344\0313\2768\362\210:X$L=\"0\313\275;\000\364\275dA\273\275\213\235\030\275\262\211\343\274\034\n\356\275\327f\025\276\351\241\226<\210t5\276\222\"i=n\221\227=\337\204\245=\263\357\303\274\036E\340\274wz\302\275\027I^=\n\035\275\275\037\330\377<\032\210F=\271\032\007>\004M\314\275\320\013\233\275^(}=\334\305\265=\353*\314=T\337\371\275\335\210\003\274\226K\325<\017-\363\274\025\314\034\276z]\320\273\235\010/\276\026,u=?A\017<\014\240z=\005\217e\275\324\262 \275r\"\234\275\314[\001\276\211\370\010>W\350\376\274T\374\326=\205\205Q=x\272\034>\304\361\025\275\360\3148\275\233`\004\276\n2[: a\226=\312\266\270\275\200\013\202\274\033\365\332=\007z\243\275\242P\003=\362\267\023<\372\343{\273P\241\330=\376d\030\274f\022L\275&\341\230<\235U\024>\204\034\032;B\002\315=\365\330m<\220\265;\2746\350\271<\361\022\250\273B\372\302:#\304\031\272w\303\005>r\362\250\275o\034\217\272s\362j\275\033\324\265;\250\013\241\275FK\217=\352\357\210\272{\232i\274k4\211\273\307\177\376<\342\235\336=\203\364\203\274D\016\242\275\200\006\364<g\027a\2757\367\215=\220x^=_D\360;\262u*>\213\320>=ZJ\377<\315\267o=[:\314=\200\334C\275\370\324\261=\204N\250\275\027\236\266<\301&\324;\376\005\n>\371\230+\275\326z\372\273!\232X=\274W;\274h\2119<\362g\200=\224gI>\n\370K=\206\230\256;|[M;qi\025<\241D\020=O4\001\275#*\263\274\251\217\253;\236\272S\274A/&>\001\300f\275\245|\366=}\374\\=\315\304\303\273k\t\355\2754\016{=\250\\h\275\250\025\272\273\216B\255\275\271\251\302=\023\200\323=\320P\277=\251\334p=\314\301(=`\322\251\275\204\022W;\342\316,<\253f\215\274/\006\267\275\000&\372\273\223X\202=\272?\213<\253\336\222\275N\244\322<\367-\353\272i\307\310\274\350\017\277\274\020\273\t\275\314o5<\267\376O;rRn\274\177\263\005>\246f\241<\"\370\017\275KEn=\016\326\321\275 \365\241\275p\025\027>\272KR\274\316%:=\233\007(\275\303h\r\275PH\204=\215h\265=7b2\276\365\373V=MA;=\223\3457\273f&\203<Q\355[=|\363\020=*\305\311=\320\002\304\275\003\304\325=A\351&=\357:\350=n0\333<\246\023\346=\244\266/<H\212T\274\023~\316=P\334\227\274\260\346\'=HW\215<\014\231\356=L\002\257=.&\325:\267\203C\273\234\3573=w_x\274\3511\251\274\317\274\243\272\007\330\363;\377\326\252;\230h_\274\211Y\224;a\230#=grk\275XIC<Q\302\3619\3130u;+U.<\277-\"<qSE\272Ut\223<\217\013\247:\336:\333\272_6,=s\364\014\272\332\001\306;6QF\271\037\244\210\273\034\264\223<h\332^:\362\317\215<6\2408\275r\002V\274\202\270\372\274\032\244\200\274\326\321\317;\231\022\t\275\004pA\274\006a\335;\316\335}\273\322\253\215=E\027\032=\370!\264\274D\332\276\275\357\215)>\317\\\331=\366\257\360\274-sg<\036\324\"<%!\375=X\305=\274q=\221<\014\301\220=.|\261\275!U\n\276h\357\330=\264(*:\320\267\305=\362\233k<\310\277\226\275x\006\270<\332>y\274\321\236\307\275\313\364p=\332z\013\275v\356&=\262\021\000\275\275\202\263\273}\254\237\274ub\342\274_\007\304\274w\201G\272\304\312\252\275\n\306\204\275\266\237\303\273\352\027T\273@\t\367\274~5\030\275 xw\274\263\020i;\0142\3619d\244\251\275\314e\233\273]\005\304\272\300\306[;A\005};\003\315\036\274\320\217\337\274\301\213\305\272\373\233<<S\023\230:=}\240<hP\000\272\300\254\2479\230g\267\275U\340\255\274\031\246\265\274\260\001\010<\201\006\270\274\312\252\203=`\"\377\272\030\300\271;\260n~\275\355,A\273\030X\035\275\253/\254;E<\272\274$\373\355=&\260\205<\235\236\033\274o)\326\274Y\346~=?w\273<y\016\340<\306\244t\275Fm\r=\337\020\034\275\311\202\256\273\341\313\232\2752\013C=)8\006=\332G\212=\2542\274\275\346\220\352:X\027\230\2751\271I=!\356\326<\301\023{<\255\367\201\274\367\244\n\274 \t\022;\202Xe:\231\362\036\273%?\275;\216X\314;\'\357\2359\237D\234\273\213F0\274\257$\203\274\332\017\345\273\325\370e\2740\224\274\274\334W\362:\243~N\271\014e\010\273\24477\275*\215!\273/\366;:zm\237\274c\035\r:I\254\035\273\220\240\237\274\010@\2069\213\037\350\273\303y\035\273\356\267\267;5 \023;\302\352\201;\021\316\367;\271\353v<\331m\177;\360\247\017\274z\245\365=\357\227\376\272\355\367\265<\204\246(=\303\333\017\273\370!\307\272\024R\227\275!U\336\275\213\020J\275\237\364\254\275\334\312\212<~\312\340\274\036\262\014\274\207?\3008\274\266\225\274\235\252\232=\226~\033\274o\334\267\275J\341\236<M\017I\275\334\t\271=C\360\217<\271\240 \2717p\257\275ju\224\274\344/\233\275\221\004\273\274\n\364\317;\334\354\206=\2175\026=h-d;\376x\330<\005\334Y;\212g\237:.\255\373<9\272\"<>#O;\376\355^:\303\302\363\273.\036\326\274\005;s\272\306\260\275\274y\026\251=\371\177%<X~\r<{\203\244\271\"9\240:d<l<\335\241\324<T\330\201:\023\257\312\274\n\217\226\273\313\350\030\274I/\325:J\303\2149\034\221\006;\200\300\177;F\323\023\274Z\355\361\273\376\352\302;\200\225g=W\270\212=\257\225i;\3160\006;\225\026\020\274o\0173=)b\245<\322\026\320=\334j\201<\023\200\236:\232\024\322;\201\224%=.\367\231<~\270\201\273\366]\014=CB\323:m\360\332;\272\261\221\275\363\214\n<\035\004P<\321\001\006\275\335\240\362\274\221\217^\275\237,4\274\352\245\023\274\023\340\257=j<\306;\235c\207=\366d\314<\301\013\331\274\317\274\335<\232)\340;\236\002\244;\'\376\026=0\020%<\255\007\360\272[\361\331\274\321\305v::\241\007\276\225\240\337<\245sY=\336\336\027\275\321\304\r>#[d\275\007`\300=\266Q\257<e\031\244\275\177w\336\275\311\252\037=bs\273:\261\335\353:\225\356\004\276M\321\360\275e\022\225:\334c\272=uJ\213:\n\236R=\307u\r\275\221\367\357:Px<\274d\373\345\274\257\3360\274\207\177\017<S\274[:/C\237\275\275\245\312=z\034t\275\324\305\362\274\3324\006\276@I9\273[7->\223\265k=sX9=g;^\275\271\341e=y\362\246<\377*Z\275\022\223\350\275\035\367\220\275\266\253\021;_\232\343\274\021\225\271\2749\372`\274&S(=\r2\251\274&\241)9\262j\007>\373\351\200\275@\312\">\036\357A\276/\234\233\273[\021\217=\337\257\201\275\217\0019\275\242c\343=\303\253c\274\226\030\377=H(u=\"%E=\325,T\275\312:\020\273\"8K;\371\204\251\274T\354B=\303\272\224\274\307\250\316\272\263\"\n>\303\231\341=\010\330\264=\317\331\304=\266\2326>\271\2201=\002L\243=\022B0<\242\233(<\351\"\003>#\372\365<d\353\206;\276\004\367\274\335\354\271\275\353C\002=M\377\256\274u\203g;\021\034\323<n\236\230\274d\3064=\311\033c=]q\370\274\200\302\004>\246\030w=\026/\034\275\001\251\323<h\245f<\202\224\334\274\357\334f=\226D\354\2759\232\207=Tu\336\273\214Z\350=\336\352\332=\022f6=q-\312<\244\266\360\274\202\331\230\273c0\244=c\'\321\275\230\254\246<\031\225\213=2w\306\275\214\232\321=\306\3212>U(\206\275v\016K=\337\231\004\276\035\326\320=kn\302\275T\207\224=\310\003\227=\374\"-\275\262m\002\275\362\364\277<\274F\230=\345\354\223\275I*-=hB0\275\330\344\017\274\031n\'=\345\364\236<b8\002\276;&M\275\303\014\004\276\317u\261<\257\030\246\275\204$\014\275:S\216=t:\035\276\220h^\275\355\373\356\273\320\343_\273\321\230\027>\025&\364\272G\304\207\273\333(\177=\317w\177\274\325\316\317\274AK\223=\267E)\274\024\370\030<\rm\231\275\023\'\032\274\t\203\201\275f2\360:\264ZS<\341\336\271\2757Z\326\274\211\240\006>\270\267\212=\245d\202<\307\017\211\275*GF\275F\332\232=\361\306\362=f\337*>\235\244\243<\022\211$\276\210*s=\n|\335\275\362\n\303=\315W\017\275IF\312\275\"D\007>\354\253p\275\254{\025\275\364\275\367\275\3230\357\275\320\217\206>\357\202\350=\2426\237\274=\320\020<\270l\336=\362q =\201\325\350\275\244s\365<5\274Z;\351!\212<\350\265\006\275Q\2673=&\025@<\003-\272<\025\236k\274\311\214#=\365\3148\275\367\024\257\275\222\205\257<\336\345\365\275\037\320I\274<Y\261<d\000\314=\250\026\336\2757\305S\275\207\005\266\275\034}\303<\272\357\267\273\211\241\013=\207/&>\2060 < \373\t>\2755M=/\277/=\032\207\200\2769dZ\274\247\264\010=\001j\330<\023\001N<L[\\\275Z\351\022\275\264\2626\275\320\311\005>\367\314T=\217\'\201\275\300,\300\274\304#1>&\263\337\275\316V\230\274\355\036\326\275f\275\260=c\000\026>0\270c=\261\250\242=\272d\r>F\243>=\2055\010\276/\377\316\275Pu\311\275f\326n=k\266C\275\3306$\275\016\213\227=\263\016\255\275u\277\365\275\001\220o\275q\250\204=\335A\212=f\224\004\276\'D\213\275\312\210\027\276\250\335\036\276\260N\360;o\np=(\262/\276\355\002\300=R\"Q\275\004\233)\274R\276r:\231\371I=>\337\303\274\224%\027\274J\213\247\273\2112\014>\004\324\256<<\306!\273\214\024\000\275Sp\036=\007\033\234=\335+#;\277\262\t\271Y\241W;\207P\\>\303\2612=kq\201\271\245\270\237\273\313\037!\274\034\214\014\275>,\237\274@\004n:\220\225\222\273~N\\=\243\265\225\275\307s\211\274R\016\234;\002\231\343\275]\246\301\275\342\277\207\274U\213\247\275CC$\276\207\223\006\273\331yp=T\013\243\272\247\245\250\274\203\265K=a\222\010\276\314x.\275j\024\302=3\177\317=\266\376\372=\232q\300\275\373\014\177\275\027\201\377<\244\2731\275\316t\352\275\332\334\303<\257p \276\002\316.=n<\r\276\2730\205=s\213#\274@I\027\273V\327\014\276\024\036.=\224M\033\274\224\000\022=\265zW<LU\002>\300a\013=\022\377\202=\313Z\242\274v\311\010=\203\357D:\002\333\240;\0071\277\274{\355W=\250wD\274\322+\376=\215\321\004<\226\341\037=\356yl=\321\312\037\276L\n\362\274B\334\032=\244\033\277\273g.Y\274\344{\364<\340\226\350=\365\315M\272\2018\274=\264\313\342<P2C\275\363P\336\274S\014W;\322\013Z\275%\272\241\274\303\2732\275\302\372\211=^\324\030;\322\223\222\275\t\035\025=3\030\027\275\340\274\t\275\346\2406=\014\2130>v\306\336\275@\332\r\276.\260\026\275\265t\341<\014\245\365=?*\032=\255\3537=y\240\224\275\262\002\212=\264\300\234\273\305n\236\272Z\353\214\274\013\004m=\247\305\214\271^\204H=z0\227\2758\007\313\273\307\252\302\274F,\314=Q\202\223<\270\237\362<\240=\007<6(\220=\222\010\274\274\207\270\245=\314\370\343=E\317,\276F$\245\275\334e\230<+\313\311\274g\266\306<I\177\242;)\371\020>\376\264\212=\366\372\241=7R\037=\255K\000\276_5f\27513\'\275G\255\303=\366\200\272\275/\025h>\027\001\314\273\234nU;U\243\330:\274\025\346=:\216\025\273DA\247\2723\206\360=\345\004\232\274y\357\250\273\221\2173\275\374\320@;\270\307a\274\002M\323\274\036{$\275\251\256\315\275[|\351\274g\330\025=S\304\202<$\254\246\275$`O=\315\320P\274n\336\036\274T&\355\274y\333\207\274\321I\301<\334\020\255\275\312*\016=0\t\216\274\251*\010\276\311\222r<\3719\007\276\332 \023\276!\357\202\275\2000\213;\013\031_\275v\257(>\263c\223\275/\001}=\237Kw=6\343\277=-\312\351=\305\0060<\033=\325\273IO\'\276>\264\024\273\222\322d\273(\265\266=L&\r\275\240\211\027>\241\t9\274\233\273\030=\003\214\255\275\301/i\275\321\252%<&\t\234=\350\371\253<\000\371\326<#\207\233<_\222\026>\323\224\247=_\366w=N\006\347\275&\002N=\230\343B>\323\026\333\275\354H0<\3321\200<\031\207e\275\037\212\026\276l\260\017<\244$\226\275=\334\t>k\333\001>Hj\302=x\274\214;M\345\030=*\030\255;\274Y\212=\203\271\036\274/\353\361\274@\333\326;4\216\334\275\037\257\272=\215\334\371\275\314>\273\275\033\232^\273\207\316x\275\352\355\247\275\036\330\340\275\273\2061\275\270r2\275\375\023\202=\271\234o\275\030\227\312\275v\263\261\275\n\264\026>\026\255I\275\256\3379=d\306\311<\332\256\001=.\216\016\275\320\337\367=y\265\353=\273\254\304\274\236H\014>\001\322\t>\177\346\033\276 \222\341\275I0\016\276[ \202\275]\256\006>mD\000\274\275!\317\275=\231\202=\203\232\003<\030p\014\276%\374\233\275\350\303\367;2\324*<B\272\341=\341q\234=I\362\334<i\346\347\275of\233\275\324\032\243=>\236M=\361\314\214\275Y!\362\275ew<\273\232\234^:{M <\250\374|=\275m$=f\252\235\273\317\334\232<a6(\273\326f\006=\203\244\221=\350\3433:\265\3452\274P\031\000<C\357g=H\334\337\274\025\225+\275\2308\014>\307\251\202<K\205\322\275)\313\257\275\332\255\366;M\353\\\274\356^\245=H\\\206=\346\246\265\274\325\3438\2747\234\033<\310n\352=I\240\350:\326\203\260\275]\3147>\n^\033\27633\032\275\316Z\243=/\324\235=\321\023T>\271\356\030\275.\324x\275\254\002\271<\032%\305\275\324\376\225=P\315\232=,\026\214\273\021d\030\276\206\0305\274\003*\307=q2T\276\330{F\275\367\326#\276\343\014\017>\327>%\276\030\320\017\276\350K^\275\004T@<\216\025\302\274\323Jc=\216\020\300\274M\332\247\274\301\366j\275\200\237\004\276\361\035\331:;\031G=xh\020\276Z\317\177\275-\324\237\275\251&1\275W\034\316;\020~\004>[E\256\275,\032\3479&x\234\275fD^\275KhC\275\246;\004>\235Z\262;\004yZ=q\372\031\275\267]\276<\037\367\310\275U`\310\275\333\312]\275\334F\230\275\262|\003\276!\301\017\274\200-\\\273m%\352\275\373Z\361\2756\225\000>\317\001\355<^{\201;\001\266\332\274_\0318=5a0\273%.\253=\0240\357=\005\213\021\276%\211\272\275.\0132\275\316\237\355\274\253P\354\275\227!\253:\017\250\255<JO0\275r\222.>\352\262\201=\313\223\210\275`\246v=\352[\334\274$\307\251\275\344\017C>\241\352q\275\323\351\'\276\034\'8\275~&\324\275\224E\360\275\030\177\331\274{\361K=64\234\273\250\272)>/?^=\374\2318\275\355\010\212<\312\234\252=\257\370\006\275\305LZ\275\224\342\036=!\0275\273aH\212\275G;\335\274ia\376;H\214V\271\n\361\177<\311\275\016\274\'\311\210:\000\216\250\274\350\374\303:\033\000\027\275\3229\212=\207\366m\272,\307\273:\356\331\244:5(_\274\r\373>=\361q\356\273\240\355\177=P\300\372<\037\375\333\274\254>/=\023\315C\272\325X\032<\030\275\330\273\266x1>\236\363N<2\372\227<!Kf=\020\317\240\275f\205\202\275\273\033\303=\240C\205=\352\023$<\004s\306<\244\246b=\\a\251\275\330\344h>\216\201\221=\247\240d\275\351\240H>\224\3154\276\210\260j\275\032\276\034>\353{T:\376\261}\2741\236\361\274\254\001t\275\266\036\023>\305\356\023\275\224\357m\275\'0F=\300x\206\274\227\205o\275Y]\243<.c\367\273\317_\022>\373L\371\275\340\313\231\274\336\003\271:\335-W\2745h\005>@\223\212=\251\0274>we@\275\022\203v\275S8\311\275\200\017\300<B\037\272\273\304Bp\272md-\275\222K\275:d^\247=\357=/=\026\300~=\031\270V\273\310\223\262\272\300\r\306<\272\374\227<\2574g>\275\244:\275\341\320\324\274\2375e<\200\303\024=\271\203\023\275\353[j=87Z=B\025#=P@\327<7\241r=j\311\377\274\372\350\270<\321^\373<\324\246O=\365a6<ob:;\230\210{=g)\n\275sHI\275<\242|\275r\207\030\2756th<D\013\261\274[\264 =\330\213\'<\017\327V\275ns\236<`\374\236=\266\340\003\276\026\266W\274X\277\251<d\321\357=\001\\^\274\356\332\212<}\317Z\274\025#\004=aV\307\274:Rq=&\233\320\272\325-L\273\001a\004\272\342\236\362;\360~4\275\022\312M\274\325\020\376=GNE\275\376Us<d4\331<\037\377==\205V\250\275p\360\217<n\372R:\347Q\251\273\322\345a\276k\305\236\275\226\332\243\271v)\234=4\333\017<\266\362\216<\354\n&<\003^\316\270\356\234\327\272*Q\213\274\rx\023\275\202\211\n;\262\211\273\271h\325\240\275\'N\216\275\277\351\327\273\312\343x\275\314i\014>\371\376\303;\254o\274=\240r\370<-WG\271\334@\310<\327\355\010><i\016>P\013\316\275\301\273\357\275H\312T\275\357\244\323=d\244\211=\200\033\000=VEJ\275S9\302\273)4\204\274&\361\263<\374W)\276e\021\261\275\002\354\303=Hl\305=\232Qc9f\246E;&\010\\<\026O\315=[\271\267\2754uK;\002#o=\020\263W\275\363V\373\273\261\257\342\274\367\264>\274\242\206C\273\354\223\314\2740g\306<\320\262\210<\344;*\272j%\364\274T\220\301\274\333\033\"\275R\017<\275\351?R\275\336[\206<\3256\365\2743\032\010\271\335\026\245;\327y\222=\005Rx\275-\030\3759\361;\005\275\341\351n\274#\022+\275]tV=\303%\372\272\313\316\362\274\370\237\027<\025\344=\2753\242\307\275\023\314\302;\311\302O=:\303\257\275\357\232M<A\023\313\274s\032\026\274\2209\334\275D\231\200=\016S\245=\020\037\007\275\310y\367\273\276O\000\275|Q\234=\241\367&\275\r\312\342\275\232\306G\275\204B4<\247\254\266\274cG\245<M\033t=Bi\300<\230\370\016=Ui\201=X/\335=,\343\232<\351\005\025\275\027g\303=\240i\004\2750X\225=L6]\275r\375\344\275u6\022<\361#\237=\013a\207=`#\215\275\347\351\355\274\035\225\336\273\247\024\254\275r\370\246;{^o\275b\227\245;\262wE\275\024\203\004\275\230\013[\274\316#U=\367\2049\275_\351\216<\036Ky\275\031\221Z\274b\345\225=\260.w;\037M\t;\271\014/\276\001;\363=\003\322\205\271\333c\246\274\315\215\264<`6\355=\346!\340\275[X\256;\014<G\274$\377\262=\334^\343\273\0346\357=\304Jk\274\016\020\216\275\257\336\247<\035\367\262\275\334W\022\276\206g\305=-G\021\274\336Z\016\276\037Q\376=6)L=}\207\377=\037\366\t>v@\031>[@\001<x0(\276\236u\213\275<A\250=\305\240v=l\267c\273V\270\201\275\367\253F\275il\346=\263\241\340<\370\224\t\273.3p\275=`.>^\226\256=\347\324U\274\353G(\276a\361\026\275K\366$\275\245\232\210=\313\212\317<\236\266\204=\3136\204<\347\'\304\275\020\276\260\275Vp#=\177\357P<UJ\270\275\365*o\274\010\276\243\275\225\203\326\273o\330\202\275\345f\320\274\'\327b\275\322\311\340\275O\033\t<\\\203\207=R\"\343=~6&\274\231.\215;\020\306\032>\353\220\037=\234R\016<\036I\345=\235x\351\275\370\036\264\274\237\030Q\275\356\213\222<u\031\243\275\260\037\322;\3326\266=\245\267\234=\024F\016\275\2618F>=>\241=;\262\226\275\251\023\236=\024!\305\275\363\031.\275K\231\253\275\375\216\365<\234^\226\275\336+\326\275\374\257\367\275N\250z\275-g\222\275/\261\252<k\261m<\242C\210\273\'LT\273\357d_=\203\335\301\274\210\262)\273cQL\275h\227$\275\001\273@\275\205&\275<\310\376\001>\026\'\325=\251\251~=\276\277->\311\314\177=w\272\342=X\213k=\355\005\226=\360\'\353\274\213<\223\275\215_\377<\030.\346=}vb=\365\260S\271\006\203\354<\35493\275d\346v=s\244\324\2738o&>\246\317\316<$1\r\276\024\224\230\275\202K\005<\026\367\\\275\027\345\276<\351A\026:\306\320S\273\024\367@>}E\226=\004\241\234\272TH\325\275\372\222\004\275\310\341M\274C\035\314=y0b\273h\026\262<\204V\355\274\207 5\275\0078\301;\216y]\273\220\335\002=J\364\036;\353\237\275\275I\223%\275\220\323\025>\305\005\036:\225\266x\275\251;\277=\345\363\031;\370\226\235\2759f\374<\2525j<;\321O\275\215X\356<t\225\341=\350}>\275S\023\252<\211\013\200=\223\244\264=\37444<\343\211\205\275\333:n\274X\036\252\275\023\'\340=\014\335v=\264(\260=\\6h;6\321\235=\036\333\330;p\256\234\275\035t}<30\006\2713\210\265\275h\325[=\001\310\226\275B!\304\275\244k\372\275\034\320\t\273\033\272\351\275\363\231E\275Ua\207\275\250;\003;\204L\026<\274^\350\275J\261\213\275\252\252|\274\027\202\216=\364)\303\275/Y\317\275\334K#\275U\235.\274\202\265\236\274\216t^\274\026*\336\272([~=\311\316%\275\003\3422=\202)\017\274\336&4\274\235 \221=\300sX=\007\307l\274\"\\\333\275!\366~<\325\"\351\275\014y\342\273\006\307\212=\335\016\247=\371\315C=\000D\272\274\306%@\275\271\321u\275GF\200\275@\225r\274\223b\336\275KV\256=Dw\227=\266\364\203=j/t\275\345\263F\2756\357t=\\\246)<\037\343\300\2738\306m\275\023z%=\344]\023>\306.\252\274\206\305\335\274\3675\252\2755\016\226\275\230\253\264\275$x\253\274\030\272\275\275\006\025\035\275X\373\035\275\376\205\002\276\274\020\024\276z1\214\273\257\341\315\275\225\301\227\274\030!\241\275kS\342;\367\036\214\275\335\314\030=1N\034\274\256c\315\274\234\010\264=\226\031\266\274:\344\324\274t\027H\275\013\016\201<\002\035\t\276\277k\034==Gd;\350\'\265;~e\234<$\223[\275\223\022\032\271\337\222\027>\347\346><\302*\225=\242\217\326=N\361\'\272\225`\202\274q\326\364\274\017\262P\274{p\\=\204\331\036\275\372\217$=^\270F\275?F\210\275\361+*<\272h\007\276\251\2662\274:\245\247\275\257\345)=\265\"i<\032yz\275)\226\036>!\027t=\025D;=a\0107=~\261\017>\335\0354=\266D\272=+\017E\274\270\035\216\275l\346`=\312a\022\275\037\376\311\271_\366\275=;\230\013\275\257\374?=\007\245%=}\\\237:t\361\274\275bf\334:\265Z\340\274\377\344\324\274^\206X\275~\211\010>\307\r\013>a^\374\275E\231\300\273\356\031\314;\261B\033<\007D$\276\243\241\205;\375\242/=\316\342\236;\234\235]<v[\305=\351\374\236=a\220k\275szO\276\311o\233<\311@\317\274Fgr<\370/$\273\036X\212=\267\312\231<\310UV\274\013\r\344=\346\230U=\031\376\213\274OM\202=\310)\2319S,\260<\350d\245<1\276\240\272\3760e<x!\213\275\007\360\203=i\3062\275&\301\360\274LC\005=oR\026=Ej\023>-\227\237<=\002\016=x[4<\273\033U<8\335\025>\"(\025\274\003N\035=-!\317\274\367\014\365=\300\031]\2757\345+<\216\\\003\275&\251\335=\365\341\030\276.\277\311\2752\277\345=o\256\3509\360\242\275<h\020\330<o.5>3,?\275\031\353,\276\205\372\025\275N[\201\274\001\3209\2753\3601=\242v|=v\001\027=a\3648=\032\034\r=\323k\024=,\253\221\273\331,R=\3224)\275\250x\033\275;\2065\275\247l \275\325\354\315\273\244oa\275t\362\200=*\226\315=\242\275\030=\276\257#\275\266\036\2079\346[6;$\221\226\273d\355\206\275\354\245\223\272A\252\201\275;\"\221\274{I\301<\016\n\256<I9\331\272\034\311\000<a\264\265\275\335\257\304;<{\220\2728~\243;\007c%\275\345\200\354\274G\223\177\275[\263~\275\233\"\277\275\320.\016<\027a\034\275\226yj=\021\330\312\273\262\206\204=D}\363=\222n\320<\3465\213\275\225\327\001=\177\244B=\211Q\323=\010\203W=s\367\204\273=\220\354=\217\t+=$\372\233=\3710\016\274\3432\003\276\320\321 >\312\020\251=:\377,>\212^\330;\316\024M\275`\0321\274\331\203<=V\000k\275\201\225\246<\010\325\005>\221\343:\275$:\311\274!\226\325=/r \275\037\322\t\274M%\303<Be\241\274*%\364<Z\236Z<iH\256=\246\321\016\276\261\222\267=\216pa=\230\205\227\275\235\314B\275\026V5<A\360\250;\255\340\372\2738_6\275\202\366\256=>\0275;-\t\000\276\254\261\225\275\215\306\273\273\0256\024\276-3\004\274\025\t]\275\241\336\371\274j\221>=-\0257\272g\255\022=B:#=\253I\220\275\274\321\240=H\013^\275\241\236\255\275\303\362\364=\213\346\251\275\241\354\247=\361\342\261\274<\340<=$\222\356\275x\036\306\274\264K\354\274\362nq=_\022\201<\201\224\316\275\363k\341\275<\034{\273*t\025\275\035\267\211\2753k\323\275\010\362\001\275\016\207\007>\202\307!\275\033z\336\274\371\241\\\275\211w\033\276\245m4=\003\006\225\2753\256\373\275X:\330\274b\372T\275|\000\202=\322\274\000>%g\356;\003\375z\275\001\234\020\275\027\245c;e\016\343\274\365\256\306:i\337\352<\256\245\007=p\217\322\275\324\273&\273\235\021r=\326&z\275\000U\212\274\2329j<\354d~\275\232\220-:\214\351\355\271\217\327\324<\034\2567;\013H\016:S\201>=\334\271\232:+\274$\274\363\362\303\274\004\233\201:\337[\313\273\364\010\025\274\231\0324\273\310\356\204\275\274\017:\272\033\023\242=\0352\311=$\375S<\025G\224=\344\374\257\275\244\303\365\273\366s\367<\034D\367\274\305\213P\275\025\375\260\274Q*\007=\252]\323\275\367\231M<m\370\345\275\224\325Z\274\322\370\277\275\3154\227<\326\270\010\275[\302\375\275\3245\350=\352\310m\275n\213\344\274\302\005\305=\222]\211\275\373u\277=\016V\252<,b\273\272\256\206\322;\261\344 \275\031{\317\275\033r\t\276\277\324$<\\ba\273\202 \263\272:_\310=&\232\255=\026\323\357=\356\224\341;\273:\203\275\375\214\235<p\013\035\275\202\210\367<t\0200\275\342\306\266<\2575\246=~<\377\275\014\026\340\2743U\267=\326x\213\275\274 -<{\210\032<\260l\251=(\321\231=F\325G<\372\336\037=\347\251\207=WS\330=6\243\225<\233\315G;\037\371,\273\013g\270<X3\317;\354.\014\275/\321\262\274H\341\345\272h\362o\274i8\231\274\274\200\007\275\031k\271=\374\035]<\250\257\224=\332f\033>K\026\215=7\020#=Y\317\254\273\357\374\311<\245\3639\272<W\230=\034\222\374<\326t\014\275\237\266\200<+\246\035\275T\272\274\275_\033f\275\250w\035\2755\200\371=\377\235b\275\303XS\273\246\241\027\274\001r\312=\210\366\332\275\301+>=\305,\237\275\317\362<\274\312\220&=<\303\006>\243\034,\274\272M\275=\233?\327\275\004%\017<\230\310\217\273\031P\235;6 \256=\341\212\253<\037=\312<\246.V\273n\250\277=\330-\023;\343\374\237\275~}\366<\367\270z<\225\256\337\274\300\222\214\275(`\230:\370V\355\266\244\035=\276\341\300\305<\t\220\310:\272w\250\275I\357w<\2651\346<\3607\311<\344\375\0009\367\360\252\273&\'\017\274\275\202\264\274\006\324\215=\030\267\304\273G\250\216;\2449\326=\013Z&\275gz\226\274U\346\016=\327+\320\273g\t\240\274\272E\265=\002\265\222<h\223\237<\202\346\227<\272\273\374<\272\\V\275\3540T\275_9\256\275q\335\367=o\206\270=\244\351\370;i\373S=\nq\365<9\017A<\341\306\333\275\272\341\215\273_\300\253=W8\270\275\376i9=\210c\013\271\266\212^\275\324\306\235<6\005\315\275\000\237\037\276\356\300\211\274\260\'\341;d\215\267=\234\331\200<\253cj=\327z\347\272H\351\000<\362i\233=!\203X\275Z\2736;\325\273 <\325\332\207=3\347Z;A\0041\275\316T\313<C\027\375=\003\017z=L\261\243\274&\364\243;O:\210<\232}\231=rT\236=^\360\225\273H\231\213<@z<\275\251\017`\275\004m\364\274\326\324\023:m\003\003;\032\315p\274d3\260<G\352M:\323\354\253\274\247c\325=\361\346\267<\353\207\305\274K\243{\275\034O\334<\362\031}<\\\302\202\275\257z\206\274~\324u\275r\210\271\272JBf=\014r\000\275\241s\222=\0321\370=@\206\225=\266y\371<dw.\275V\271\264\275\007S\022\276H%f\275\364\256\013<\251K\324\275H\214\251<\303\372\005\275\",\026>\224\345\225=y\320p\275\270\nr\275]P\275\274\255+\221=T5\321\275\255\303\304\275\016 Q=\'X\265\275oL\356\272\270\245\223\274q\204J\274_\342\200\273\2406%>t\025\001\275\352\"\270=\033n\356\274\021k#>o\322^;\316.\233=\323~\271<T\250\247=\320\250j\2755\013\222=\373`^\273Y8\022;\260\2462\276\257j\341\274u\033&<\315\327\275\275\337n\372\274\310SI=\221\3457=\225\254\221\273\340\000V;\363\257n\274w@7\275\216\004}\275`\315\020\274x\256\342\274\330\221\330<\002Q\036\275B\244\310=\323!\202\274\333\025\n<69\201=\357\364\006;\350QB=\366\271q=\rX\277\275\321\2770\275w\362\347\275\3069\261\275i\305\363\275\262>\240\275\333t_\275D\211K\275\313/\"\2752\360\r=+\"\264\275\003\033\024\276\272@\340\275\275\341&\275\34405\276\002Q =\355\022C<O=\270\273D\343\341<6\261b<\204\2167<O\005\373;\251\021\302=\223\244\327=G~~\275\322q+\275\344Z_\275\301I\354\273\306<\330\275\264Q\355\2741!\216\275\352\275\014\274y\242\377\275\216\246\331\274x\241\346<\264\246\210\275B\227)=\322\001\323\274\370V\001\276H\320V\274|\270\310\273\270\315\347\2753\223\003>8F\252\274S\325\221\275uvn=\227\001\335\273\250\211I>\317\342\265\273Z9\r\274\371\013\026=\310s\016\276\224^\"\274W\206\226=&\002O\276\312\300\354\274\016\006\342\275\350\300\020>1\303\275=\303r/=X\372\233=\261UD\276Z\033Z=|-\325<\216\301\354\275\346\362\274\275\031\320t\275\323\'\342\274T\365H\2752\347\215\275\270f1\275\004\262\010>\264V\334=\020\003\335\274\346Y\267=Z@\374=\002\003\223=\366\225|\275\356j\344\275\277O\216;*\224C\273\272\017\324=P\327\231=\"\217<\275\2226\250=\266\036\246\275\'o\330\275\337\207\025\276\tF\r\276\001d\224\275\337\310\214\275*\030\265\273\337\333r=\235\t\262\274\364f=\275+\204\3249.\304\350=k`\353\274{\356\300=\331}X\275\214\264Y\275\322\265\314\275\251\201\340<\362\3260:\366\312\2558\245\207X\275W\\G=\317i\224:_N\251=$6g:P\257\032\275w\023\341<\'\003\267\273\375\300:<%\263\301\275\350\215\036=\326\205\261\274&4\330;\333\232\202\275\323%\036\275\267\007v\274\341\212%=p\366\326=\325N\321;w\221\n\276{\272O\275F\204s<\327{m=\246\270\024>M\202\347\275\346\345\334\275\245b\357\2753p\025\275\211\363\240=m\262Y=\311\340\245;\250\">=&E\177\275[-\n=\343\364~\2759\345\347\274\327H\222\275\224,\222\275n\030\302<)\nH<\342d\231\275\250\3149\276\243j5>\014\034\300\273\277W$=\213\213\304<\036J\330\275\206V\207=\014k\237\272\252\024\256<b\231\375\273g\250\272\275\027^\274<\013\231\204\274\234\312c<\377+\213=J\211\325\275\347\211\230=\324\246\372\275\016\252\370\275rq\035=\236\010\265<F\312>\274N\344\350\273,\230P=\016Am=_\234\266;\221\327\334=\013\331<\274\247I|<\231\331N\275~\200-\274\035\233D\275&\375\216\275\374\273/\275\3321\276\275\324r\004;=M\304\275j\250\023\275\314\':=}\344\276=\346A[=\324-\357<\272s\343\275Y\241\025\275\231}\203\275\233\030\007=Y\354\222\274\013\325&\276\232\253\316\274$\360/<M\3451\275\303\226\311\275\\\r\233=\256\031\216=\357\255\207=\000\362\355\275\253\236)\274\225z\266=\232\336V=\2162\036\2755}\262\274C\264\231\275\277\333\311\275\234\236\362=\227y);\321C\267\275\303\252\034\276\320h\354\2743\231\216\275\3275\216\275d\\\240=\207\"]=%\313\235\275)\024\207\273\242d\362=\355\247\342\274\212\363\375<2h1\275\343\271T\274V\376\223<-OR\274Y\310\351\274+F\216\275-\334\232\273\303\346\275\275\310\301\027\273B\256\r;^\200\007>((\363=M^D\274Q\"\242\275%\323\310\274\201\300\363;?\033\237=\204\374x\273.\251\212\274e\205\257<#-z\275\367\373\003\276\276\221u<\350\273\035\275\377\031\256\2752\247\325\2748\2744<\274E\220<;\241,<c\030\322\275\035\241\031>2-\202=mq\007\275\200v=\275\342\206\016\275\3209\317=\003\271\372=\252\315\034>0h\022\276\372\300\006\276K!y=\364\341]=\373\270\317\275Mg\326\274Z\325\261\275\226W\035>D\010\016=\215)0\276|\304\010>,\001\014;\275\374\324=\305|<=\032\376\277=;\212\t\276\226.q\274>>\370=\253q\347\275\365\022\364=\306\333\373=\352\340\202=\264\373\031\274\372\034\345\275\032\272/\274\361\203\271\274woA\274\207\256\326=\2517\335\273\223\034\210\275\354\273\362<`\217\374\275\346\326\365\274\237\312Y=p\"\324\274\235R\341\273\340\343\022\275V`\016>J\317%\274\304\0264\275I\337P\275\\E\205=\255\342\201\275\347w\264\273~P\022\275\253\003L=.\350R\275w2\241;\"\274\377\274\303f\253\275\026A\030\276.\353\230=vP\246\273\2441_\273\364G\205=\333]*=\360\033\346=\201~\376<yd\300<C\273\232=\351\2752=u\007\274\275\262\340\260\275@u6\276\315,\240\275Ro\331\274\030\363\272=\3303\332\275\3775\312\275\365\342\251=\247\237\377\274D\313H<|\267\364=\257\264\014\276\231\244e\275\243^\324=W\321\0179C\025x=\354V\250:\257\213\300=\364\334\360\274\371)\003\276\232\003*=\014\345\224=\370\n\321<P`\220<9\336\222\273\345\2228\275\030*\224\274\304\221N\275\327\240\367<+\356\253\275\357l\273\274\014 \333\275\310\230\022=K\264\337<.\366\031\275\004\222M\274\216!\254\270\376W\037;6t7;\313\214*\275O\255\177\2720]\266=\213G\240\273\365\226\363<\240\200\333=] \004\273\261mB<\316\'a\275\344\234g\274\352\036\327\275B\267\217<\270\346\201=\014\364\340\275)\0130=\022E\027>\362d9=\357\365\"<c%\024>_\212I\275\243\260\245\274/\231b\275\207\307\211\274\032\344\361\275\316b\214\275W\017\310\275\364V\376=\036\316\032>e\312\215<\0064\271\274\326d\357\275\'Z\273=M\330\232=\270\231\234=\374b\246<\342\345~\275\206\213\n\276t\235\254\275\r\321\303;M\274\005>{M4\274\022\362\374\275B\222\321=,\270\314\273\330\331\254=%\276\263\275#-\305<\342\330\316\275\341\365\204\272\016\360\006\274\277\327\035\276\331\257\224<m\241\255<IT\275\273\317H\351\275Ps{=\357X\250\273\353\"\265=\233\r|\274\001DO<z4\207=\250\367\275;\227\343\267\274O9\360\275\035\272\371\273L\275\020;\251\272\236\274,\200\307\274\034H\370\274\266\374Y=\250\262\306\273\257\360\356<;\274\324;\275K\222<\005n\'\275\023\277\313\2740\323\317;iaV\275`h\252\275{j\247<5\315I=y\326\331\275\304\350\336\275K$\322\275\224\363?=\367\037B=r\255\251\275\021\271W\275\037/\251\275SF\002\276\211\247(=\223\240p\275\370\335\031=\370U\016>\354)\247<\250\337\230=\262\303\003=\271*\207<\205\242\227=\341\347E=\346\307\272=\345\3642=\272\200\331=F2\255=AU\2468\234\033\025\274]\343\344;\210\241i=\241\376\342\2758#\333=\2728\311\274\2279\207=\226\030\244;\3142\323\272\252P\276=\273n6\274\370\204\347=\205\335\232=\014r\n>\257\334H=,H\007\276\372\010\232<N\360\312= u\253=M\315\242\275o>\255\273V\367\301\271\273\211_\274\037\302\013>\323\254\'\274g\217j=\273\352\333<\003\207N=\2401\305=Q\276L\273\207\251\217<T\2147\274*\273J<\021u\222=\205\277\327<\024Z\t\276\334\207\221\275 \003\345=\347O\006=(,\033\276\236F\241;3\320a<\277c\272=\335f==z\232\035<&\317\236=\010\262\377\266\304\032D=Y\304\251<\024h\n\276\277\316\333\275]r<>\312B\201\275>b\214=\337\265)\276\263E\264=\272\272\002\275\344\310\n\276\211X\001>\332\302\035>i\"\305\273\223\347\364;B\210\">y\2602<\342\014&<\226\343\263=Z\260\254\274\340r\366\274<\n\036<\224\276\271=s\354\024\276=\277\225\275+U\266\273\333\220/\276\236\205~;\351\225\247\275;mu<\332F\226\275\346J/\276\013\245\270\275\177f\265\275\350\376\007\2765\373\252<&B\005\276<\\E<\002\212\334\274-d\270\274\036N\005\275\1776\207<\351#!;0\354\275=\255\316\362\275\305\'\036\275)\"\031\274G\373\263<|\0312\275\264\032\205\275\225\346t=\320\024\222\274l\250\035\276v@R=T\037\320=_\331\t\275\236\225\037<\204\325\014>\3715K\276\223\000\327\2754P\221\275\333\353?=8\023\275\275\033\024\301\275\240\215d\274\337\311\316<\004\214\322\275\301;\341\274\266\347\206\274+\312\010\276\004\ra=\270\337\212\275\002D\\<e\024\017>\026\315\005\276\332D\027\2743d \276)\361\337\275rM\320\275\270\000X\274\323\"\271\275l\013\306\275\333v\237=p\035\340\275\235\347\215<r\371\035\276d\2723\275\003\254\316\274\241\376\221\274h6\321:\025\r\243\275\2366T\273\272\203\205<a\376\270\274\233G\207\27531c<\262\232\366=\263l\335=\n\225\261\275\377\371 \275\246\245\320\275\301\2333;\247x\217\272\222%\025\276\273\322!\276\rY[;\037\356V\275\326\270;<i\223\307=\377\014V\275\251C\235;\356\263w\2747\226\016<g\265\356<m\002\202=\'_-<\2264><\260\000<==57\274\362\302\006\276\333.Y\274\235\021\252\273+?\222=\0219\237\2754N\237\274\230l\242=\231\225\002\276Q\206\017>\253\224w<\2362\016\276H\032\375\27515\341=\310x\002\276\245$\331\274I\022\035\275Z\203H\275\224\337C=e\361p=\222OR\275\224y\022\276\322\026\312\274\345\350\006\276\204m\030\274Z\343=\276E\350\216\274\212\333\201\275\364\027\224=-\275\256<\264\260\333=\273\261~\273W\366\003\275\302\3620=^\213\340=\030{\245;\3249$>\204\t7<\345\367\347\273\266a\322\274\372l\271\275\351j\037>\221\351\272\275\302v\307=\0064\006>\301b\320<#^\341<\321\350\306<\266,J=\23232;\241\304\350\275J\310=<\333\356\275\2751D\252\273\343\341\307\275\246\330\177\274\022MK<J\246\t\273Q0R<\"*\355<\370R6\275W}%=83z=p\230\241\2754/\325=#c\022\276\204\253\307<\354\367\210<\314\254\n\273tm\010>\016\350\310;\000\332\307\275\277\373\335\275\330\305\223=s\225m=]\335\253<<\\\n>\036k\262\2746OF=\177\211\244<q\256\255=\027\246\204\275\237\013\027\275\321N\010\276\267\367&\276i\346\367=\2348\207\275\020]\271\274\272H\003=\000$\034>\315\340\333<;\024\002\276\230t\224\275\277\323m=B\231\031>\037\335\224=h\263\346\275EF\326\275\022\344\2059\310Yl\272\245\366\"\276\220\242\241<w\027\246\275\344\014\016\274\273A\232=\253z\333<\207v\202<\340\002\216\275\316\177\'=\310\347\302=\247\030\034\273\271\227\003\273\250\001\266;\020\247\262\274\030\335I=\243c\366\272)\375!;\312\251o<3\355\025\274j\367\355;\017?\003\273\000I\022\272A\276\375\274\244X\215<\302\274\320\275\246\366\343<\322P\235;{\"\331\275\223\235g<rn]=\361#\305\275\263\n;\273\314\034b<\371=\017>\365=W\274\353\203\331=B\000 \274\275\2432<\337I5\275\330(_\276Cd\336\274\"~\367<]\325`=D\236X\273\254\374\322=<Z\321\275\202\014\010\276~-\347<yE4\276\r\232\364=O\226\025=M\217\\=E!\276;e\313\002\276\252.\344\275Z\311\255\274\357\352q=\310\223\372<\354\314\t<\177m\005>_\340\247=:a\031\275\367$\342\275\311\031\327:\376.\r\276S\355G=\035\375\204<^dz\274MLw=\330F{\276\233\t\330\275\270/\256\275\275\3278\276\362\022t\275\201\202\332\275(\332><\326\254\204\273\312\001/\275\352\006\260<\251\205\025\274\364\263\003\275D\2401\275&\337\211\273\310K\007\276\213\016\014\274Z\357\220\275\216\177\376\275\3047D\275\275wV\274^\034\367<\231\305g\275\301\026\035>\242\247\235=\204\253\362;\353\016\200=\0227%=\303\310\212\275\241\013\000>\373\305\024\275\347,o<*(\001>\353U\270\274\240\312\236\273\304R\245\275O\316\010\276\314p\371\272\266\230\007=\352\310\035=\337w\215=\211\372\r=H\tB\275\337s\214\275-\205\326\275\205\023)\276(e(=\321\377r=\256\022\256\275wqX\274\374\035f<\200\337\367<{\t\221=\2608\324\274\334\330\034=\351\377\301=\270\266\002>s\243\233=\364\353/\275l\211E;^lB<\'o\020<&D\252=\225\r\257<\204\354\201\275a7D<\266\224\221\273\320*<\275Z\322%\275%\373\023>^\220r<p\236\2148\225\273\035\273\330C\\>\320\013\222<t\316\245:j\202\260\275\310\214#\273\205\252\315;#X\213\275?zY;\303\342\220;\226b\240\275\031\371\205\275ZO7\275\034\3566<\305\301B\274j\007\007>\322m(=\332\224\310\275\310\331U\275\336$\346\273\t&\241=\177\0035\275NC\017\275\022\003\324=\013\037\201=u\201b\275\347V*>l\237C>&Fn=\243\033\321\273\3220\245:\370Q\266<\r!\006\275\355\243\025\275\236g\215\275\216n\025>\003\007\354=wZe=\'\271\203<\330w->J(c\274\214;\370=\204v\277\274\240\222\220=\362\307\206<)I\363<\340!\t>60\361\275R\3021\273\036pu=Y\302\203=Z\261\326;]\205?=\256\323?= @.;\360\024\006<\221\242\026\276k\3559>\352\262\264\275\2331\363=\240R\205\273\336\315\006\275Q\223\027\275F4\274<\240\347\215\274\315\026%=X\201\255=\334\3168;\232j\230=\362\277\177<\"H\225<\222\263c=V\350L<F4\342\274\262D\335<\327v\366=\351\202\264<?\253\261<\256\007\037=W\016\235\275v\312\301<\2722\023=B\245\254=\353w\334<\311\314\034=i\234K\275\343\214\235;\205z`\274\254\266\241=i\225\214=<f\005\274\024\224\"\276\340`\227<\321\2549=o\220\222\274@r\276\274U\213\360=\257\3026=\353\330S=,\315\313\274\320E\337<\002.\225\2756\216\231=qt\252=\325\016\346\275$\"\007\275iI\314=\251\032\214\275m\271\300\274\211\363\271\274\274\370\"\275\277s\315;\177\216\'<\003\'d=f&\324\275\230\363w;x\267\311<]\300\036\275g\372\177\275\242N[=\341\330p\275K3\364\273\022\352\204=\030\200\334\273\241\246\222=_\364;<\177\222\366\274\350\255\33588\317\265\271\020\016\215\275\303,\t\276n\336\237\273\026x\177\275Uc\246\274\377\034\231;/\035\251\275)\253U;\2470V\274\347\247\'\275\355v\361\274\014\330\354=\020\200\256\274\311\323\313<q\246d\275>3\267<\322\277`\275\263\313\351\275-\241\025\2740\005~<\214Op\2748\216\204\274\314H\327\275\246k\267\2752\3415>\375\t\320=\005\340\021>\263\366\r>\330\374\305=\217\243\261\275\370.#\275+\017\236\275<7\001\276\310\220\354\275\025\210\250;\003,\325\275X3\003\275+\016\206=.\016\026>Z\331\007\274\214\233\324=\017p\024\275%\230\302<_\273%\2769\t\010;.\273\257\2756\232j=\326\254-<\226^\007>\205\203B=\317\362\003<vT\">\274F0\275iM\245=\006\026\232\273\265\273&\274{\246\002=\360\273}=i\237\232\275~q\225\275rT\021\275o2\337=\tWl\274\246\265}<\001.\254<sU\224\2745\344\321<[<\005>(t\325\275\252\340\030=|f\364=\'Fg;mQ\273<\0023\"=\276\331\376\274\254\212\346\275\017)\307\274\260\357\013>p\373\004>\021E5\271\256\221,;\326\335\225==\312\251\275\222I\213:\266##\275\240@\t=7<\017\274\t\010\035>\031S\360\274\247\202\336=\226w\030\276\2432@>\034\025\022=S\243=\275\242\\\">FJV:\3355l\275\247\n\026>q\t\004\275\264\333\237\273\240A\263\275\264\314\311<\201\214\001>K\301X\275@\272t=\036\205\023\276\037\2015\27547\316\275\305V\216\275\\V\000>\271B\255=\360X\251=g\206\273\274\334,\352\275z,)\273|O]\275\231\321\376\274\317&p\274bY\257<@\0056>\024\"\002\2760\2306=6,\206<\353\362{\275\362\372\210\276\026\033\275\274\245[\2719\303\004\345\271\212\215V\275m\215%>\300%\2247Y\273?>~[R:j\210\t\275\007\010\203\275\214v\001\272jx\256\274\226\241\306\274\010\376a=gW\242=\031\357T<(!\241=X\270\275\275\222L\334\275aN\r>|\3701\275\264\216\206;\372\247\036\276^\307x\2744\214\255<-\300\002>@\217\025<\326C\006\275\343\327#=B\313V\276\036w\313\275o\330\334\274\220w\222\275\306\\\214\274\213\305x=\332\337\017>7\221Q=\356}Q=\270Z;\275F\300\226\275\320\3600>\035;\002\276 v\253:\367G~\275\022!\345<2M(=A\246Q9\324\016\301<\rm\214\275k\014\241\274@\000\316\275i\367\244=h\237\204=6\252B\273\3064\221\275\315\024\245<\332\216\327\274\345\2312\274\242\356\277=^\320\202\275\322\223\325=il\252=K&|=\036\205.\276\301\274\271<\210\037\212;\354\205\231\274P:\200\276\247\322B=\r\016\263\273mj\252\273i\217R=\210\014f\273y\234\244=A \217\273\330HO=_\267I\273F\013\261\275\253\2327=o??=H2\243<\332\340\340\275.\372\357\275P)\000>\030\024\257\275\003\232\236\275\273J\016\276\370V\010\276\312\034c=\023\216]\275[\301\275<\332\216\255<3\353\310=3\215\270\272\251\340\252\274Jy\347\275\351\206\372=~\230q=\002M\206\275K\227M\275,^{\275 \331\235\272\307\333\004>0\237\013\275\225\236\214\273v\372\307=Nk\026\276\007\266\330\274\223\273\007\275\177_\272\275\267\326\017<\020\301\264=l\022\n\276\300\\\254\275\240\214\266<\273\240m=oMI\274\224\214#;\325\225\002\276\331<\255<\275\024R\275Tx\023;\243\2043=~\222\237<\206L\022>\272 \232\275\034k\300\2730q\227=;,[\275\317\377\211;6\277\001\273\326\325\215=>\346{=\364\331v\273r<\201=\306s^\272r1\301\274\350\024\206<\254\243g9\206\300\307\273|\034U=\016\021\340=\324\372D\275\243\216\231\272pK\267=J\242\r\276E75=\2237\001=\231\372\211\275\252\246\235\273\264\317@>h\303\215\275\177\016\273<\375\257\037\275\230H\007<t\206!\276\301\311\260=\232$\323=\233\333\006>\312\357\036\274q1j\2756q\343\274\016j\253<w\250\017\276\317\256\224=\007\302\242<\234=\273=\'\311>\276\"\025\372<\224k\225\275\375\346Q\272\000X\004>\314P$\274\356K\031=\2619\032>\245\256\337\274\311\3257\274\205\362\242\275\377\270\202\275!g\275=r\340A\275K\331\217;\235U\356\275\367\244\201=\327\005\\\273\033\t\022\273\310\253\231;\035\013\020\275\037[\003>\020F\340=\226\014\362\275hG\225<\311\033\010=~\005\032=\373\310K:\000#\033\276\003\264\316\275e3\"<\353k\303\274\220\314D\275\266\003f\275\324\250\004\275\203j\215:J\375\240=\360^\336\273\226hc<D\350\214<\244\211\226\274;m\025\275@\277<\276\370\021\255\274\\\363\t\275\265\034\013=\343Q\361\274)\335\346\274g\177\036\276\254\324\026=\347Y7\275\262d\356=Ika\275\310\216\272=\361\260Z\275\331\204r\275\241\374\246\274\202A\262<I\273\315\274\265%\220=\360\2126\276\350\351\362\275\241\"[=\331\241\030\276\222\310\356\275\322\007\323=\226.\277=\211)\371=\357\354M<U\270\312=\351\3455\275m\r\232\275\265\2637\276\276\377\223<\3304\007\276/\370\211\273\006\022\214\275\351kz\275\006\360\027;\373\362\304\274\252\335\372:c_\025=\276\034\217:\'\000\205=o\255\272\274\222\200*\2755^\243;Q/\202\275\024k_=\305\322\342<\316\244\303\271\022\222 \273\206\350\202;8\301\207\275\\<\263:\342k\251\2758\217\213;k\213\237\271o\362\260\274\377\214$:\376\025l\273\016\364k\275\246\365\221;\003\272\277\274\362zP<9\036b=\013,\305<\003`\306\274\026c\232\275\ti\325=\253\377\232\273\216=O=d\r\252\275gY\210<\263\026G=\342\277\016\275t\006\211\275\343\311\005\276\271*l=Q\277\030\276H\360\013<\027\253\353=\231\310g\274\221\262$\274\235R\025\276\237\317*\274n\n\'=\236\275\036\276\037U\016\276\322\322\021\273\233\252\\=\372\212\024\273\025\274\266\275\334\r.\275u!\305\275.RG\272#\346\004=\250Qs<c\214\355\275\020\034o\273\376O\207<\227\213\206;\355\272n;.\352\246\274\374\247\356<\235\274\275<\006\340\222\273\341\225\276=J\240`=_\373\270=\202|\250<Wk\344\273\266\303\n=\330V\t=H\010F\274\007\222t<\314\216\327=\345=\001=\366\016\360:2\311\330\274\375Y\347\273\250\374V\275\005\031\215:\3131\020;\225\241l\274\305$\311:7\251\246;\261\3332\275\010\250\225<\177\0062\275\220\207\326\274\246i\224=;\214\315\275Z\240\330<!\274\312\275\031\335J=\032\271\r\275\360p\310\273\233!\362<\203\234\242=\333\264\207=*\377:\275\273\372?=*\363\021>\331\366\216\274\261\343n\273O=\200\275\266E\006>y\231\225=\335\236\347<\255\376==\354\253\333\275\330\265J=\232\236d=U\333\2179\256\200\311\275\271\225\257=\223\2506\275?_3\275tV\355\272\233u\\\275\177M(=\274u\274\273\226\221\333\272\020-%\275BV$=\014\034\343\272Y]\026\274\017\276\210\274\342\366*=w\360\372<r@\275\275\350\336*\274\262\344\"=d\222b\275\010\277\334:9`\236\274\306\241Z=\022\324(\272\010\226\014\272}\314\032>\373\033\312\275\343~\016\272p\210h\275\\,\2538w\344\345\274\360\351\037=\350\270\017\272\340\351$<\261\211\352\274Q#\275\274S\326y=\240>#\274\"\311c\275y\244\304\275\337\317\377<\316\261\203=\232\323\366\275Gj?;\013k\337=\030\362/\275\022UC=zS\216\275\324\241\373\275\207d\305=\202)K\275\233\307\364=v8\371\275\263,\253=`\035:=X\262\n\275\224\037\035\275\256\311\347;\250\324\212=\273~\271=\227\030\277\275\322b\234=\221_k=\301\300\024\275\215QK;\023\017y=\301h\204<V\376\261<K\211t\275tv\241\2744\250\034\276\261\243\260=\351{\031\275\343sn=\366\360\036\274m\367\\\273\333\263\221\275~r\204\273\264\362\353<\364\214\270\271\360k\275=DzE\275\342\240\203;\341\243\333\275\346\253\016=\236\235V\275G\270\003<\376\235\007\274O\2401\274\241\334$=\320-\016\275/yJ\273\256WB<S\214\301=-\347?=g\235\240=\354\261]\273\306\021\210\274\224\226\220<\331\273\255\275\345\n\213\274\311HA;=\215\247=\260\276\005=C\301\366<\216\207D=t\2256\274S+\246\274\363W\271\275\246\334\347\275b\325\332\274\021\326:=y\367/=\366\306Y\274kg#=\022\215\271=K\361\222\274G\227h\274Ha1=\334\346\010>1\247;\275o{g=\332\027\026\275\2321n\275\340B\316\275Q\257\334=PI\252=T\230\357\275s\360\233\275\330\373=\275\200\010\257\275\3603B=\370y\234\275\305\314m\275\351\026L<\001\222\215\275\037;\377<\341\204f="
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat"
  op: "ConcatV2"
  input: "split"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "aa,\274\022\343\263;\310\262\020\2744\261\321<\312\252\357:\320\2730\271/B6\274`;\302<v)$<\013Ut<+\321\257\274\005\330==d\237W\272eS\200;8\033\305;\374\325\245\275\325\246\262\274%\355\306;\376\000\217\274\333\206\206<\355\226\361<&\351\251\2758\205\005<\226\016i\274c\024\035<{aT\272c\\\034\273\345\353,<\251\\|</\357\272<\345+:\274\352W\322\274\001S0=\240\336j\274h\311\030<&\243\302<\\N\312\274@<S\273LP\205\274\3108\001<\210Xb:M|a;\356[J\274j\262[\2740\262\260\274\347\014\n<6\217\361\273s\251^\274\200j\315\274r\025~<cd\320;\312xF\274\273\372\244<\350\236Q\2745\236\215\274\327L\225\274\210\317\201\274\205\377O<\206\346\216\274\363d\351;\371\276*<t\255\230<f$E\273\363\267\262;\2103\250\272~\256\221<\326\263k=N\237:;\017\201\025<w\005\214\273\270\240j;\001$^=j\253\216;r#f<\022\2002=\020\351;=\271\367\262<\2460\333\271\r\321\303<\241\232\200=\227\212\305;2D<:w\202\004\274Nm\307<\004e\255<\204\002p=\362\316S<\026\320\215<\r`\227;\365^\036=\240\311\200<X\375\035<^\367.=\320i\256<pS\373:\224\357\322\274\203\247h;\240]!\2740\227a=Mn:<\376l/<\025\247\006\274!\232k;\255pK=\225Y5<eq\336;\212\267l=\303#\202=\t\234x;\256l\027\273EO&<r\272\313<\034\265[\274\003O\004\274p)\227\274\177\214s<\305\310\r=\224&\037=\210\252\037;\245\337\234<\037\355\240<\013\206\227:\372n\204;l\204 \274(\035P;?M\037=E\250\";\332\327\257\274"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "\270\2220\274 \306-\275]\324\027\275\331\260\215=\255\316\202=qU\375\274\200\343\276=\000\221\335<\"S\203\273\303\325\327\275\367\354\022\276t\240\277<2\314*=1\306\364<\014\036\222\273\347>\266\275m}\246\274x\366\317<]\342\010>k?\220\275\312\377n<\312\335\226=\326\215\336<\240(\364=\264.\231=jQ\204=\034\256q\275\271h\004\275r\3259=\257\250\241=a\013\014\275s\324f\274\220\312\216\273\271\226\224=\205\036a\275\315\022\335\275l\240A\276\017\007\031\276lb/>\240S\201\275;\363\027>\2635\275=P\336\027\275\037~\005>\030\362\024<\324\356\025\276\350\\\344\275k\366\302<\347\035\273=\331Z#>t/\277=\330\315\332=\357\264\021>G\036\004<\\\207\207\275\340\372\263\275\350\226a=V\324\360=jx$\275\372\372\215=\034\354\036>\020\2059>\014\032\224=\271\314\321=(\200\230=\253S\342<\020\"2=\364\030v=\205+\251=\261|\010\276q\235\004>i\331\340<;\356y=\220C\265\275\034\220\353\275&\010\301<\276u\202\27276\260=\353\356\300\274\023\025\357;\242\352\246<.M\201=\326\216?\275\\\033\351=T\333I\275\254\245\226<\025Vd\274D\205\211\275\362\022*=XM\247=\302$\336\274\305\204\255= q\314\275\3612\203;\264\nW=W\2046\274\302\340\361<\260\037p\275\005\240\215;\357\025\210=DX5;^\'\235=e\'\002\2755\304d;\241\375\330\274l\362\307=\325\366\005=\203\245\227;CT\014=\021\007\032=c\223\231\275\265S\342=~\201#\274}\377\231\275\210\233\320\275\270(q;\227T\n\276n\335\216<\237\313D\275\001G\377=um\275\275L<\317=\274\376E=\017\252\273<h\363\"\275\363\260\005<\232\236\325=\211\207\303\274\260<\274=-\037\324=m(\003=\211K\367;\271e\241\275\020\207\313=\237^\263=m]\003=?\030\313\273\227\004\202\275\371\300\205=F\247\317\273\341\024\244=&0\262\275\372*0\272\235\260\373=\241\330\000=\343<O\275\372\037\036\276\255\375-\275\272!+<\304\006\n\276<\265\207=\346\260\n\276vs\240=\303\272\032\276Gr$\275a\203\331;\234\373\274\273;y\004\276\255|\256\275\250\211\377<\320\001\025\274\273\236k\275\024\276@\274\200\317\335=s5\">9\344c;\340{\204\275\3613\007>\255\024.<\2372\026\276`\370\340\274w\332\017=u05<\237F\376<z\200\331\275L\270\340=\005\213\031\276\232y[<S-\356=,\361\322\275\223\177\003\276\"\357\252\275\333\263]\275^|\016\276\217\344^\275\345\035\023>F\013#=\316\252\330\275\254\375#\2764\300\374=*\242D\275@5\307\275\032\2314\275\315\207\236=\265bK=!\032\037>\241\273~=\267\025\350\273\243\232\003>\262\'\350<\337a\210\275\370m6\276\266\363\226\275>K\341\273\334u\232=\242.\270<\247\327X=YW\235=\257\341\317;\271\201\354\275u[\030\276\222j\375\275\207\271\343=\n\357\273\275Q\341\351\275\267(\366=\366\307\031\276J\246\321\273rv\274\274:\035\324\275R\3044\275\216\371\374\275\347dI\275\210\224\232=\305?\305\275\232y\201\275q\007\252\275\241\267\033>\324\204K\2761Y\n\273HEt\275\337%\261=\351\272P\275\367q\373\275\344\265\372=\345\232-<<\203\313\275\371n\022\276r\361!\275u\223\264=$\357I=G^\354=\340\302\224\275\261\332\231;\211\327\255<K\314\201\275\237Y-<M\371\017\2738\037\232=6g\006>\307iE=\235\217)=\356\265\001\276\031AQ\275\372W\260\275\273a\271=\354\203\375\274D\254\277;\202N\n\276\035\274b\274\314\250\223\273H\"U\275\261\032\034\276\256\016m=\373o;\275 +1\275X6\377\275\263\245%>\006 \"\275\005\032\337<?Vl\275\306\352\344=)\205\006=\214\224\240=\331>\242=\033d\344\274\313\212\322\275\241K\331<e\0108\274m\320\027\276\021Y\260:\\?\316<\327\271\370\274\024c\310=\030!\277<cJ<\276\366\r\035<0\252\026\275\250\245\325;\276\311\317=/\310\037=\320c\367=?\244\335=\241\007\347=o\3446=\\\244@\276\177\373G\274\252\272]\276\342-\271\2751\351\026\275,\r.\274\3013%\275|_\"\276\323\327\302=\237a\262=n\010\255\273w\003\000>\267+\265\2756\t\266\275\257\205\372<\265l\347\275\264\307x=oY\250\2754\322\372=\215c(>j\3408>\013\003\257=\302_,>\272Sy=\375q2\276\254gO=\244\034\357\275\222\032\024\276S\r\245=\002\013\031>^\231|=O\0008\276\302\366K\275\271\372U\275\200Zd=\021\366\007>\252<\376\275sa\213=d\005\370\275\\a\023\276\003I-\276\230A\260\275\273%\314\2759\201\203=\002\325\247=\327]\257\274M\237\306=#\306\325\275\266\2432\275\376\336\244=\236-\006\276\326a\245\274\013\211g\274\232\223z\274@<O\275\220\013i\275i\000[=\263M\337\2752\n\032\276&\227!\275\345F\036\2750~\177;K\275\037\274\3550\256=\246\231l=\031\037\214<\364\234\231=#\204\005\276d+\026\276\246\226\321\275\221\317H>\353\247M\275v\014\234=4\235\023\276\266M\031\276v\351\035>\216[)\276\311\036\261=&;\211\275\233J\365\273\256\313\273=\241Jh\275\223u+\276Z\316\327;+L\027\276\3710B=W\227\245:\346m\325\275\010\351\236\275\266r\225\275s\356\226=Xy\312\274\274\262\257=\340\014\200\274\223j\264\275H\277@\275d\346L=\035\201\372<r \275\275@\024\235\2749\003v<\245\273\211\275\261\215\014=\377-.\275\311\2718=OC\321\274\227\355\372=\314,\234;1\237\032\275\326O\261\275\245\002\001=\200\337c\2755\364\215\275\236\006\227\275\350\364\236\275\254\366\365<\206\326\030=V\002\030\276\230\261\237\275|\311\346\274CQ\007\275\345\357\"\275;\002d=8\245\022=;\266\340<a\341\">DD\032>BD\010\2763]\240<\316\314\301\275\342\241\216\275\320\204\243\275(rI\276\264\226\263\267l\341 \275\016\273\367\275\230My=\331\342N>[\372C=\001\331?>\365\264\273=9\207.>\021\270\224=_e(>\326\262\021<\263G\226<\243G)>\346\345\001\276\350\'g\274\221\202\305=Rl\026\276KB\277\275\350\313\347\275\3701\223\2751n\023=\234\207\236\275\250\006\032>\0246\273=Q\215!\276s\351\353\275tW\357\271\314\2075\276j.\256\275}\r\"\276Mc\271\275\236\266\\\274\211|P=]U\027<\205\306\333\275S\201\340=\022\230\254\275\367BV<WC\007\276\006(\017\276\354\022\361\275k\353\265\275\023\221\321\275\270\310\374\275\022\307;=Y\317\017=\260\010P\275D\360\316\274\311\255\027\276\021;\220\275\244\021V;l\365\242=\n\024\031\275\314[\\\276\203\266\001>\266w\250\274\036\361\342=u\006\024\276\371\234{=?%\031=\334{\014\274\315\370\366\275\004\027t=\257\270\235=|\257\027\272\302r\301;mY\033=\013\231\027\275~\320#=\006\232\353\275Q\305\016\276\377\262\363\274G\244\331\275A\312C=\245rL\275\344\351\262\274$\331\177=\327\026\211\275d\327\263<\002\310L\273\242\365\243\272\237\024>\275\024q\021=\273\t\374;\217u\3609*\253\343<J\272\267<\260\325-\275.\301C<\2140j\275KV\264\273((6\274\340\356n\272w\004\'=\246\257\215<\203\316j\273\377\317\225\274y\261\010\274\345w\003<\303\323\316\274\003|\247:\331I\202\275=*\021\275\300\017@=\277\307\333<\352*z\274\331\255\004\274SY2\273\337\237\314\274\231\366\031\274\271\345\360\273\322\270\234\274v\321\n=L\317\350\274D\256r\273$3\025=\270r\001\276\030\306\231\275\215\324\257\275Q\242\244=n\234\217\275\240\024\300=a\323\001=#>\374=!\232\241<\355\017\235\274\322\364U\276$!W=Yu\331\275Ut\327\275|\236\007\276\035:\221=\206\254\213\274\322\247\206=\030\315\026\275\222\366\241=\235E\311=`1\021\276\251\226\355\275\304\344\372\275;\273\223<\376\226[=7\2228\276\273G.=\032\300\t=\234\036\346\274O\264d\275fA\013\275A\307g\274\023\0339=\264\323\220\274t\023+\274\016\324\215\274\tu\256\275\254\361K\273A\222\246<k\'z\275\311qZ=\261&\372\274\327\026\250\274nl\223\275%\254\3709\032i&\275\333WW\275\032F\203\274\264<\345\275]i\240\275\260\346\007=\rk~<\350\263N\275\343\2724\274\017\302\216\275\031\245\212\274\225j\354\274r\345\037\275\353\353\333\275\256\311\027\276\002n\311<\377\301\330\274\335y\204=\325\213\023\274 Me=\177\2550=\'`\343\275\333\345d\275\007\330\221=^u\341\272\323\266\244\275\264t\200\275\316/\027=\355V\317\275\277\376~\2741\334\024\275}S0\275\001\340Z\275\'yF\274\251\214w=l\303\007=\300\217\272\274w\336#\274\304\017\202;\027n\004<WQ]\274\2453G\275\251\221\324\275\212\374r\2757\3303\275\023\037\005\276\320\t\252=\341\357\007<,(\370\274\377\024\3649}\327\004<\310\312\265<\244f\377;^8d=Bb\276\272n\327\333\275\365B\323;#\316F;\234\205\246\273\265-\341\274\333\225\014<(A\010;\215\'\224;Q3\202;\204K\236\274\277\2037:z%\310\273\307Zy=1z\006=339=\3452\261\273\207aK:L\202\270<\206\302\201\274\202E`<\323\266\025\273\304\201\204<\270a|<7\031\t=\236\357\000\272>\211\216<S\211\357:\232\032\363=f;U=\325\3352\275\\\233^\275a\372j\275g\314\263\274\256\207\310:\214Y\005\276y\r\251;\376\262\"\275Z\203\232\2752\273|\275\0202\354=h\344\363\275\253m\214\275&\'\253\275Q\022X\275xd\306<$Z\2456G\276c=\027\320\250=\303\224\003\2757A\006>\252\360\032>\253\315\317=D\223\261\275\020\330\021>\334?\301==\'\361\2753\032\264\275{\274\246=\236\2217=\364\271\337\274\354\332G\274\251(\226\272\204\374\001=\025\254S=b\204\240\275;\271\320\273\001\355\013\275\035\313\024=3\222d=\271\321M<q\220*;\003\256Q\274,\374\371<\033\033N\272\324\253\334\272\216\217\336<\260.\337<=\035\300\274\356\221r=\324NN=\350\273\213<\257\305\032\275\255X\353\274;\274\235\274\020l\017=\r\261\265<l\023f=)\345S\275\254\200E=6\2344;{\205\002<3w\211\274\377\376H\275\026\367-\274\326H\253=\353\230\271\273\311\251\341\274#\311p\2734ow<\3219\010\275\277\026\000\275\226\360?=k\236\027<\370\030\331\274\207\220d<l\222\272\272\n\345\000<\273w)\275\327\303\351\274\272\335}=\320}d\275Ek\221\274\230\016\270\274*YM\274\263\233w=U$\321\274Ul\014=T\0367=\260\202v=\202\025\225\274\325\023\361\274\226(?<\243\'\343\274\354\003\326\275\335\276\267\275:-8=_J\244\275\342%\342:9\001\243\275\201\252\342\273\204\2405=Qu\207=*Bh\275%\277\266\275u\350\016=M\310\206=j\212g;\006x\364\274 \340\247\275\227\236\'=\025m\274\274u\230\332=\204\030|\273\261\001u;;\3104=9\251\223=\372\255I=\007\027\216=\033\240>=v\321\302;\2505>\275\221:\r>\304\204\022=\327\365\236=\204\270U\275b6\276=[\262\202=\343c*=\262\263\370\275\213\255\020>\360\212\346\275,\037\326=-)v=\350\226\350=\3415\t\275\177V\261\275{\267\3769n$\200=\035\335,>\304n\036=5Q\000=Gwk\275\205\031\\=E\277\222=\035LY\275i\004:\275\245_\022\276\314d8\276\211\304\272=.\375\177\274\007\346\003=\254z&>\313~\352\274\003\343\327\275\363D\324=\253f\343\275N\311\324\275<\216V<3\240\024\2745LQ\275\272%\006\275>\r\372=\230S\021\276P;\317<\n\033h\275\254\304^\275\214\342]>Z\245\320;\010\350=\275.o\235\275\004\263\274=\232\226+=\200\251\262=\232C\337\275~1\201\275\0064\007>\316\021\210\275\362\005\302\275Q5Q=\332V\272=\311\350\265\275\377?\002\275\216\277\306\274\251\266\367<\207\362J=\353\037\266\275bc}=K\307\304=`a\251\275\264\r\322\275\345\243\307=\277\3351\276~\314<\275\256\206A=<\272\250=\274\232\031<\344\022<=\323\327\257\275\203cJ\275\357\300\017> g<<r|@=\341\'E\27456\267\275\241\316\244<sC\227\2759?\262\275\346\304\262=\3778\354\274Y\247p=\013\021\262\274\014\221\251=2*j=mS%=\361\371\235=\370\354\227\275C\033\243<Q\t\000\275\323\373\356=a\013\271=\271\367*=\222\035j\275\327\257\275<\276\013t\275e\246\266=\265\020\t\276\332\343(=\345\331 \275\0139\031\275\0367\314<\351\327\r\276Q\363U>\013\326\305\274\243\374\013\276\"\357\272\275\211\353\245=\316\006\363:0\361.\274K\010\325=/bo=\001\303$\274-\353\252\275\020k\2007\001\303\245\274\344\020{\275\264\273\342\275\252\323\312=\301U\203\275A&u\275K\355\036=\004\221 >\236\227M\275\352\252\246\274\345\2716\275\003\265\001>+\274l=\362\003\230\274\311#\355=\344\303\353\275\376r\331=\256\326O\275Y\373\013\276\342`j\275\2759j\276\212s\373=:{\025\276jX\n=,\273\260\275n\277\212=$\032\350=\325\364\204=\205\2628>Bs\007>C\003v\274>\375\n\275\3458\026>\340\341\336\275\260\216\377\275\324^\237=e\317\212\275\010p\226=\340\237\026\273\023r\247\275\254\232\034>{o\215=\026\001\312\275S{\016\276\304\225\003=k\014\302\273_\327-\276\233\030\275\274\237\023K=\321\264\225\274\267\347\302\274\327\324\364\275\262\2230\275\\?\030\276\302\246\021\276\232`\237=,0 \274\001D\311<\352S >q\245\273=\323\307\246\275\215c\026\276\3504\021\273\271\004\222<\225\027\020>\372n\247\275)\3239\276\273\233\235\2755\205\215\275X X\276,\217\300\275\001\003=\275\211j3\272J\323\214=\271\030\353\275+\033\200\274E\273Z\275\035\241$\276\205\310\260=F\263\344\275\206[\376=\004G5=\024E\217\275G~#\2766X\207\275\301\317*\275qr\'>\267\017\220\274p2\205\275\t\361\030<\3262\254\274\311j\035\2768\223\217=\371\005\001\275\253\322w\275f\017\325\275u:\010>\3158\027\276\206\224\366=\256\301X\275#\232\025= \262\222\275\242\313K\276\362\001\006=dH|;\'\347\274\274\313,\213=\345\271(\275A\352d\274\234\371\001=\034\374\3427td\007>h!\337<\232\005\263\275\353g\265\275P}\232=\202\210\260\275\200\310\331<\215!Z\271\237\216A\275aL#\275\037\230)\275a\030\200<\262U\005\276yN\036\275[\031\307\275\342Q\270\275\257\031\004<G\215\002>:\214\256=\312\000\342\274D\210\217\275y9\213<1\203\006\276\332p\034=d\031\267\274\361\204O\275\317\\\317=u\007\"\275\033W%\276\336\300d\275Mh.\276\030\023\305=\377\352\261<\223\233\260\275\004\272r\275\rw=>a\023\265=\234\016\373=\332\314\323<\221\274 \274 @\377=%\261|\275\026}\340\275\276,\200\275\336i\272=Dl/\274\212\2740\275<\246\274\275#\340\304\275h\263U\275\216\3437>j\220\240\275\036D\336<\247\302\003\276\246\254\t\275\255\356\324\275\226\343\224=1\361\010=a\262\202=\367\254\235=\031\013\342\274/\310\251\275\300\344\267\274A\034\276\275(\210\304=\337\330c=\252\203\022=\363\260R=\'\324\372\274)\361\335=[T\301\271\3555\210=\200\nz<[\323\346=\244\221\200=\014\017K=#\220\027\276\273-\314\275\003\235\032\276\326^\247=5*\262<\217[\352\272\212\200\021\275\365\226\261\2753\241o\272n`\311\275Y\366\216=\360\303i=\033\034U<\305\215=\275\332a\217=\r\\\312\275\264\273\325=\330\267\332\274\201\344\020\276Z\332i\273\351\202^\275Y:\'\274G\030\213\272zu\335\274c!R\275z:g;\215t\215=\315D\335\275R\253\357<\2149%=\345`A\275_\013\377\274G\235\242\275\3212\313\275\311\246\311=\261s=\275\220\254(\274>\277.;\031o\021\276\200\326\264=\325U3=\357\377Q<\363Q\243=\345\031t\275|Q\202\2728c_=\004\240\024\276V\020\355\275W\331\003\276\267u\330\275\310?\317=\262\261\266<\336\317\273=L\026\245\275\200O\252\275\356\021\255\273\\\320F=\311\267\032>\246\256\020\273n \212=\256\345\372<\016\226c=\274\253\005>\230\202c=\255P1=\215;8\275\371\305\261\275\203U\215\275Uyr\275\237\213\200;jp\024>>A\310=\316\256\212<i\2215\275\024\232A=\244\373\210\273`\366\332=yO\023\275\343\264\366\275\275k\253=(\352<>\227\203\324=/k\024>V\353\233=$\201\313<Z\267\003>\013\364\036>\207:5>\375|j\275\361\003\323=|\237`\274t\034\222\275Rl\356=`\256\r\276e\036\260=9\206\024>M\253\322==\361\256\273\346g\354\273l\226\020\276\340\r\2249\342\376\"\276\341!\273\275\263\337>>\206z;=\274\002(\276\371\233\314=w,A\276DQ\334\275\376\337\034\274\2144T\275D\337\n\276\250\331!>\271\232\225<1\030\305=\014\006/<4\362\304\274\260.\236\275\026q>=\221\254\236\275\261\304\274= \206\006>\225\256\020\276>F!\274\035\353\305=\262l\227\275\300\342\257=\370T\036>W\275\351=\000|\342\275{\320\007\276\314\260\255=E$\277=&\255|\275\221\272\'>/\377\344=\377\253\324=^\210Y=rz\277;\253W\311\273\010\003\360=\370\362\321\274$\"\322=\355\370\002=\226\301\"<lY\351=\370\230\314=\207\014\n\275Q6$\275\213O\014\275\225%\223\275\001O\362=\224l\337\274\340@\244\274v\237\216=b\302\025\276s\356<\275\233\274\005\276\203Sx=\372\026\341\275\334\343r=\321z\371;\317\302\322\275[F,\276\350\366\024=\315\036<=\242\202m\275\223\305\036>\276\353e\275\007Q\272=t\367\216\275t\247C>\036\316\242=\to\220=z\226\311\274\201/\"=\241v\225\275Nr\003\275%r\350\275\200c\274=U\017\323=\335\004\177\275\320r\025\276\312*\004\275\277}\001\275\014\370\033\276\341\274\347\275\206\365`=\345\316\026;\273\344a<\235>!=\2231\324;]s\230=\215\n\350\2747s\300\275\212\264\247\275\310p\223\275|&\261\275\315Y\212\275%\314\243\275\252\035\315\275\377\260\014>UOH>\221\312\313=t\361J\275x\377{\275a&\020>H\211\264=\275\2001>&a\032>\204\254\035>]\342\025\276\3303\262\2754g\001>\236\272E=q\260\027>H\277\t\276\233\2456>6\0079\275\032\002\032>\016\273\333<55>>\345I\233\274h,X=0\362%\276F\330V\276\332\353\345<\336\031\023\276Q\201\212=_\t\240\275\253Oe\2757H<\275\367\305\033\276\371\246\032\275#\227J\276\244\340f\275\252\224*=\235-\037<\214\341\003\276\014\3365=4\036(\275?h\264=-\342X\274\n\204C>\rV^=\237V};\221\303\031\276*5\332=\345\312\016=\225\256\365\275~1\342\275M\0260<\357\221\346\275\301\240\023\276\265\342\237\275\310\021a>E\250\365\275\264>\372=A+\255;u=\371\274\016\260J\275\352d\343\275V\322\004>,\201\357\273\240\314h\267\310p\260=\367\006\276\275\014Q\270<\250u_\276:Z\261\274z\002\355\273\004\202\235\275\0169\026\276\336\262\233\275\334\324\000=\233A->\220\204\240\275\374\352g=j:i\275\344\221\031>$K\364;\207y\212\275$g\234\275\204>\010\276\237\025\255=\373v(\2740\352Q\274l\332\252=\241#I=Z\330\317=\347\266\273=q\0046\275v7\357\274\220\314\237\275\256jD=h\273\335\275\250\243\215=\0204\226\274\364\312\341\275V\271\267<V\360\036\276*\266\226=*\246\272<0T\304\275\241\210\205\273\250\'`\275C9h\275]\312\252<\341?\231\275\365$\225<\3138\023\275,\026\216=\376\275\237=\204W\001\276/,\376\274Vk\223\274O\rl:\023OR\275G\002=\275\027\263v=\234\250\324\275\022\205C\274<\324\251\274\351\017\215\275dOU\274\376}\215\275\331\235\245<\237\305\030>@QD<q\r\365\274h\374Z\275\347\262P<\222=\033=\234\002\006>\344\306\270\275Ne[\274Ex\242\275h\356\333<L\177\275=!\267P>G;\023>\"1(=\226*=>\2541\010\274\022\010\357=!,z\275\345\324\033\276\206\213T=\234J\274\275l\307\n>b\270\036>\231\027\001\276\241\316f\275\023\005\216\275\t\032a\276\022\334\227\275\311S:\276?\353\277\275\346\301\\=h8\026\276U&\002\276\\\010\202\275\323%\342=\322\266\251\275z\036r=\222H+\275\315\275\003;\001\025&\276\302\tg=>J\270\275\r3\305\2753^\366\274o\034\221\275+l\241<\313\222\326=)\205\203=\325\340*>\031=\203=\300\001\212\275\271\251L\274\254\201?\274\304\001\326<Q\232\035\276\354?7\275\177\272\233\275#\010\345\273\367\3022\274\233\357\204\275_q\221=\314r\323\273&\3544<\034W.>\204\304\205<\212\3635\276\267\304A\274\252\302\315=e5\027>i a>v\352\035;\301\371\033\275\307I\013\274\014\267\024\275\257\376\254\275u\237\330=\255i\"=\006`==\244E\213\275\037\363\335=L\332\222=\340\213\027\275\267\\\365\275D\315$\276b@\205\273=]\253=\226U\230\275\342[l=\244\345\241\273 \\O\275\231N\t>2\213\232\275\026\017\350\274j\316=\275\210D\231=\032\'\343=\"\005\216<N\274i\276e\361\025\2755\361\004>b\335y<\351 .>\257\316\266\274X\357+=\2629\331;\241\233\033=\371b\210<\217\374\026\2757\031j\275\260\313\204\273L\224z=\374y\213<K\254\307\271\317\220o=\313\236\235\274\035\277d\273\020CF<Vh\255\274\260\302\034=P\243)\275\217*Q\275\302\355\017\273Ga\343=4u\035=\366\332\332\272\214\024p\274k\307\236<\007\3554\275\023n*\275_\304\341<\213\2106=\037[\263;\365\272\266<m>`<;\217%\275\224\234\255=Z\006\037\276_2\034=G\377\355<\300\311\314\275\323\260,<\324m\001\275\210,\002\276\213\263\250\2745\361\305\275:\255\030>\230\212\356=\262\375\014\276\031\377\350\275A\365\">\rh\037\276\360\350\t=\357\010\210\275\024PZ\275\254\216\036>\327]\037>\010\3149\275k\177B\275\177\340\226=D\'E\276\257\206\031\276\273\364n=\017]\233\275G!\274\275%|\\=\364\361#>tZo\275\222\331\006>u\331l=\035\205\3378\316\014\003>B\204\273=@b\010>\373\277\251\274\032\332\200\274\255\371\235\275~\335n<\312\347\220\275 q\262<\345\342`\274\305T\372\2733P\002\275[.6\275\376\211\022\274\377\235\310=\211\370\357<\035\231&\275\035y\341=\270\031\325;\271}\247=\363L\237=\316\020\265;\221e\036<8\222R=\303\010\263<\007\306\251=\353e\240=T\236\253\274\256\346/=u\275\253=\265\177A=\302\036\213;\014\250\007=\372\206\"\275$G\331=Vr\345\274u\010\372=\304\372m\273s;\211\275\211l\016<\273\254h<\004\333\004=\247\310\002\274\335_\356\274\234+\344\2743\241\211\2751\254\220\275\266\321K\275E\271\234=\375\365\241<E \341\274\013\025\242\274j\345`\275\347Ek=\026\207\260\273\007`~=w\352P\275R\236<\275^Sk\275Jb0<R\224\210=\320\227\n\276\277a\005>\340\247\016\276I`\253\274}p\333=\303\273\363\2751\233\013\275\310v\303\275\367\316->\t\232z\274\375\261\006=\251u\316\275\307\255a=\254W\220=\226\274\371\275\037\336p\274lV\267\275/\273\262\274\\\032\212\275Y_\020=\244\373\322\2745\031\037\275/\237\021>\227\334\325=\273\327\245\275\235\250\014\275t\002\037=E\032 \275x\355\026\275\004\303a=\230^\013\275\236\233\305\275\023\225!\276\322\225\332\275\256!\021>\356\035\200=\274L\245\275\\`\313\274z\016\036\275\214u\357=\351\364t<h\260\362\273xdp\275\346\006\261<\003\304\353:\351T$\276\027\032/\276\273\352\353=\314\356\251=\022I\010>\202\321\025\276\371r\037\276\207\024\202\273a\322`=\341z\031\276\245\307\020=r\022x=A\001\202=\304N\371\274\251\002\032\273~s\304=\275\220\'\276\263F\365\275\277\007n\274\302\n\360\274`LA>\242L\253=[f\271=\206:Q<W\376\237\275\232\237i=\364l\260=\211\331u=\333\324\332=\'t\204>\322\254}<\370M&=\205\373\233=\"\006%>\0064\n=\244#\201\275\313\220-<\360e\205=\001\204\230\275G\330\235=\034&\r>\215d\207\275\362\264\262=`\r\357<\342\202\262\275\220\020)>_<\376<8\003\313<\367\035\204\273->\r>\212\322\251\275\245\243==s~\244\274Rc\t=\022iN>`\006\316\275\034+3>X!\326\274\257\355,\275L\247\227;\224U\257\275\022?5>+\244\315\275]\320{=\357\313\254\275\2325\265=\325z\264=\212\234\230\275\340J\367=$\2052>\004|\341=\010\244/=\305)\215\275\236\364\223=\034\242<>\220\230\345\275p\213\246\275*8\344=\373;*>\3005\321\275\222\326\301\274\227P0=\035\357\r=\311#\212=\256\t\033\275\003\372\343\274\'\250K\275\035\2074\275\362~\226\2723(\225=\3710V=rd\260\275\354\t\201\2744\265\017>$;\313=\341m\212=-\342\227\275\202\260\343\275\n[\231=\222Y\205=\037\261\251\275z\334\372;\223J7\275h\304\366=u\314\200=\214w\336\275\005\2168=\021\024\021\276\301Y\n\275Zo\004=\272\223X<\300\337\246\274\274\2144=3~Y\274\365\004\027\276\0259\265=\257\342\034>\310s\225\275\3567\214\275\r\366\326\275\375\320\365\275\304\226\036>is\340=\306\030\204\275\325\300\302\275\244_\222=\342\301\002<\310\2234\276(c7\276\200\3407\275~\330\370=\221\024\023\276M\350\265\274\010>\242=\237\252\024>\352\345V\275d\025\234=\251{\262= \\\310\275\267\007\343=\3116\003>\362\346 <\256\3123=*?\014\276;\320\032\275\3379\235\275;\237\235<\305DG\274\232\243J\2766,o=O%\236\275\370r\315\275\201\'(\275voo\275\337\003\374\274S\233\"\276G\330;<]\020\202\276\354\3259\275`Bl=\031\317\332\275v\355\275=cH\014\276\020\305\323\274\325\r\t\276\337=\010\276w\372\034>\344\241\224=\262\353B\274@dJ\275\362k_\276\362\333\005\276\\\225\274\273*=x=W9\031\274\234\305\276\275!\337\344=\340\376W\2756X\013\276\037)1;d\265\247= a\325\275\024\2238=\037\224\336\274\201y\231\275\031\242\016=h*\243\273\210\020 \275{T`\276\201\357!\276\377\335\244\275\355\322f\275L\270\t\276\344\317\202\275T\370\333\275\310R\370\274L\207\345\275\344\035\033\276\343\222\231\275\001\355\020>KG\340\275\334\265|\2750\027\034\276-\003\203\274\306:\212=\246\035\277=\200\354a\274%\3043\275C\370 \276\275\371\230\275?\367\253\275\344h\022\275p\317\332\275\003\327\025\275?\261d=\240\306\251;`\342\266\275\3413C\274\312\334\346\275-\330\030\275\310\024\234=\273\017\373=q\274[\275\212\314|\274!D\366;>\005\267\275\335\341Z\271\365\264\374=aA\224=A\242\242\274H=\031\275\243\\\255\275\223~\025\275\213\241\226\274H\244%\274\004\216\300=\322/\202=\013\n\322\273\356\267A\276\237\247.\275/\"\002<RnK=\2436>=\263v\214=\316\360\244=\"%\235\274Md>\275\332\351\t\276\202\353=\274\200,\200\275\2215\035>\032.}\274Jd\206=)n\250:d\312\035=O*\200\274\004\311\326\275Mn\263=\254\353\324=\016\362_=>\240\207\275\220j\016=\203Zw=\024\365Z\275\364\'\211=8>\256\274:.7\275\222\241;\275\234\201$\276\202\216\022\276\333\377\256=A&\025\276\273_f\276\\\253\231\275\022z\260\275w\2705\275\363\036\235\274W\322\224\275t\2212:!\376J>\201\335\242\275\200\244\303:\316h\273\274\004V\241\275:\003\207\275_\030\030=\265L\334\275\240>\270\273\306\374\177\275\007\341\224\275\232D\273\274s7\031\275\312\344z\274\\\371\210\275\263 #>\344\253\252\275\323gP<\311=\353<l\340\270\275\003\213\312<*P\026=!B\211=\010`\244\275\334N\222=+\330\237=\330\270\303\274\314\302F\274YlF\276h\361\004\276\304\001\000\274H\361\266\275N\025\324=\216A\364\275\312\362\r=\273f\321\275Ih\r\276\372\214\247\275\243\003\227\275\371k\245\275\322\245,\276%\246\225\275u\267\013\276\'\307\031\275\312G\027>b\270\244;`\272l=-;\023>\272\202\265\275\235\323\217= \371\007\275x\210\223\275\237\034\201=\225\217k\275\302\016k\274+\217\371\274z\217\275\275\276N,=&RE=B\r\021\275\333L\351\275\240,\n\276\214\320\033>\302\006\016\274\320\237i=\223\267\354=\211\255\345\274\345\246\226\275\320m\003\276\303\271\306\274\206\257==-aH\273\276\314\332\275\331ti\274a\276G\275\n\363\n=\214L\311\275\337\301\226<\373\373\005=\2474\321<\034\267\035\274v\321\203\274\234\024\304=e\344\324<\001\235\266\275\254\225\270=<\227\315\275\321q-\275R\235\035\275\005\201\367\275\267\261>\275U#7<\2514_;\251\267\013>\024\036><\254\262F>\202\202\253=\013\336.>1VV=5\271\253<\030\262\371<\315/\256\275\007\263\265=\021\263\001\276%\247o=\215X\230=\313\007\200=i\374\363\275\0046\300=\341\335\241\275\322\314\004>8\\;=\000\377\025\276\363\227\005=\256\372\231\274\221pR\275\346l\236=\335\017\222=\371\226\300\275\017T\204\275\356\236\t\276`\206\000=\032\230\312=\345_\024\276\366D\345\275*\3056\276NL\324=\373\321\317\275\257#\333<\021\260s=\257\210\013\275\005\356\002\276\017$\353\275ly\370=\354*\204\276\263\\\224=\271\017\344\2753 \000\276c\211\360\2758\014\333\275\301e\021>k\330\013>\344\251\352\2750\003->_\014\017\274,\232\230\275\217\211\322=\324S\007\276 \r\314=\016\250\250=\014Gl\272l\323\200=\231D\010\2763\371!\276}h\001\276[\351\255\275\326\252m\275E\2364\276g\371\335=2\001\017\276\371\317\352=\344\326L<\200\216\220\275\331\233P\276\002\251\212<\033\336\033=F\203\353\272d\307\034=\374\370\333=(\274\n\276\222\211\023=\207\256\363<\344^V\275\274_\345\273\\/\261=3\204\317\275\244Vq\275\301\2522=\312\2554\276H\312\326<\275\"\203=X\360L=O\356\001\276\227\213 \275\334\212B\276\305\341Q;\333\342\322<.\327\\\275\334\327%=\275\313\2038\024\320d\2753C\031=\244\r\010\275\010\367\213\275\220\311\335\273\337\2317=\215\2143=\021\327]=`\r\221\275\246b\304\273\005\274\000\275M0\325<\027\357\262\274\360\272\030<AI\347<\262\2135=\366\311\216<\262\313Z\275\362\304\217\275\002KX<\017\2019={>\231\274f\3211<\345Y\211\275\023dR;\014`\332=\201x!>\315\002\230\275\210;5<\266\245m<\301\351\'\275Q(~\275\356\3456\276\341\252\214\275 \212\244=>z\020\276:e\212\275\031\035\334=\322\366\367\275Eb\223\275\225\330_=\303\016\003>\227\337\204;\326\032\223=ks\244\274\366\250\004\276j\"\267\275xt\312\275-\333L=\211\231\220<Fv\211=JdK=0?\224\275V\311\364\275\355\212%>j\246\030>\267m\205=\334v\000>|o\377=\332\360\253\275\250>\025>\274L\277\275\235\242\032=\273\200\306=\345n\350\275IFa=\350V\004=\370\313\224\274U$\215;n\210\230\274\024\367\212\274\311\313\363=w\331\020>B=\235\275\340u\037=\340\331t=0m\177=\317\265\265\275\005\272W=\226b\304;\2439\212\275\350\353\275=\022u\337=~w\262=\234\325\266\275\271\321\272<~\341\240\274.\354\304= ]Z\275\235)\267\275\303\t)\275l\267x\275f\345\031<\263\224\265\275$\376\343<\037\312\276\274\014\021\253=\270\224,>\273o\302\275u\004\302=\315P\203\275y\210A\274\351\325>\275\301!)<$\003]>\016P\260\275Mr\212\274+\332\313\274\223\232\245=\360\223\210=\331\246@=m8\377\274\316\020\264=e\306\024>\306c\362\275\313}\320<\357M\003=\367\241\342=\001\277~\275\215\306#>\177\320C=J\352\232\274\213q\313=\224`\323\275$\222*=\272o\315\275D~\203\275\370\264\273=\006l\356<\321\256\362=\255\203\214<\"\204V\275\232\211A=*\000\013=\2712\236\2744\210\234=\211\023\335\274W\217\217=\205\252\022\275\t\364\007\274r\350\250\273\220rr=\207\036\002>^7\374=\036R\267=\230\342\000>\213,\337\275\005\332\027=\343\027\217=\3440\375\274\261\246\317\273\031\3068=\312\030\372<\207\367\014\276\333\242\r>\355(\222\274JK\211\275\351\216\356=\345\307\325<m\332\263\275\3777\016>\"&A=\013,\245<\371e\242\275\305*\373\275X\211\002><L\026\275\2115\375\275\277Z\225<\246:\026>\351\222\014>y=\206;\270\204\230\275\317S\310\275D\313\035\275\022\025\351\275\353,1>b\310\033>2\346\370=\300\354\021>N\265x\275\234y\236=.\350\017\276;\311\035>\300\354\203\2747A\364=\267{\350\275\305 \002\276\263p\374\275@\232\264=\211\337\324<\221\214\272=\265\366\304\2752\005\367=\000D\230=g\"\346\273\221~-\275H\023\266\274\265\361<=\374l\024>\223\245\345=8\242=<\024\270?\275z\033q\275=\177\365=0\346H\275\303OI<\025\303\307=\371L\007=\333\026\000<\2609\225\2750:C=v\305\372<\373\242\210\275\361h\347\275_Xd<E\317];v\303\234\275L\230\332=\3444\214\275\335\210\024\275\226\275\272=O\0265\276K\255<>j\020\303\275\205_\253\275\332,`\275\337D\345\275\345\301\355<\330\235?\275\214\372\022<\276\347\340\275\313et>\356\302*=\253)\002\276;l\200\275:}\317\275\360\022\201\274\016\327\314;4B\377\275\300\354\260\273\3659\371=5\364\224\275\260\340\014\274\342\016&\275\227\311\340\273\"TU\275]c\220=*\267%>O\365\022>\312O\021=\223\254\343=\360M\226\275A}\225\274\027\205A;\334\344B=\032w\253\275\302\001\033=jl\232=/\343<=\023\3602\275\025\233\370\275\002\323\247\274\327\373\206=\262\277\350=\014\351\271<H\032\261\275\037\307\246<\252\035_=T\000\206;\2624\357\275\335]\224=N!`=\234\273\266\275\273\352\352=\362,\301<N\r\241\275\245\223\017<\206\242c\275\356Fu<\256S\372;B\247\322\275@\271\365=M\035\220;\247\301\261<\344\312\323<\317\367K=\276\370\227=\213\026{=\030W~=\004\336(\276\326\360\206\275\355\017\250<\277k\273\275\376\275#>\301\037\024>4\211R\276*\217\"\276rF\304\274\236\360\236\275\036\177\260\274\210^\221\272\322\251A\2755\221(>\341[\031>CW-\2743y\242\275\235\316\361\275\327<\236=}\264J\275\263\261\370\275\013R\017\276q\376\307=\026\365o\275\234\271\303=O8\004\274t\252\320=\320\222\022=1\205h\275\306#\367=\027\244\202\274\320\263\213\275 \273\343<>#\001\276I\024\276\275--\300\274\214\223$\276\0169\341<B\312\244\274\340\n\220\273\216\222\004=\275!|=)\316\243\275\271\001\230\275\333\276[\274:G\310=@\027`\274+\002\341\275=\261N=\312\226\025\275\t[{=\236\005\267\275\013\3201\275\353\241\031\2763tv\275\327Lh=7S#<9\264.\275Pt\024\274\257\255\354\273r (=\2472+=\023-\023\275_k\033\275\302f\025\276\243\376)>u\\\331<\310.\255\2759\216\020\276\2527\260\274\025ga\275\222}\250=\373\'\334=U\356\312\275\217\235y=\331\027\312\2757\246\351\275*\n\271\275P\316\206\275\265\245\220<p&>=\353\010\335\275\365\231\354=?\020\252=\251\000@\275\210.<\276y\216\225\275#O\212\275d\341,\276\271Y\001>\326B\277=9g\006\275\375\244\036\274)j\274\274\235\311!>\304\274\021\274\321Ys=\315\200\352<\2272C:\344<\253\275g\257<\275\330\"\027=<\346u=\265\342n\274\355-Z\273\364a\215<S\315=\275&\016\231\274mL\t<\271\300\217\274\013\340\267\275o\354\202\274\366\265\010=\221\324\373\273<\n\206=\241Z =\261e\213\275\344\236:<\301\016%=[w\330=\377\213\226\274D\031\227\275\245\262)==\242\315=\030VB=\336\356\247=$\227\275=\253W\030>\340c\n>H\217\310=SLN\275]Q1=jf\230\276\307\251H\276\345\234\222;\213\205\235\274\032\n\232\272\246\037\303=U4\371\274\030+\213\274%0\237\271\360\312\244<\305\002r\274\272\340\366\275\371\264\217=XR\204\275\261\244G\275\244v\r>O\267>=\352\332\317\275\367\274G>G\3053=8\360$>{\267\245\275\nP\013\276\275k\205=\251 \256<\222\311\337=q\223\251\275:\373\307\274\276\376\003\276!*\345\275\203\273\364<>\005\276\275\325>\023\276\303\303c\274\365?J\276C\301\"\275Y\361\212=[/D;w2\277=\270\000Q=\276\376\324=S\354\361<\370.$\276\351@\230=\"\223\205\275\\\205W\274\005j\324\275\353\200\311\275\244\306\360\275p\224]\273,\311y\275\214\326\316\275\220Y\267<Q\261k\274nx\231=\004\020-;\033\273>\275\240\337L\275\352\307\220=\307\371\204=\021`[\275>\324\r\276K\312\305=\251\303\317\275\025h\316\273\253\244\321\275z\356\265\273u\262\003\274d\216\267\275\324\351\342\274\250\300g=\001\301\253<8g\211\275\252\335\222\275\302\344\037\276J\227\026\276\306P\366\274\341+\277\275\005\376\265\275i?,\276QVd\275\002F\235=3\006\035\276h\266\303;Te\r=\246\313W\275\371|\376=\322\037\334=\352\'\003\276\305M\350=\225P\304\275h\204\227=\226\nf<\220\225\023>\256S\032=\272B\225<QR\014=\351!$=\315\027\232\275\371\214\206\275\n\332$\275\311\314\223\274[\016\336\275\327*\326=\257Qm\275D K\275\205\024-\275\2248\\\273B\3669\275\205\337\252\275\274\341\301<\353\035\315\275c\260\312=\323\303\024\275\347\337\225\275\301?\374=\367\366\322\274\213\225\214=\347h\335;\320\367]\275\302\272\243=\332>\272\275\230?\t\276[T$\276\217m\320\275Q\276\307\275\222\217\030>\274j\305=\206l\255\275P\373\337=9AU=P\253\262=.\347~<\203\004U>.J\005\276c \r\276\272rq\275\316\365\314\275\036\\\312=B\251\271\275\311\255\034\276@0\273\275L\307]\274\243\263\016>\200\363\t=#\212\375\275\024\357\236=\201`\265<l2\">$}\006=\246\351\345\274\271j\320=b\302\305\275\nG\317\275\344-\271=\345\002#\276V\030\343:>~\226<\320\313Y=\034RA\276\010\254\346\275\302B\014\276\226\210\004\276\200\260\220=7\000\273=*Q\336;\245w\334=\226\325\352=\'\375\314\275g%\373=\371\334\026\275&(\260=J\305\002\275\365}\r\276\364\311\236;\036%X=-\003c=\215\306?\276\334\231:\276\223\270\247\274]\264\315<b*\262\274W\n\201<\226c\260=\312\025\213=\351k\034\276\352q\344=\240\271\355\274\004@\370=\036\237\322<\250\216\'<\217s\212\2759o\030\276\037\263\360\275\021\255\231\275\205\3136>\213\206\254\2754\346\371\275\307\327f<I`\273=F\276\345=\014R\203\274\013\023\022=\307\272>\276\\\230\337\275\362\257\256\275YgA\275m\260\256=\345\263x<\334\377P\275{\323T\276\241\347\200\275L\307\363\274\333<\000>\242\202\034\2755)\232\275\372\335\027=\353\316\242\274nJ\333=\2176\227\275\235\232$\275\327\007\216\275\247\267\256<\274\377\243<F)\270<\"\250q<\325\373\031\274\036\324\341\274\360\345\360\275\231\002B\275\253\202D\2747\332\\\275\220X\344;\205\325\021\274\266\022-\2757\253{;\002\205\271;\363lk\275-@\250=5\r\304\275s\351\346\275\277\254v=&\341\261; E\263=\211\202t<\005T\307<I\334\004\275\177\310\026>\224Y\021\276m\017\303=a~\217\2750\005&>#\270\003>\321\304B<\031\240\233=u\257\316\275\267\313\351=\'\r\027\276,UH\276\241\374\3579\014\",=\271\333\022=rE\025\276O\264\350\275\333\337\022>\240\247\017>\270\n\"\275\322\002\365=y-\273\275\252\346\220\273\n\276\255=\264\245Z=\307\210\315=\303\302\241\275w\223\'>\264\326\016>\203)\373\274T\214\"=\374h\242\2759\221b<n\235\233\275\217\313\343\275\236\371M\275,\373\031=\351\375\224=ow\311\275H\312\361\274\216z3\276\264\220\025\276\221\242\217=\0011!\276\211\330\207\274\200\2211=p\273\336\275)0#\276\327g\333\275E\254\'=@<\353\275;\021@=\017\022\363\275I\322\323=\374\227\354<k\336\000\276\206\354O\276\010\350\"\276S\006\035\275j\341)\276\375\333\031\276\223LE\276\000\311\005\276\025\230\370<6\014\021\276\303\335\255=JA\217=^\371\203=\253\266D\276\223l\341\273\317\254&=\270z\375\274\300\004%\275\270\222\021\276\302\343\277<\271\304\r=\300GO=Dmx\275\330,I\275t\\\237\275\031\226\215\275\332\275\017\275\221\375\357\275\256k\207\275i\256\273=[@\003\276V\340\225\275=\013\214\275\274M\372\275\307\215\303=\224\261\007\276\313\321\023=\261\371\325<\016~\010=M;\r\274\352\300\252\274\330wR\275#\277\206\275\210\326\006\276]q\265=\326H\356\274(F\220=I\034\007>3\023\261\275\005\275\027\273\0346\021\275JQ\251\274P\256\026=\200\261V=6\334\316\275\032\314\347\275J\267\226\274\331 \244=\"\230\232=\024\245\332<s\335\254=\313\004\246\275/\t\305=~\002c=Bcy\275o\203\320\274\252\206s<\227o\226=\350k\024=\004\333\207=\236\367\312<Y\235\002\2768\347\312\275\t\030.>\274\334\242\273a\244\016>P|\t\275\244f7\276\340=%\275\264\273\300=\270\2016=\242\342y\275\374\356\356\275\372\226-\275dAl\275|U.>+D`\275\274\374F<\314\315\216\275h\273\273\275$\004L\275\030\t\245=\211\345W\275ar->\312\237\255\275\325\341G>a\177\327=\213]\317\275\256\334$>\3147\265\275\023\314I\273tu{\275\217c\222\274.+\347=\253\356\272\275\343\214\357=\202\220\353\275\343\262\026\276\315\247\237=\n\210\r>\247\234\322\275)h\001\276\343O\246=k\343F;\014@\257=O\2752\2752\016e;8\365\312=mA\027\276_\243\237\275\0029Z\275\214,e<\350T\231=\275\361h<Y\305k<g?\371\274Qw\253=*I\202\275D\020\353=\036\217 \275\360MU\275$<*;\337/\341=\365\350\346\275s\034\216\275\253\263\316=\320%\371\275\274D\337\275\224,r\2758\337\260\2759\204\234<K\037\277<F\276\261\275\226\0213\275\355R\305=\352\216\034\275|\201=<\301*\240\273\377\234\032\276\325\376\016\276\255\020\262=\271\031\200\271\302N\257\274|\005\357\2754K\203\275\004Z\005\276\274i\314=q3\000\276\370o\000\276\206\200\266\275\205;\004>\024\300\353\275M\227H=R\272O=\337\304)=\027\275\242\273Z}\030\276\177\006\330=:)\322\275\336\004\335\275l\263Y\275P\336\010=4\375\347\275\235\021\">\253W\014\275\225$\t\274K\t~<m+\001>$\260\371=\242\034\031;Ww\324<3\226N\275\373\032i=Fi\332=\313G\200\275\306\3210=\351\316\327=\365y\307\275l\333\025\273\036\371\325=\250\334\367\275P4\210=\327\204\306=~C\225\275\352w\203\275g7\331<\370XE=O\263*>\233\231\n>\224\327\253=K\337~=\2216\372\274\223bz=\273g+>M\033 \273@T5>F\220\010>\235^\351=V\177&\275\321\237\336\275\201\340\356=\242\240\267=Kt\017>\232\304\232=\364*\223\274\311]\345\275\035\341\036\276\300\271\025\275\255@\024\276\344\270\241<2T#\276:\261\365=:\252\177\275\036\263\251\275{\277\000>\360\322\022>\000\227\270\275\025\257?\275\306\236\352\273Kv\035\276Mtn\273;\363H=\312\365\032\276\330\022\304=\361\236\212<9\277d=kCB=[\304 <\2057\235=\\\247\255=\370\022\335\274\272\275\032>\001\277:>\357\350\267\275\000\036\023>\223E\342=\240,\333\274i>T\275\245\314(=\333\262\334=92\221\275^\253\352=\217\241\005>\314\233,<\240YS\275\244\032\351\275w]\020>T\217\204<\n_\377=|\0251\275r\213\311\275\231\314\200=\260y\032>\351{\262<\345\215\212\274\324wA\274\351}\323\274/\223\355;\ns\376\275\216A%>\215a\327=\3769\374<\330T\212=\273\2445>s1G<-\356Z>\304\261)>gGf=\332Y\025>\226\317\t>\214\t\005>\310\274\210=\030R\201\273\245\271\352=f\275\247=S\254\234<\306\223\367\275\n\217\236=G\371\314=i\270\365\273\234L\016\275D\320\274=\0233\023=\237\366\305=\270rd<6\341\303=\021\212\334\274^\214m=\2261\200\275\003,\324=\345\031A\273\344\331\205\275\267\3140\274\372\"\370\275\237\225q=\346\344\200\272\006\3554;\341\364\225;Qr\224<~\037\000=3\274\262\275V\374A\275\031>\324\2743\267\240\275\323\321\213=\276,P=\337\211O\275\235Q\020\275\275\311;\275.\215#\275\001\332\024=^\305\342\275\250\225\336<\303\323\233\275\346J\002=%\301\277=;\311\211\275\033\'\224:5` <%ue;\304a@=\3606\367=A\006\347\275(a[\275\031\210$=1\346\325\275\242\2537\276\037\004*\274$\"\002>]C\200<\316*j\275\225$\252=\323R\354\275c`5>5\246\017\276\303\372\326\275^\350\302=I\227\277\274|8\323\275kZ\005>\353\331\212\275\330\005\247:\r#d\275\315\372\230\275w\301\006\276n\375\373\274\377[\326=a\r\t>Zr\271=\306\017\023\276\360u\226\275\274\242\030\275.\004\r\275*\317\371=\021\'\200\275\037\243\241\275\245\3321=z\264\316=m\002c=f\232r\275\234\207\251\275\240\031\004\276\203\014\363\274\217t\271\274s|\030\276\337FB=\344H\304\275D\350\034=\366\353\202<\233\353C\275%\034\271\273nT\002\275M\332\313=6\243\304\275~?\217\275\023\204\033\276\306\227\003>*I\210=\303\236\002\276\n~\227\275\n\303\212<p\255\026=\2765\n>\027\274W<<q\371;\'_\274\274\310\253.\275\035\010b<\351\237\212\275\\\010G\276\3653\005>$\r\"\276\317\032\260\273=t\035\275U\334Z<\001\353\016=\307\303\020>\363\360\325\273\027J\244\275\202\217\233\275\300\267L=\0372\301\274\227I\274=\217E9=4WW<z\342\260\275\014F\313=z\000\265=\251\r&;\311j\345=\346\362\037\276@\0101\276\241\274\255\274v\n\361<\275]\016>\244\320\213\274l\271\312\275\336\201\032= \275|=\270\311\306=\370EH=.\010\236\274\2261\000\275c\202\255\274Y\374\016\275S\n2=\366\320\004>/\340\217=\216\320\367=}\345\037\274\230\025\216;~U\314;\235>\230<\373\326\270=\361v\207\275\316\226\367=\2414\274\275\020\225\036\275\025MF\275n\313Q\275?\300\246=\226\234\004=\350\033;\274\266]\346;\302\305\244\274M\210\004\275*\247\026=_$f\275\000\035\201<\315\006\266\274\016v\243\275\377[M\275\210|\037=)\265#>O\010\365\275o,s\275}\020&\2756\006\233=1\321\034>\317\r\326=H\037\032\276g\034/=\223;\321=1\235\033\276\242w\004\276\016E\033\276\"\217\237\275L\000\215=\241C\224\275\327\344\357=\037\231S\275\027\373\345=\"s\024\276\261{\020\276\004G(>\273\357\341\275\203\366\351=\276\022\253\273\241qb<\217\231^=X\261\231\274\251\272\217=Q\327\310;x\003\225\275\303\210\331\275$\205\031>\033\324G=!\233\310\275d\245\216\275d\224]<g\023!>\322g\311=\021\026\357=\301S_=?M\031>D\203\222;\236\252\210=p\274\262=\372j\352=9k\300=\267\353q\275\222\243\3519^z\304=\341[\262<\214\020\331\275a\213\247=\036\331~=\365(Y>\276\337\353:\231\271\027>9Y+\272\273t\300=\311\234\263\275\303\257\213=Q9\024=\'\277\036\275\334\355\233\274*lM\275\320\ta\275\254\341=>\021\320\210\275\373\271\r\276\001\016\327\274\022VQ=\t\313[=Q+\026<\r\022\332=\251l!\274\321\244\242\275J\315\250<\037\232r=\245b\214=s\351\311\275\334\232\030<B\005\331=\264\237\360=D\307n\2720\241|=\'\246 =J9\212\274kRT\274\233\253\323<^$\332=\000\002)=Z\017Z\275\\\302\253\275\'s\033\276\027\336\371=~\271\336\275\254\032\205=\334\212\371\274\333\331\225\274\276\334\215\275c\203L\275\245\221\016>9q\257=/O\007>\004\306\260=|\300\227\275\326\201A=\023d\205=\326\021\037>\304jX\275\222\240G\275\033\331\002>\255\261G\273\366\n\376\2737\215\265=\323\274\'\275\374\273\324\275exI=\304\332\203\272\312z\261\275Y\337\004>\374nH:\320\333\025\276\214\301\033\276\035Lu<1\366u\275|\"e\275d\347\302\275\020\325\\;\332\010\227\275\374\221\244\275\311d\034\275YM\234;\2333g\274\210\205\207\275}\347\320\272n\327a=\035D\325=\327iv<\227\252\003\274(\374\216\274\027\034\005\273x^v\275n\332\">he\310\275\361X.\276\017\031\006>\'p\232\2753\206\306=\264W\303=]i\010\275\033\200\032>t\244\251\275\241\022\245=\233\322\234\274UEj=S\265\n=\027\310Q=]t\253=\262,\036>\333\222\336<\336\242\233=\201\253.\275^\226\002>\216\204\226=\305\232\226=\222\365\002=\276\255\020>\335\235\314=H\226\000>\035\036?=Oqi\2758\036?<\361\266\315\275KG\237\274\005\005\331=\301\331\237\274\254\335\244\274O\346\256=`\343\326\275#l\267\275\357Y%\275\320L\362=\313\362\237=\356/ =\207\240`\275\277\212\237=\263h\212=<\246_\275\361\234x\275\034\205\321=\346\034\">\236\350 =\355\366x\275\301\027\010>\354j*\275PRH>\363\216\321=\022\306&=\266\227\204=\307\2745\275%\350\202=\302\366/\275\355-6<L\025\303\275]k\233\275\214\257\265=\256\312{\275\246\2060\275\256\010)>x\210\035>R\306_\275\225\022\250\275\253)\260\274\311+w=\n\321\034>9!\211=\337\376\214=d\236x\275e;R\275\324\022\321=\251\020\234\275$3\343\275\244\265\274\275\nm\221\275\363\251;\275\220p\233\275\361\232\013=\031\301X=dU\035\274\373\246\245=]\364U\275\200u\230\275]u\324=|\027\337<\365M\225=\034\366\022\274\311\024\220\274\272\361\353\275\210V\232\275;\253\212<\344Z\232\275`I(=8$\211=\004+O\273Q\225\302\2738\301\246\275i\300\315<p\370\026:\267\217\305\274A\367\270\275\033M\014<\334\327\316;\352~\233\274\367\037\014\276\315?\006>ng\322=\267\030)\276\034\377\225=\214*\334=\374~\365=\200c\326\275\253.\332=t\246M\275\006\324\265\274\363\024\350\275\366L!>/v\005\276)q&>\034A\326<\260\356\026>\"\3453<\023Z->4\372\376\275g\213\343=\310\302\271\275.\307\262<%\210\246=\277\255u\275\304\025\244\275\375\277\317\275\033\276\033=c\037\345\274\001\325\t\275]z\301=\300\354\225=h\332\335\272\310?\322=(X\t\276\027\353\324\274\351M\203\275\250\034[=\275\277\220\275\321\337\334<.\376\254\274\264\217\247=<j;=\020\330\235\275\315\262\263;\2535\003\275D\346q=a{\350\275:\256\005\276a\261\206\275\300f\216\275}\217\320\275\243+\273\273m\225\336=\006\300\215\275\345\t\034\276\321&A\276p\\\014>+\006\321=\257\351\017>\274\201\211\274\302O =1\211q\275~\337\311\275\017\214h=#\"\302<\211\230C\276`9\363=\033=\031>\t+\240<n\003\360\275\316\2002<X\245\317<\257\221c\2752\275\333\274_4\250\274<\263\231\274te\001\275\031cY\275\243\200\006\276\250cU=\271s\237\274M`@\274\213\305\253<\210\321W=(r\305=\306C\"=>\006w=\340\357b\274`Br\2744\314E=^n\347=L\203\216<\r\270\274\274pV\262\275\321{g=d\247\307=H\016;=\016\205U<\025\206\300<\244\364\311=\232\235~=\221\210\316<\003\371\020:f\317\274\275g\236\016\2754\177\337<\":\000\276[\364\227=\255\333h\275c\247<;\211\261\276=[\020\313=E\233L=\237%\30394\363\254\275\004i\232=\351}z=\r\373\\\274\275\204\330=\334E\314\275\267\304E=\315\016\251\273\273=\t\272\370\007b\275\217\211\001>\212\216\324=\305&\322=k\200\371\274=\033\363\275\261w\001>\274p2=\002\272\013\275ro\212\274ON\003:@\"\002>V(3>3\352\036\276\003k|\276vY\004>\247\327\323=\362\204\270\273\302\326\373\273\021\346\266=\034E\021\275\356\277\006\276\366[-\276\365 *<\201\261\003\276\245S\307=^#\305\275a\236B>/\341>=\255\302}\275t\003w\275\256\361\"\276)Y>\276g$\223=\374D\235<\277l\244\274\237M\351=\256\367\002=\341-\'\2767/\233=\r\241\225=\323\232\312=\254\342\000>\224\267\257=\037\324\313\275Y\211\247\274\005\313\343\274`\244(\276\306+\245\275\375!x=xB\210\275M\0307\275TE\246=l\026\360\275\306\244\004>\240\254.\275n\342\3778,\202#=\330\246\003>8\005\246;N\271\340<h\343\t\276zJy=\200\257\014;\231\207\233\275\031\357\031>\346r)\276\221\033\233\275\333D\324=\010/\247\275\001\n\331\275\215\203\t\274\370\342\361=5\252\024>:\014\'=1\334\306\275p~\035\276\313\266\322\275\"\205\354\275\325\032\352\275\177\256\225\275\374\006\264\275\354\220\345<$M\005=\253M\251\275N\367o\273\234\206\273=\235=\377=Q\032\315<M\254l\275\020\266\213<S{\035>\002\r\323<\204\320\350\275\3502\215=\235\361\372=\205\211\010=\007\225\335=Nk\024=J\026\257\275\252k\224\275\350\265\206\275~\n\243=k\370\226\2741\030\206\275\022\002T=x\366\227\275\3501\211=\371I\355\273\000\177)=\203\207]\273\254[\311\273q\360\n<\202\\\214\275\333\247\254\272;f\274<P\205\014\275\357\351\272\275\020r\225=\266{\361\2744\252\340:\246\323X<\3562S=u\370\311;\340\344\205\275\374\342-=3G+<\371\266\336<S\342\262=\246\263\213=\2726\250<9\007\367\275\3440Q\275\256ON\275\345\201\212=_T$\274E\242\302\275\277\307 =`\323!\276\251\'Q\275\265\237\000>\236\346\202\275\212\355=\275\3720i=\310\004\020\276w\325\241\275D\346\323=\227}\230=@X!\275\320\327\213\275\3078\032\276\302\265\'>M\274\034>l\275\">Pb\340<;\006E>v\317\260\275\322\036\302=\037\272\n\275\372E\310\275\312\353\206\272\275_m=\341K\267=\260\364g=\317\207\031\275\334\250|=l\327+\272Z\237%\275t\360\234\275\334\n\205\274J{\244\275\370\n\257<L|\211;t\000\026>8\037\323=\200X\010=\023\206\260:\r`\031\275\224\215\324=\324\374#\274/E\303\275\n\345\264\275\034@|=\237\355\235\275\244\323P\275c)|=\326\036d=\030\030j=\254)\321=\211R#=\006\030\262\275\375\234\t\275\231x\361\275B$\244=\275\331\036=.\024\332\2736\023\211=\r\026\"=\270\270\262=l\274l\273\270\034\337=\234\016\247;\303\332\301\275\025\303\016>^+\316\273:\370\013>\030A\027=w\177\274=W\004O=\260\205\233\275\306\232i=\033\274\'\275l\314\235\275\004C|\275\\]\270<\242x\305\275\221I\305=\017\212\276\275\266\305\027=\234\203\317=\014\216\037\275\245a\255=\001-\351\275\307\251L;CHs\2753\004\202=\373\320\260<es\274\275\010\266\213=O\225\350\275pi\272\275#P\017\275\303\235\243=\225\257S=\\\'\271=\035\255\203<\314$\032\275\320\327\002=\027+\330\273_\326\201<\255\241\337<\352\240\021=n\326\200\275\372\030\033\276\224\260\333=\363\010\013\2748\025[;\261\200\031\275r@\212\275e\352\236\274\301c\247\274\332\342\245\274`\215\227\275C\321]<\210\225Z\275\357\227\003=\027,\241=\275\305\214=\225\276\025\273\035[\";\255{\303=\200A\337=\200\343U=V]a\275\306\235o<5\210\331\274\353c\377=\352\247:\276-\306\001>O\246\207=\320\251\365\275\227\374]=S\007\006\276}k\034\275P\246\271\273m&\023>_\223=\275\232^\354\275\357\232\000>.\263\231=m60>\316\\\003>t\204\342=v\357\000\275}P\264=+\0165\274\010\375\244=\307T%\275\033\314/=\363%\200\275\016\331\224=3\302a=,\352\213\274D\"\225<\332;\364=\020\302\204\275j\363\221=\303\311\"\276\3622D\274\033&\004\275\271\024\203;\265\267\232\272\373\024\232\275\216]\t;&\021)\275\370\024\225<r\242\334\275Io\250\275`\376\021\276\t\215\014\274\246\263i\275HT\021\275\357\235&<z\230\366\275\351\231&\275\337F\202\275\351\030\227\274HX\r\276K_\314\275\220G\030=\023\003O\275\231\315\255\275\020H\010\276\272:\233\275\337W\335\275\233\354\257<\351(\201=1}]\275)\236\000\276\313\225\024\275=\0028=\332.W=\253\347.=\274$\261;aP\237\274\334X\023\275\"h\021\274r_\224\275\321k\225<8V\t\276^\223\232\275\246\246s\275\217e\205\2759~y=\214\244\241;\003_\024>\341\021\026\273\017\316\013=\315A\022\276\024U\200\275\357\232\021\274\320\344\315<\221\005\257\275\327q\252\275\026\367\276=~\210\301=6K\252=\266\177\353\274\027\224\254\274\030%\322\274B`\013\276\2343\270\275\314\362B\275D< =\275\206n\275\316\316\035=\317M\321<i\304\035\275\033G\366\275f\342u\274\013\354\353\275\026)\372\275\273R\240\274\240\312\347=\307\241\n\274%\376\236=RkA=%\273\265=\207b\021=\rq\365\274\306\023\222\275|\356\027\274h\245\253\275?\256\364<\240\377\260\275\361\203\377=T\277\327\273\006j\343=\020\2468>~\\~\275\344N<\272\273\321v\274m\352\001<\275\215\272=\270\005\207=Dy\n=f\226\004\276\341\233\020\276\243U\330\275\313\230Y\275Qt|=\265\242\216=\2647\367=\002P!>\004\r\r\275\374k\022\275o]\277\275\356\344\242\274c\023\r\274\226H\027\276b\033\217<\334\3765\275\221qJ\276=_m=,X\366\275\216\223]=\0367\320<\221\245\323<E6\353\275\343h\220=qE\223=\n^P=\r\235\010\275\277U\244=b\354\373\275+[\000\275\300\274\024\276[Y\207\276\003\013\247\2742\035,=&\236\262<-%\206=d\237!\276\357\217\257=\t\336\306\275`\205\234<\n\376\006\276o<l\272\3568r=k\337c\275\207G\360\274\231\\\316\274\006\304\267=,\230\230=\312\237\006=M}\307\275e_\002\276\361|\226=\353_\"\275\210x\350<\322!\017=;3\305=\017\261h<\027C\315=6\3666=\272!D=\232\246\006=\320\353\211<\225d=\2742\267\262\275\311\365\241\275\303\254%<\226W\033\276\2207\000\275\316\273\036=\203:\004>\216\255a<\253p\317\275\240%\215=\362\014\276\275M\273\312<\335\257e\275\006\315\327\275+\244\034\275\026\001#\274\036\213\350=*:\204\275\006*\037=\232\261\022\276z\2176\275Q;\244<\364UP=)\317\010\275fPy<\030\373#\275\343P\204<\336W\241\275\003\256\233;\3079G\275\014G~;\367\007\244\274\346X\206=#wT\275\375\"\001;\265\226,\275v\340\262=\323\354i\275\005\035\253=\264\320]=v \016\275\206\254D\275\031S\203\274\375\213\201;\351\032\347\274\364O\033\275\3618.\275pH\302<\226a\347:X\230\"=\224}\036\275\303^\246=f\273.=3&\351\275\332\303\003\275\275\2608\275\207\202\232<}\306h\275\035\352\354=\242\0179>M\277\271\274#\330p\275\355\313\230=\022\340B\276\034P\237\274\307]m\275{\317\242\275+\335\000\276=i >\240\334==\020H\347=\272\302\004>\234!7\276\303\201\013>\262\006\232=!\321\001>nc\001\275\235\265\357=\264B\033\276\234S\252=\007\267\234=*\243\025>\2260\256\275<cY\275\213\025e\275\3231\254\275S\2237<-\300\354\274[\277\270\275\211\022\013\275\214\022 =p\250\232\274\347\215c\274\321\023!\2764V\220\2758}\240=7\301\253\275\213?|\275\003\345Z\275\266cp\275Y\204\242=!\374j\2755u/=\374@\217\275\004\235\202\275\371\365\004\274\023\267\261=v\217\317<\241\222\366\275\334\244\316\273\030IZ;\000h\231;\360\306\214<\331\220\264\275\264Q\240\275\333\206\373:z\344\205\274\212\305\341\275\2552\223\273\336\346C=6\357\217\275\017\0376=\352\315\236<H\234\334=)\346\206=\255n\225\274\315x\226\275\0352\202\275!\261G\276\177\351\251\275\271\240\207\273\22415\273\273\242\021\275\336\023`\275\204\341\206=S\023\005\276=\033\364\275\236q\014>\006om\273\005\204!=3_,\273\370\242\030\276Z\2523<\035\250\001\275Bk/\275\311=>=g\305\353\275>C*\274\377u)=+\226G\275:#\037\275V|\246=x\n\226=\305\316\317\275.\2025\272P\225\375=\000\2076=8*/<L\032\027\275\324\036a<\223\020b<\374D\241\275K\3631<\362]D=\352D\257\275O\266?\2740{u\275\204\252\253=\361&\262<\377\300\354\275h}\336=\016r\023=\313}/\274\244\373\330\274c\377&=\225\311B:\211<\246=\260\002c=$\347m=/\325\322\275/\331\216\274t\002@>\000\274\307=\320\n1=\254k\">\t?n\274T7>\276\227\315\232=\2052\212\275y\270\227\275[?\032\276\211\304\007\276\321W\207=AK\030>\201J3\276\353E\300\275\355o\357=\311\235\037\276\260\356\347=\365\364\017\276\236<\332\275\207\210\013\275\235\334\325\275_\001\277<\306\301\372\275\315\317\312\274\222\324\344<\213\tx\2750\200\341=\261~\232\274\r\2443\276M0\260=\315\307\030=F\223\022=\247\220.\274A\035\274\275%\007\000>\377\227\265=\"\022\216=B\246\365\272f\316\377\274\237\024N\276\013\371\347<y=\270\275GZC\276\257\330\013<\253\345\021\276I=\207\273G\202\020\276\2339\024\2760z?=F+\302=p\211\366\275\024K\036==zD\274\'\310\307<\260Bv;ok.=\244\360\253=~\270X\275g\262\366\274M\363\241\274\252D\237=v\302\027\275\351\326U=\264{\354\275\260)\300=\214b$=|\246\301\275\201\265x=\275+\210\275\361\372\004\276\355M\210=\304\007\205\272\363\214s\275J\353\250\275\032\001\003\276[PF\275{\030\370\275\031Y\301\275\227\322\253\275\271\255\371\275Y\2406\275\214\310\253\274]\332\351<\234^\001\276\272\370\312=br\232=\374\342\241<\367\324F\276\232y\277=Y\272\204=yw\212\2727\321M\276\374<\346\275\252\274s\273K\266\272\275\030y\274\274\324\252~=@\221\337<\264\227\256=\355u\177<\202\321\274</\005\260\275\334\342\250;\211*\355\2741<\231<\2754m=\001|7=\334<\r=\305B\237<\331?\244;~\036\361\274]\344 \274C\t\035\274g\270\234<\333R\201=v\203\222=\240q\002:1\275\355;\310\226s\275r\334\266;K)\321<\031\376&=\017\246N=H\016\232\275~x1=W\252\331\273\037<w\274&B\206\275\233\252\271=\364\002g\275I\336\274=\204q\314=\241\364\333=\003\212\222\274\300\\\237\273j\355\013>\220\344\007\276\235u\222=\035\2477>3%t\275A\2148=\331\333Z\276r\223\212=\250$\031>\0339\013>\344\001\017\276\336\016\022\275*\236\303\275\2520d<=p*\276l\035W=E\236\341\275\206)\214:\202r\360=\361D\036\274D?k\275\224vB\276D\014\205=3\202\036\275\377\037b<\240j\220\275/\256\020\276o\333i=\230\032\325\274\003\363\201\274h_c\274\324K\302<OU\027\275F\267s<\366\270-=\344\226\355\275cT\253;L\243\233<\025$\326\274\204\267\216\275B\340\205\275\223\237\340=\301\263\253=\360\371\234=Z\336\205<(\317q<A\333\262< \031\375\274\221\230\"\274\252\363\271\274r\337\356<!\210&=d\355\017=\016\356\252\275\363z\247\275@\326\221\274\355\347\351\275\372@\336<\332;h\275&\033\026\274\271,\032\275\235\321\306=x\310\324\275\227 \317<\225]\022\275&\242\304\274\253\037\037<a\326\266<\026\330\304<H\256\343\274\343\n(\275\223:\262\275\227r\345\2735X\313=\244\202Q9\010>\354=8\231\273\274\274G\205;k\216(=*\320k\275L\256;\275w\000\370\272\351\354\340=\307\260\203=\021\033\233\275\020\256X\274i\177\"=\320\323\010\274\031V\010=?\352\220\275e\302\354\275x\255\214=;\271\022=\030M\357=\323\247\007=+\274\214;\220\276t\275\237}\010>op\343<\364\264\341=;\002\313=d*{<\3433\377<\201u\270=\273\323\271\275\254E\221=\013-\215=\n/F=\357\350\301\275w\301\034\275E\376_;\334\215\264\275\250}Q=\263\356\227\275\260\361e=\217d\267=\201\032\273<\2203-\275\002\005\351\275\372&\214\275\345i8\272,U\257\275B\330\373;m\274(>\315O=>\026\355\025>y\227\014\275\214\216\223<\253J\026>7\362\374=\345\r\345=\237e\010>A\272\220=9\276\356\274\373\024q<)\351\221\275Id\263\275b\2410>\013\345\312=\266/\032\275\327\340\251<\213\372\342\275()\211\274\n\271\006\276\361\016\203\275\020\2026>f \356=\026U\325=\2041\036\276\244\366\032\276\273\312\036\276Vg\222=\366\261\243\275\367\255\031>\332\324\222\275\235UZ\275}h\244<,\261->\021\336,>L\232\231=\021\341I\276W\372;>.R\312\273\224\215\"\276\036,\242=\322\004\t\276\357T\332;\234\314\024\276\231\\O\272\201\214!>\001\331u=6\274\265\275\201\255\361<-\250\303=\255;\247<\354\324\215\275\256\314\301=Z\224\372=%\014\3249\314~D>T\266_\275\007\236E=iW@\276\335\217\006=\037L\200\273\267\017\202\275\210\005{=\031\224\033>\376\305\005\275\316\366\317<\372\255L=\2713,=\357\331\026=\004Y\"\275\377\023m=\367\314\245\275\247\274]\274\025H\372\274\222\347\273=\314r\336=\351\220\276\275y\224p=8\376\221=aQ\321\275\343\211\301\275\201\023\322=b\271v=\316\206U\274k\373.>\313G\254\274\352k\344\273i\221)>D\347#\274\241p\320\275v/H\276\2102\203=\2631\333\274S\2539=\333\001J=ha\230\275B\364h<\246\037\023=\206\353\322=\256\312%9\235\004\363\2743\337\303\275\347\242\230\275\200;\352\274\325\337\221\274\377\224\227\275M\260\';\221\377\020\275\343i(\275\217%\333\275;\311d\275E\245\310=f\241\321=\026\231\177<\353E\326\273\017\264\201=\034\220\265\274g\304I=_\346\364<\343}\t\276\372\364\322=\204\364\002\276\212p\341\274\207\335\316;7\320\022\276\n\004\341\275]\200P\276\247\035;\276\217\370\302\275X\214\304=\202\177\212=\247\034Q\273\213\241a<\"9\233\275\362\2263<\324>\002>e\206\021\275k/\253\275q7\213=$\344\033>\205\253}=F\331\010\274\230\375\345\274)\375\362=\235\212\342\275u\266\363=9\022\023\273\230\260q=G\306\323;\213\262\227\275a\235$\276\372\002.\274\225\310\262\2755i\357=\240\032\340<A\3465=\241\207I\275\374]z\275\2769\266=\322\342\213\275*\363*=q6\254\275\227\205\223=\260\344Y\275v\341\317=\274\324\202\275eK\034\276\245GB=\316v\235=\241H\230\275a\316\215\275\332R\030<@q2\275\"\037\310\272\341A\r\275iBZ\275\207\320\226<\212\016`=~@\307\272o$y<\342\'\024\276\353\255\214\274\207\342`<\356a\237\275\021(@=\345\260\350=\010\261\274\275\247\213\003>X\251<\275\333\340\252=NC\261=P(\316=\350\243\302\275\324\216\277\274\"\036\342\275\213o\202\275\240h\234\274\257h\243\274\364\352\273=\273m\260\275\267\355\360=\254\231\276=\202\231\314<\253\224\224=\231e\013\274#\265\372\274\354\377\002\276q\214\003\275}\261$;g\276\247\275\266\372\230\273T*\327;]x\376\275\215y(=\023j7\275\271\002\007\276\361\024\254\275\333\016\320=I!\324=Y<\177=5\245d\275;V\230=L\337\305\273\350\316\271=\201\033\273=\345\3177<>\033\242<\205\273\373\274\357\262\200\275c(\230\275\035\031\322\275\247a\254;`\270\000\275]\2556=b\356_\274it\330=\357\274!\275\247\320\201\275\252\343\217\275\371x\203\275\252|~==\214\022=`\354\351:1\024\234\275\365\345\000<\2509\252=\224\215\000=\177\200\021= nl\275G\267\363\275\2630\260=\3741)<zY@=-%\032>\352\200\027>\271\250\372=\3527!\275H\305\333=nQ\366=/\234\217\274%`r\274z\001\323\271\226x;\276xN\332=L{\311<\256\242\200\275\t5\205\275\016\000`=\346\362\214=!\340\034\275C\216\212\275\265B\221\275N\'\376<\326\206\214\275Qv\201\275J\262\202=\034\250\030\276\237\313\316=}\311\243\2750]\366<\240\243D\275\353\366>\276\017\225\231\272\010#\270=\230\346\355\275\272]\263\275#EB\275\203\360G=\232\374\257\275_\n\346\275&\203\335=\255\014\274\274/\206h=C$\025\274\341E\005\276\210L\205=e(I\275\305TR=\271X\215\2755I<=9\321\r<\263\263f=\326\352\003\2756l\204\275mI\311\274\313E\321\273\300g\021=c\0320\275a\275\224=\321\007i\275\'\274I=[\325\315\273\221\363P\276g\016N=\303\025\317\274@h\262\273\033\027\022\276\304\023\270=\234\214\257\275*[\241\275g\217\316=-\350\r=\003i)\276\315/P=\304\301W;B\274\232\275>\210\225\275>\2465\276?\262\377\274J1}=Da\273\275-\214v\275{?\222\275;W\233=\273\274`\275d\346\276<\216L\360<\231lg=o\340\267<[\027\013\275\025\037\304\275\350\024\310\274\250F\345\274\243\034\036<v\345\275\275\035\275\245\275\226\204\370<P\000_7e\313\354\273L\037\202=\013:\323\273@\210.=\251\000D\275\324\021\001=\246|\264=\364\354\220;\005\213\030\274\006\340\247\272N\251b\274gRb\275\246\303r=\335\006\253\274X\037\221\273\314\206b=\335\303\375;\010\330\277\273\2551\354=<\325\235=]\257\212=\021\3638\275$\315\004\274`\356\221=\241\n6<\241\326\256\275I\033&=\303\357\210\274\354\345\202<0\013\276\273\236\222\214\275\000\343O\275:]\017\275\271?\236\275\210\202v\274J\022\\<\017c\334\275\244\222#>B\225\333=\367\360\200\275\321|\242=\325Q\327<\366K\340=Q\247\010>Ec\202\274f\364\017>\213\022\260=C\333\177=)\033\247\275\252\014\206=\363\236i\273+\241\t>HZ\330<\201\023\243=\323,\346\274\024\206\254=\354\227\254=\021\206_=\207E%\275[[\315\275Le\360=6\246\347=\323-\255\274\243u\316=s\366\360\273o5\036\274\220\275\211=\272\343\261<\233Y\316\275\0241\346\275\241\211\254=\221\256,\275\316\356\247\274\241}\233\275~\250\231\275(p\345;#\010\013\27501\223\275\314\315\240\275\307\371\200\275a\330N\274.\300\336<d\357H=\347\313\233\275G\352\300=\262\306\254\274x\331\'<(\262\234\275$\227\017=rD\023=\270\304O\275\'8\235\275\177\237\220=\301\367\246\275k|S\275\010^\254\274\364`\317\274\375\222r\2752f\205=\"\r\300\274\325d\335<`\212\017>^9\274\274\235)\221=`I\336<\226\034\235;^\254\222\273\3453\017\276\335x\330\273\315\255\376\275\303;k\275\306\207\207=\341u\014<\244\267\231;\376\177\277=4*\235\274\242w\235=G3\250<\345\307\251\275:\250\362\275\265\354\371\275\2226.=\177\\\247<\266\313D\275\260Cr=\246V\333= +\217=\031q\223\275m\277\341\275\326X\205<,\334(=\232?\367=\276:\221=\"|f\274\326}\004>\256\254\370\274\3353\252\274s\350\230=>\345\005<\235\261\227\274N\306B\274\376\257\347<b\303`<\371L\037=l\260\372\274f\340y<%C\002>\227\364-\275\357\001\007>\332\256y<\346`\030=\310\304\303\275\\\246{=\n&4\274\202\357z=\210u\337=QM#=x\340\\\275Oaw\2754e\370\274\264\363*>\263\335\000\275\212z\300\275\223\372\257=J\230\350=\357\027\025\2767\2250=D\262\r\276\371\013;>&\254T>\253\250\010\276u{B\2756o~\275\204 F>\037M<=3]\373=\334\242:>p_\227<\201\004/<d\356t>&+7\276\004\244\021>\304\222\255<\333o%\275\372\264%=\352\013:\274\300\207\332\275\353u\272=\377\214\341\275$\373\027=\247\332\357\275\256\2527>\006\002\n\276\230\222\202\275\rn\265\275\232\267/=\r:\r=\337\3648>\213k\336\275%0\350<X\364Y\275K:.>C\030\205<\014\341\350\274\241\312b\275Na\301\275\313\254\265;\274\216\342=\323\365\240\275%\202\241=\232.2=\332iV\275R\252\244<\365\224s=$\206\274;\365\3576=\2118-\275d\270\245\274\365\210\236=\267\031\212\274\321\212Q\275\037\317\374=-tZ\275\265\302\356\274#\352O\276\"\223\t\273\302n5>\304\373\300<]d(<\357\2374>\001\262\274=\326\265\215\275V\316#\275\277\246o\275\361\266\265=\374\033\307\273\210\321\t\274\2613\341\275\266\337\327=\020\211\001>\352k\027\275U\244\217=\031Y\001\276\036\313\336=\030\355\235\274\023\353/=\031h\320=\322\347\304\275\271\034\354<\020\024\034>5\364\031>4B%\273\031Y\217<l\003B>s\360:\2762\370\236=#\222\206<\033T\n=r\316\211=\245[\344\275\032m\307\275\354T\317=|\032\020=\017\240{<\375\241#\275A]\"\275\274H\237\274\t\313\007\275\357\204\270=8x\241\274\233&\005=\304Z\002>\'\271\273=\231\031\250\275\372\370\177\275y^\316\275\203\307\"=\314\255\252=XQe=\257\230\320<[\033\356=\333+=>\016<d=\n\367\317=z\326\024\275Ir\220\275o\003\350=6\220\356=CI\322=\2107\204=\37207\272\022\253B\274YA\336<w\351\203\275\031\341\234\275\267~;=\tR\362=\210_\013>B6\364\274o`\255\275\254\372\033=w\346\364=\374|!\274\223\243\305<[\206\375\273L\270\343=\261\204\006<\264nd\275\315\000\323\275\257\027\r>\t\323\036\274\'\373\312\274\201:\210\275\300\255\237=\007\225\022\276\277\336\030\276\244g\323=\204c\037\276\256w\237\275\316>\323\275\010\024\373\274\321\255\342=9~O>\210\207\366=u\357\303=\360\360\230\272\252\237\003\276\202\026\244\274\343Fi\275\177\370\254\274\020\177\036\274\327(~=!r\363=\266\226?=\216\032\025>\211\230\242\2754-%=\031\331\260\275\223\000\363=&\361\000<\033\336\022\276\267\010\252=^JB=\252\200\323\275\243\257p>\t\270\315=\250\002\223\274\362\324\375\274\217\347\276\275DU>>\"\331\333=q\022\307=\301\222G>\330P\212=/Z ;\032{\215\275\240\027\250\275\245\315\210\275#\201 <\332\271c=\377\315\205=\r\330\323=:\034\237=\334\203>>Rt\334\275\334\317b<a\313\200=\000\255\016>\222\374\313=\335\270\316=\025\256\360=\316\031\324=\220\202\365\2753\305\353\275\352\002J\273\3756\n>\224\340$>lJ\034> G\004\275\300iU=>\340$>\252\304T>\235\002\237=\370\032\201=#>\207<OA\247=\305\346\224;Mb)\2745\3124\276\327\356\363\275\347\373\r\276)\347\305<\222\211 <m\264Y\275\374\347\321\275\\k[\276y\222\327<x\277\313=\230\0022=r*\215\275\000\215\322=\310m\003\276*\374\336\274\177\'\374\275\311Z\037\275\274cu=\242\244\203\275~?\376\274\342-\211\275\342\252\227=\253N\311\275@a\036\276\272\351\317\270\224>\204=k8\225\272\026\316T<Z\361&\2768\006\036>_%$=\022\202\245\274\026\217\276\275\2418\025>K\241B=\231PN>\352\261>\276\272\341\340=?\231+>nH}=e\232\257:\320i\341=\371\337v\275\\w\273=\024#\354=\232B\001\276adF>\016\227\021>k\026g=}\216\223\274\351y\325=\377\321\333=\367!J>\000\262 \276\253\340F\276M5\317<\2423\374\275\n\317\364\275\377\200\205\274\027^\271\274#\216\375=F\202\027=\353\305\267=\275\014\366=\366j4\276\317\212\277\273\004~\366\275N\241\177=\371\214\013=@\365\r\2764V\005>>\3009\274\2651\253=o\306E=\222\241\361\274\260\016\227\274Mw\276<\304+\030\275z7h\274is\266\275+\037\207<\032\014\017>O0\313\2755\261\316\272\242$e\273\233R.>U\366\314\275\314\202\\\276bv\r>\000\235O>\267<\030>\231\371\036<\3273 \275T\367#=jj3>\'\030\350=\272\213/\276)\256V\275\375\347\357\275c\204\036=\307-\243\274\234K\252<t\340-\274g*/<ss\023\275|\343\301=jC2\275\272T$\275\241\221\245=\022N\005\276C\253\t\276D!\265=m\257\260\275\305^E\275[\274!\275\031X\204\275\357\000\261\275\032-\227=O\350\370<E\353\000\276v\022\177>=+\243<I5[\274i\351\255=o\036\212\274!\207U=\240\246M\275\356\303\r\275\207\244\271\275\031\260#>\362\254\361\274\211\033\311=\022\242\246\274\346\211\307=j\341\213\274\203\234\035<\314+v=Q\021<\274\372\312\246\274\313=\037=\344\317b\275\217\357\034>\013\227\027>\234}\261=Jr\377=\230\320W\275\037m\260=7n\n=\3651{=\306\036\355\274y#\032>\302`\274=\340\336\267=\336m\271\275\373\335\233<\2021*\275O\2349:u?\035\274\225qT=c\271\220\275\303\320D>8\322\332=F\240E\275\307\212\001>e\\\027> ly\275\260\301\014\276Q]\302:\220\261\372=v\231\304\275@\322\330\275\352r=>4?\254\275~U\350\274OtC\276\346\264\032>\344\236\033\276W\247\243=e\032\003\276o\274\340<\\\311\013\276\321<\212\275\341\324\243=\036(\001=\261\324\334=mY\305\274\3120w=#P\260=k\2650\276\252\356Y>\023\016I\276\016\222\245=b\253\305\275\224\226\321=\277\224\341\275\t\362\t>\220\261\302=\235\031\026>\236\334]=v\224@\275E\rs\275b\261\250\273\256\034\272\275\314\277.\276Z\206\003\276*\345\371=\0221\275=\211\003\241=8uM>\210\320f=\032\242\256=\353\327\r\276bo\006\276:\277B\275\"\017\035>\273\365[>\224\006I\276\222J\302=\323\225\346\275P\377;8\332\332<\276\254( >5\263\001\276\334\3315\273\246k\327<h\017F>\371\"\034=\241\244Z\275IH\247;\352\032/>\005\355\221=F\177\003\275\tP\004\276\215\321 >\333.\220<\264\301\006\276gT\340\275\271\024\236=G\002#\275h\361 \2736I\207<~\271\004>1Y\274=\203\335\001\276\251\363\022\275\212o\232\275\253\256w=@\177\243=\210f\016<\260h\352=p\\\006\276\271\021\230=!\206S<\261h\321\275\"|t\275\343+0\275}\005\262<I\342\221\275\002h\273=H3-=\254Sl=x \356\273\202\033\246\275a\\S=\317\362&\275\3763\217\275\343\200\027\274\034Q\206\2736Ny\275\371\246\255=\276\240\247\273`\275\210=a\026\350\275\326|n<\r\224\031=\241\202\236\275\225\225\026\275C\255\335<i\302\335\274\316WF\275\302\006#\275\222\014\345\275\202\233\211\275g\010\203\274\034i6\275%I^\275\337H!\276\205\360\032=\317\371\032\275\230| \274\003\241g=\326\272\265=I\001\r>Ae\376\274T\212\250=)?\252\274\323\253\340\275\006\035\3539\3103W\275\305=\247<h;\267=\302\021\223\2759\227\r\2766\247\017>I\001\244\275\374t9\274F\017t=\024R\030>^\226\324\275jy\303=KzN=\035\325\357=\242R\r>\361\337\031>#*l<,\033\212\275IW\331\275}\213\205\275\037\226\224\275r\333\025>\353\000\216=\001\241\276=u\324\177\275\245PR\275&\3038\276\002\270\210\275\t2\020\276\215u \276\241&v\275\016\315\342\275\2546\213\275\0019\"\276\213\310/\276\225\013\320\274{\357\022=\026w\216=\003\t\014>\201\272\322\274\371\307\023\275\267|f\275\3239\263<\022\253\276\275\205\035\200=D\205,\275\222x\226=\207\362\\\274A\025\236\274\005\371\017=\335\273\247\275\2754\373=\305\360\204=lqX<\215\376\343\275H\360v\274r\207\200=b\na;\276gF<\0228\335=#\234\020\275$@\347\271\254\210\227=\267p\007\275\332\263\201=\355\375\272\275\010\216\340\275\225\203\266\275\\T\341=\333\377@\275\024\3135\275\327\025\215=\005\245\225=\213\372\363\275J4H=\326\r\222\275\371+\335\275n\252Y<:\220\376\275\331\320x;<\364\301<\347\345\222\275\004o\256<\320Q\325\2757\224\000>\322\253\354=\264\323.\275\267\305\260=\322\r\022\275>\000\t\274{f\246\275\030\217n=r\303~\275\351\221X\275P\350[\275\366\343,\275OgO\274\304CG=CN\252;\323\200$\275\000j\225\275\352\230\003\272\236\220\333=0\310t\275{\237\346;\313\004A\275\n8\246=\013\345\024\273\000\327\r=,\235n\275eS\033>\003\311\277=\0221 =Q0\241=\252\203\025\276\024\371-\276\227\222Z=J\353\014\276\202\270+\276nj2>Z\213\205\275\030\205\033\275\r\250B\275\210\302\361=a\323A>\262\346\260\275\005\242 \276\204q8>\256\206D>\272$\017\276\275\3353\276\241\237\364\275\321S]=v\006\343=\262\332\322=\215\032\001\274\233\2617\276\225\232\r\276\240h\237\275\205j\026\274xw\257\275\002\233\361\275X\261\204<\224\033\360=\206~\r\276\2349\003\276Z\t\300=E\247\220\275\212a+>I\251\263=\355\320\002\272\315\272\241\275j\001\201\273\356\177\336<v\352\247\275\2050\274=CV\204\275\366[\r>\234+\333=\303<f=\033X\336=\200*\t\274P\245h\275\010\002\034\275\024\200f\274@F1\275N\014\375=Rm\266\274\374p\364\274Lt]=\275\200Y>\213\370\317<\237\254A=\222+\213\274\177\033\030;h\324\340=?N\306\274\r\241\252=Y\'n\275\363\314\r>\370\275\035>\022\r\225=Q\245\240\274-\276C=$,c\275\033\270\220=E\2751\275h\220 \275\276\267\262=u\344\356\274\233\361M=syZ=\373\361\'\275E\253\327\275\343\022\263\273Z\272\365\274P}\267<T\205\304\273\302\252\220\275\263)\007\276\034\016\233\273\353\203\353\272\251\340Z=\013^\310=\360\357F\274\032,\263\274n\350\236<\376>\327<\255(\305=Lp\250:CQ\304\274\272\372\000>\200P&<\001\355\002\276\3760&\276<\r\263<D\302\241\272*B\224\275R\343\242=Jt\307\275G,\034\275\261D\325;\243\224s\2752.\334<\370M\325\273k\026\300\2758\023\\\275\221\214\003\276%\344\310\275\n\333\256\275Vy\256\274\035\266\023=i\267\207\275z\014\224<lT\002>\251\264\244\275O\025\000\276\270\354\036\276F\r\242\275\253$\273\275\202n\312\275T\025\371<\327\244\t\276\243\350\267\275\"\220\210=\326E\327=ee\342\274\242\335E=^\205\232<t\242D\275\277A\372<Lx\214=fB\261\274a\367\341\275\254\340\365\274\344\247\010>!(9=\242\330\001\276:\314\245=\313r\035=\227m\006\276\315\003\315\275\323\331\345\274\360s\223=3\377\250\275\250\002?\276F9}\274\330\177\007=\230\254\205=\333\031H=\247\035\315\275EP\352=\257\3319\275\276\342\211=st\227\274\007U\001\274\261\314\\\275\234\001\356\275\033P\014\276\303\000\336\274\031p?=\353\300\235\275\257\371\233\273\251o\277<\311-\324=f\376<>\001c\216\275\363\362\335=\327\205r=X\255b=;or\274\010\265\223=\022\252/=\310iX=w\3775<\030\300\311=\360\332\006=\'\310\264=\3541\264=\221\021\345<\036j\023\276\240\0064\276\346S\330=\271\321\007\275O\273\240=\375G\215\274\312\267\n>/\365\214=\301\211d>\024(1\276\2038\364\275\r\002\211=*\366P\275ID\357\275\334u\204=\337a\001=\016\004\227\275}\310\347<}\354Y\274aRV=\263\356b=u]\005=\026\367\006>\3663\2779*\0323\275\365\336&\275\'\247F=x\233\310\275\255\t\205\275?\036!\275\205-\311\275\216\343\335\273\243\001\213\274\350&\300\275t\375U>\207\250\364\274*\376\n>&\256\237<\273\227\032\276\306\r\253=`\177\037\275\314\307\235<<[k\275\013\013\333\274\277\275\344\275<\266.\272\3642\325\274=\325\020\275\001D\201\275\334\203<= \225\330\274Cy,=\241/\213<\037,\211\275\250\333p\275\365\220r\274\r<\321\274\377\300\031\275\352\202\245\274)\034a\275`\3448\273_\002\020=t\253V\275z\235]=X\345\334=\333\342\224=C\021\010\274\370\355\214<\262GR\275al\270<\207\320d:$\314\207=\017R1>\037\342]=\200Y\305\275ga\237==\274w>\230\320!\276\242T\244=4D\227=W\202\321\275r\204/>#\213\305=\262y\307\2724d\300\274P\377\020>`d\030\2766w\216=N\342U=\025\246\007<\305\234y\275\025\2079\2735\330\224\275\217\013%\275\031n\025\275&\214\317\275\2751\352\275\226\305\010\276\2427\202\275\033\236\377\275\244)\266\272s\207\205\275\363\362S\275\010\331\337=\252\243]=\370j\252=\006y\264=\244\202\261=\332\320\246=\311\243\004\275\235y\305\275a\300\024>\244\246\317\2751\255\030\276h!\005\276\255jP<\360\344\343;\r\246\230\275Ka\014\276\273\"\321=\276D\017\276\356\205b\273w\206\n> z\317\274lO\034\275\025F\263\275+\274\326\275f\361\242\274J\276(=\3656\336=F\001\343\274\220\201\246\275a\243\226\275 \237\200=\256\262O\275\213A\324=\n*1\276\010\260\320={G\'\275\302\217\036=\036\355K=r\004\364;\270\026j=\370\364\204=!\244\353;\340\036\365\2744\220I\276\352\255\272\275\324\325\\=\237\235\260\275!\017\277\275\321\275\034\275\245\256\307\275\330F\334\275A\335\311\274\353y\273=qy\037\2749\242\001\275\370\035\261\275,\010.\273\275\310\342=>71<\351\303v\275:\000\021\275\334V\027\276RH\215=\310\025j=\273\'\004\276\035\017\026\2755\204\357\274\323^e<\335&\236\274\2234.\275\355/\021<\344\345\361\274\272\315\367<\246L\200\275\221\325\206<(\327:\274\275\247\310\274\205\270\230<\351@]=3\321F\275\203\317\256\273\255\277\257\275\322\202a=:F\210=F\213\326\275\260\347\301<\032!~=\267\004\205\274\252\213p\274\257\264\257:\322\325\"\275\023\2377\275\272\031\226=\252\216\364=y\"\005=P\270\202=\254A\227=\351\233j=\243X\033\2760\354\r\276\326\320\276=\"\375\036\276\232\342(<d\343\214\275.*\005\2762\335\026\276.\310\376<n\246\226=\356\275\344=\233\000\350\274\"\254\272=\005\032B>B\325I\275\035\207\346\275\306P\236\275\265\220\025\276\032^\026\276\370\272\234= \005\357<]\306\247:\220\3064\276\222\t\232\274\242\316\343=-\370\311=\232\206\372\275E\274\\\275\204\263\255\274\024R\273=\235\275\322;j!\033\275}\334\203\275\236\260\374=\350\360\004\275v_\340=J`\014<\272\304\014=\212\364\023\273\202\336v;\023\370c>\031\224-\2744\365\372\274\226\215\335\274\223\273\337\274\360\357\374\274\201d\265\274\033\305\201=M\310\346={\344;\275\232+C\275\365M:=\037\364\222=\357\250D\2756q\337=\220\341\334:j\343n\273\214\342\007>\'\251\263\275\035\355\250\274\035\345\312=\351*&\275\266\0270\276\215\312\003=\260\273\025<\242\215.>^\033\256\275\356\223\210\275\234\322 <a\250\213=\017\342\240=L\331\014==\262w>I\236G\273\234\312\253\275\004\026\010\275\267\224&\2755\334=\274\233\024\027\275\255W\227\275I\211\266=?\254\330=\177k2\275a\317\001=W\000T=dM|=\303\343\311=\003\325\246<\177\316C\275a\370\201\274\010\006\033\275\325\310(>\367\033\002\275\333d.\275\330/\214=a<\316\275\261\324\274\274\350\263T\274Y\241\247=gv\216=\313V?<\213\227y\274\014\325)\275Pw\271\273\360\260\213=\006\037@\275g-K=\004\202\007\274XP\264\275bw\021=\203\274\276\274\346\362\032=\271\301\245\274\246\240\216\275\021\375\221<l2\002\274\211\374\222<\324pK\274}`>=G\263\035=L\037\265=4\224\312\274\200\355\201=B\232\374\274\347\023\020\275d\250\214=\314\315\000>z\352\242=\253\317\336\274\256\246\314\274\275?\007\276+}\307:u\315\374\275\215\237\364<>\200\234\275\0364/\276X\200\310=@\331M=H\340\252=\331\004\220\275\027\254\002>\244\200$=C\204\237=\014\367\271<\013\203\020\275\331\263\204<w|\325=d\226\024\276P`\346\275\350Q\023\276<P\210\275\020\345\013=\326\236\342\275#\316\355=[\022\303=\t \215<\325j2=\230\336\215\275\351\243\331=\213\375\310\275\307W\026\274$\313D=q\341L<\241\363\251\275u \253<t\007\207<s\202\271=\252-\226\275\004\232\016\275\321{\034;\304De\275rx]\275C\224\240:\230E\201=\226w6=_a\235=P\343\206=\346J\222=\000\351A=\322\206\254<\347\031\257</k\272=\246\013\316=W\013\257=6\333\021\275.l\371;j\027w\275\324;\250=\230\353\003\275\343\257\260\275\226P\316\275\270\362\324\275\270\352\224<R\036\014=\002\020\014>\371\347\325\275K\327\210<\212fj= y\t\275\340\207\373=)\n\265\274W\'\332:\353\204\210\275\234\031\202=\241\234\352\275\302\201*\275r\256\372;h\305\367=1@\357=\263-\243\273\031p\343\274<\226w=\376\r|\275\363\177\344<\330\3039\275 \222\215<s\351B\273\340Q\270\275\\\004\204\275sd\266\275[R\362<\230\362\240=H\025\260<5\335}=M\257&=\\\315\367\274\020`E\275\262b\361=Y\337H=r16\2755\227\335\274\234\246\034\276l\216%=\323\014T;\307|-<!\3552<\022b\221\275>\234Y\2754>7=\231^\232\273\\\251\027\276\203\303\255\275)\'\027\275\371\216\230:\275VQ;i\246\221=\342%l\275\212I\270\275l\017\002\272\331\257\244=\372\337\263<\352\353\002\275f\257d=\237\364\216=\310\230\360=\004LI\276\245\273\354<\345 \000>bh=\274[\320\022>\375\016m\275\214w\014>=/\003>y@\217<B\272*\276\235\252\027>\246(\033\276\314\2635\275\252\330\004> \264\330=\321v\304=frZ=\266\227\222=\356\317\373\275\253\205\272=N[\276\275\227\017\343\274\264|1>\353\375\375\275\330\304R=\037\355\035\276\266\343\177=~\233\027>\005%\372\275A\310\361\275\342\0368=\210\014s\274\331\025\025\276i\376\342\274\256\307N\275H\017\371\275\304\320[\274\214\311\336\274\313\336\303=\245\322\230\275jC\226\275\010\262\216\275c\345N\275\265\007\265=t\244\024\275t\016\207\275\000\036W<\031\006\304=\207\207n\275pe\034\270B\033\325=\217$\330=\366\316\343\275ym\347<\336\302\334;KO\233<u\240\261\275\232\002n=\321m\277=\247\301\263=\\\373\351<\261\236\032=\004j\377=\320\354i\275\345\306\267=&\300\t=\354\355\037=J\035\376;\271<\236=_\246\344=\237\200\271\275\221L\341\275\355,P<\001\033\234\275\225\302\327=\006\304\007\276&|\t\273\262\026\210\273\025<\317=\344~\354=j\307\006\276ca\256\275t\034\274\275\2772:\275\n\250_\275c\003<=\000\266 \276\265\027\002\276\345\222\213\274\365\207\020\2764L`=\236\370\004>29\306=\006[\203=_Tm\275]\372\265=~\246\220=\2425f=a\366\372<.;\304\275\215\365\033=\013\307\333<\364\374\302\275\rUd\275G\3376\274^.\350=>\371f=\301\231{<uX\311\274\207%\234=\321\033\177<\211,\242=\217\361\266=\252Q\006\273\353\310\324=\312)\036=ICF\2753L\225\275\201\217\214\274\256]\230=\001\204N=\234\361y<\005\036/\275n\232i=\021V.=\022\300\260\274\276\206\020>\352\206y\275\211_\014>\013-\333\275\272\311\336\275\222\276Q\274]\3267>c\006\257\274\213k7>\304\362\024\276\336\213\360=\025\305\023\276\265\024\r>\373<\022\276\312\312\274\275\217\211\237<\221\246\361\275\255n\n>$b0>\026\246V\275\267\217\036>\263\314\004\276\302\214\237=\205l\220\275\253\034\222\275\344f:<\335=>\276y?\377=+\336\354=\365\037\007=\306|\377\274\306\205\327\275w\367\346<)x\256=M<\267=\332k\314=\301%\235\275q\034L=n\254\255=\217\206w<\245\365\215\275\030 \266\275\023\027\234\275\264\253\373\274s%\034=\366\203^=\037L\352<9V\271=\214D:=\275\034\273=\036\271\026\276:^\365\275D\252\000>\025U\260\274\301\326\316\2751\020\027=q\225\023\276\261A+=l\305>\275T\007\035\276T\231\210\275\342\273H\275\314mF=\250\356:\275\371(\005\275U\311\177\275\016\r\272\275+^\023\274\275\302\"\276\204\200\253\275t\323\200=\214\375\240\275\315\r\255\275vF\346\275\025&\341\275\275L\262\275o\035\220\275\2668\315\275\353\007\300<+p!=\351\330Y\275\035J\302\275\263\000\022\276\306\265\001\275\'\341\221\275\220\302\036\275\374\316\\\275\270\342\334=\365\272,\276\327\246\006\275\365a\367\275P<\335\275t\034\227\275\n,\005\276\264\261\327\274nE\223\275\365\356\267;\267\321\251=2\034\342\2754\323\003\274#d\302\275\216\375\231\275:\2043\275l\214\311<@\2238\275\355\027\215\275d5*\276\256\202\346\273\3101\234\275e\315=<\304\'V;\275\2723=\340Z\r\275#I\321=G7\016<.}4=>\220\223=\337\234\256\274\211\022\254<=\304\303=)\276\r=\274%\302\275\3202\336\273: k\275\305\227\214\275\021\020\214\275\001\315==\373\200T<\246\373z={\362\321\274\341\240\025\275!a\303=\237\264\333<\223uY\275\036\037\026\276XIY=w\346\034\276\340\235%<u(\256\275;\2437\276\372V\r>\355f\251\275\366\223\305=\024\010\345=\026\363\025>\341\326\007\276\2002\017>\235\333\361\272\177\216\321\275\235hN=\266\003s\275r\311|\275\020\312\307=`\341\035\275,\033\003=#\036\001>\262\212\350\2755GJ=T6\311=\254\3762\275\213\017\244<I\220\r\275\362\330\005\276\211tF=\022U\013\276Y\302\371\274\274>W\275?\016\245=\276\010\207\275j\332\222=\223X2\275\216\224\233\275F\212\034=N j;\3020\243<\213Ub\275a{\223\273\271e\375=\355\333W\275F\215\261=0\001j\275n\313\230\274\372\276\210\273Y\260\312=\252Sc\2766,\273\275\222\031\224\275?2\275=\t\265d\275\304f\t\276\355\346\337\275\372\246\366\275\267N\250=\207\214\353\275\215\226g\2743\246\342\275\235H\220\275\010$A\275\365&(=vG^\275\035\324\327\274\003dT=N\320\302\274\010$B\276\037\027\316\275\002\323\017>\340\013\004\276<{4\275Q\002H=\233\300\310\275\016\366\265<\316Tv\275\303\361\201\275{&\033\274Bo\350<\331$\363\275\363\213C\276\307/(\276\nHZ\2740=\306\2750\355\330\275\317\001\305\275Z\312^;\261 \364\275}\227\025\274&\250\372=f.\221<\343\261\261=\241{\205=\371\362g=\226\\|=\020\001\361\273\262N\203=J\233H\275/\001j\275\301\327\243<q\324\270\274t\257\034=wi\254\274\243\260\330<B\222\t\275\026]\030=\351\353H=B1\373=n*\307\275\0100\270<\2313\240<Tu4=\255\337\216=\264e\306=\333\005\232:\240\324-=T/4=\262\332\362\273\356\2508\275\002\365\350\274\177\365\351\275\320\353,\276d\221\252=\265>\315=DV\321\274\262\2775<\337W\375=\310\004\024>D\240\365=\300\341w\274\273!\020\275\345Z\210\275\355o\324\275[\372\310<\032\313\266=\322\376\003\2754*\n=Ty\323\275&\370\321=\034\267\352\275\344X\252\275\307\002b=\371\224\203\273\307|\302\275*p\337\274&\3024\276+,\204=\304W\000>{^\034\275\276!*>p\254&>\002\266S=,r\333=\205\2006\274\307\370\267\274(\251\312\275\332\347)\273k\263.=\212\311\244<\277rp\275\000\352m97\000+\274\331\331\334\275\202\312\034>\206\243H<\256 \362=\354\221\031=\205\306y\275\357\'\330=<\021+=\252\337\366=\027\214\254\273^\302\022>\205\024\262=d8\026\275\272\2261=y\277\013>\275\235\251=B\342\317\273\373\255F\275\362\310\302:^\361\201\275+J\257\275?\347\'=3\211\315<\013B\323=\226?<:E~\262\275\223\317\274<\r\304J=\310\262\342<\365\343\007\274\321\177\013>\303\202\240=\320\003\256;\030\343_>\342\3138\275\266\350\030\276\226\265o;\232V\355=\304\331\240=bS\306\275B\330\313<\"-\263=\324\244)=|\340\211=`\232\257;\213\017\263\275]\275\022\274\202\\\277\275q\212==\314\014\003\275)\271\372=\373\242\036=kry\275\377\217m=B\324\317<E\322\374\274\010\007\312\272\350\274\326\2756\221\263\275\025\277\342\275\210\023\025\276\250\222\'\274\257\375\203\275!PC<\014\032\215\275ur\245\275\373J\211\275\220\265^=U\271\250\274\033t\230=\225\232S=\325 \212<\264\242\r\276\364\007_\275\354{Z=\357}X<<\313p\272\231D[\275\322\253\013\276_\377\002\272\315gN\272\221\317\361\275X\024\324:s{\362\274\263\000<\275o\364\230<\351\032@\275\342^\201\273\314\207s\275\312B\371<\341\357\225\275\017\0222\275{#J>\207\310B\275\363\207\035\276\212\020\016\276v\347\030\276^&\014>9B\023>\262\310\227\275\tUv\274[y\276=\225\337\322\2757\271\025>\035&\342=[\022W=\231\214r=\255g\001>\002\3106=\327p\314=\322\177\026>\276D\367\275\334n\226\275)\220\006<\202\371\330=\326jm=\032\2268=\264B\217\274\307\322t=\2065\013=e\230:=\372\360\255\274\350$3=\\\2542\276\300\345\317<\341\234C\273K\271\212=\1775\r<)Z&\276\273\031a\274A\356.=\211\310\242=\250\302]<\310\331\307=\326=3=\310R\003\276\241\251\366=d\256\267=*vq\275}\037*\273\030\210\253\275o\0300=nV\034\276c\253\231\274\334.\261\273.\370c=-\002S\275\236\r\020\276\022b\230\274\263_\272<~\322\362\275\331BD\275\300\316\252\274\244\215k< _\354\275\305\276!\272\342\303\214=\377\266\226=w\001v\274\216\341|=\341\203f<\376\205B\276\224C\315<:\205\374<r^\304\2748\210\234=\'\305\000=m\261\337=\336\001\000\274\037\373\212\275A\377\322<\025WJ=\304\231\243\275\366\211?\274\326o\331\275P\220\001\276\276i,\276\210r\310\275\301\021\303=\335\272\007\276\260\034\262\275\362l)\275\277^\241=\034\343\211\274o\324\322\275\267u\330\274\017\347\222\275+\253(\275\265\317\371:\257b\020\275\300\253.\2750\253\311<\036\355\200=\252\313\213\275\033S\037<\211\237\260\275%\245!\275\3578\007\275{\236\316\275\206\005\213=\334\214\024\275d\366\306\2756\267:\275\332E\264=E1\242\274+\331\033\275\231\363\306\275\212\350\226=\254\270.\275\336N\240=\322F$\276\003\215\220=B\r\241\274B\330\220\275\024\014\222\275\"\034\023<g\n\003\275\376v\303\274B%\311\275\313\026\005>4\323@>\277<\366\275\375\251\356;t\310\204=rV\344\275$ex\275\2353\017>\340\034\005\275\356u\273=\350\327\031>\361)\037>\261p\367\275\251!\000\276H4\035\275\264QJ=3b\243=B6\236=nk\264=\276\273\325\273\014\342O=<\3005\275\371\363\342=\225\304\035\276\334,c\274z4\357\275y\0320\275\020\371i\275\227\375\221\275k\223\306\275v\273\276<\306e\207\275\221\255\221\274\275\336\307=\233\030\004\275\237\256\031\275[(\310=\233$k\275\376\345y\275\006\004\272\275\201\341\252=\275\006\354\271\2307<\276:\312\266<\244\007M\274\251(\324\275\266\243\352<\261\215\373\275\377\241$\274<\357\266=\270H\342\274\363\370\351;H8\022\275\264d&\275\252\235\037\275\321\314\343\274\305?\266\274\337\026)=\267g\277\275\026\261\014\276\335l\355=^n.\276\036\362\337=\264\363\300\2750\325U=\266\371\257=^\214\005\275\0242\360\275\323\000\263\275\r\337j\275\231+m\276\032\354\256\275\207i\215\274\217\337\037\275\023\242\313<\215\201\205\275s\271\270\274\240]\267=\nI\226<\2334\245\275#\027\270=\321\230\201=\301\204\022=\345\212\014<\020\r\313=\255\362\353\275\002\313\253\273<; \276\026\206c\275\253F\303\275\202\225\203\275\262\361\243=\327\311\004\276|\365\370<\375\341\323\275\326E\372\275>\336y\275\030\326\231\275_\321\255\275\'<\200=\2531=<\307\247\001\275\000\205\215\275\361v]\274\255\256H=,(3<\"\345\r>\007~\217=\031\314}\274\031\036\211=\261\235\206\274\272Ys\275\\\367\220<\233\3202\2759`\177\274\t\244\265=$<\341=\257\237-\276\304M\356\274l\037\207<\005\305\002\276\306\252<\275)\222\340\273\020\327a\276\302\255\362=\222\332q\276\244\253\266\275\014f\274:\013\030\322=\325i\016\276\261\360\r>\256\013\305\275g;)>\026\362d={\226<\276\304\244=\275:\240\374\275\3029b>\020\254T=r\367\237\275(\260`=?\031U\273\021\320\223<\357\213\261=\353S\261\275\362\017r>\264C\r\276\023\305\211=JG\001=T9\t\276\270\242\244\275\333\365\271<!!\263\275\356\310R\275\303\267\245\271\000\024\351\274\234\322D\274=F\353\274>\261\246\275\213] =}G\034\276[U\211;\n\347\345\275&\210h>U\367\267\275\275m\345\275\363t|\275\333\010\031>\000J\261=\302K1=5\010\020=a\221\343=l\037\231=c\230\002\276\205\253\343\273\223y\201\275L_\252=N\273\034\275\216\246\007\275\027B(\275m\236\365\275\222\253\"<\200\305e\276$\237\275=\036\346\235\275;\335\021=\343\002\303\274\265\305\017>\212kE<\034\341\212=x\313\231=\010]\t\275\017`;\276!7\350=\311\327\373;\t\315\257\273\365\225\367\274\223<\322=\220\207\243=\0200x=\352I\r\276\373\034.>\203\2408>\271P\023>\311i\004\27660\250\275\247\\\007\276\301u\330=-\330\226=%\020,\276,\254_>]\321\030\276\307\336R\275\251\244\347<\023\016v\276\340\277U>\337\007\210\275\030\376\013\274\3322\033\274\006b0=\331Ga=\241\252\364<\311\374\247=\237\340\337\272\330\321\225\275\334\010\035\275~\376\354\274Nb\277<\267\364\271=(\351&=q\t\341<_e\254<`\261\237:\360\326\207\273\035\341}\274\017-*\275\021\371\304<\343\217\242\275C>\226\275\024\373\254=\357\035+<\324!\203\273Eqi\2758\344\276\273(\377\301\275\274\273,\274\202@\244=?\261\312\275\027\375d=L\334\233\274\363$g\275\nL\376=(\243\363\275\224\237K>\207*\370=^\330F>\261\027&\276\355\002\316\275\3028\340\275\227qb=~\216\204\275V\200\357\2750\340\006>\030\241\331=A\246\205;\014\2103\276\307H\244\274\271\"(\276\304\306\356=\307\037\037\276\357R\330\275\355(\220=U=\314\275f\333g=j\311\t>\332Ij\275\321\001\023>4\301\332=\r\301\302=\354\027\225\275\240\027\351=_\231\023>\3509m\274\251\232f\274\2714\236=\n\301\306\275\n\263\314=\2423\245\275\352\211\222=\344\206\354=\033\276\022\275\363b\371\273VR\202=\317w\007<\34641\276\267Gd=\014Ra\275JC\027\274T\261 \276O\021\216\2744~\372=\370?E=(\326\300\275\014\202\205=h\3564\275\314\243l\274\026\003\026<\230{\244\275\276\240\266\274\250|Z\273\215s\230=\351\232\363\275\014\271\207\275\305 (\276\322\266\224\275\236\2126\275@\240\007>c#\220\273\277\374.\275\344\277\333\274@x7=\257\030\305\275\234I:\275m\020$\276\242\352t\275+d\014=\177\335F\276[Bg\275c4\003\276X+\305\275\323\324\344<\334\330\364\2746,\244=\363\272\033=\273&\341;\031\311\360=P;\005=\247\270\342<\266\217\024\275Nx\230\274\272H\277\275\225\254\303<1\240\301=89?\275N\311\313;\343\265\263\274Yg\253\274^\020\215<\207\277y=\0050\335<\270\230\'\275JC@=Uh\010=\312F!\273\232\231\300\272\360\300C\275j\006\213<l-\310==\355\273<\350J[=\"\223\321\274\261\035.<\345\364\252\275\023\323\346\274.uJ=\242{Y\274Rd+\275\026\355%=\016fi\275\351_\006<\033O\237;\ri6\274~\254\014\274r\373{<Aag=Oc\263;\373C\013=\230{\354<\242\034V\2755.\226\2743\204e<~\331?<m\373\212\274X\352!\276E=1\276\210\036\234\275\245\336\202=n\025e<\227S\010\276\351~%\275\265\305b=\373\013%>\203L\204=\177\002\236\275M\201\224<\235\211\377<\240)\224=\205\347\272\275\272\223\241\275V\261)\274/\0255=\347Q\026\274\313\211\021\275x\370\034\276\322\333*>\344+C>\037\356\325\274g\241$>g%\210\275\263[\033\276\027|\001\276jC?\2759\240\022=\211Q\250\274M.!=\ts\'>^\366\334=D\330\006>1\002\304<\235\334\213=\356V\003=\317U\230<\010\327a=w\022\214=\245\006\264=j\222\224<\346#a\275\360\375.\275\313\3651\275\305\324\004>\224\330\210\275\026\037\205=,\331&\275\276\202\240=\367RR=Aj%>\242\031h=\030\370\004\273\277o\021<\006\334:\275\n\344\240=\023\322G=\301hp\275\254\377]=\362\235\272<\326`\245\275e\025\014=\223j\024>\350U\344=\001\317\313\2750\215x\274\016n\031=\220\214?>\374\313\014>\307\265\335=\266\312V=\177\r{\273\370\177\257\274\357K\263\275d\371d\274\241\333H\274\343\311\'<@QK=^\372\315=\210\317\036\275\263\022\335<\325\305P\275V-\024>Dw\335<t\374\376\273\306\000\270=\2035)\275\t\256Y;,\0034=p\305\324<\021\031`<\216\366\243\275\260\2141\273\225~:\275\365\004\026=(\363m\275%\311M=\326\3238=\373\307\261\275\351\256\215=\022\355C=[W\307=\353<\006\274\333\355Q\274wi\006=\274\"\027\274\356\205\261\275\372\265\243=h\333\251=\372\353\221<\'\314i=\017\333\364\275\345fJ=>zx=\205\254\034<\0211&=\246\237\317<[\307h\275\242\031\274\275W\035\247<\265\314X\275 \315\273\274\026\237\226\275}\261\005>.\204\017>O7\326=:\241 =N&\300\275\371-\201\272\350\214@<\314\007\251\275\205\211\034=\242\2431\276I\316\010>\275\215^>\020Iw\275\257\316\254=\252\226\203\275\256x =A;\211=Q\257\236\275\021\334\310\275\215X\233<%H\216\275\356:\376=\005<\271=\024I\316=Y\020\020\276\243*\207\275\036C\220=\245}\036;s.[=\305\350W\275\212\336\254\275\223\352\232\275i\2503\275\1774\223=\335\343\320\275\361\231H>\267\345\212<P\263\031\275\217\2341\275\204\200\331=e\345\265=\027\252 >{{I=\356\326\201\274N\354\230;\314\002\020;\243\331\005\2765/\246<A\261\004\276\327\350\221=B\336\334=\202\363\372=\213\376{\275\365]\307\273BA\254=\373/\274=\177\375\347\275\026\240\206\275\257\312\306;\025\370\227;\307ou\275\232\245\000=w\364\277<H\036\202:\231?\232=\276\212\006\276\306\230H\275g\2503>2\263g\275h\225\315\275\310\r\265=0\366:\275k\013\373=i.\304=\265\203v<\332\260\267<\351\375\243:\276\"6=|\201\356<|\213\000\276}V\036\276#|\t\275\215\266)\275N\360\355\274\271\266i=,\235\t\275\223\277U\275q\302\004\276\026\200E\275ufy\275\360\206\255\275\325\237\034\276\202C\312\275X]\366=f3[\275\017\365$=\351\262,\274L\314\263\274\022\307\237\275\374\2179=\343\231\212<C\\$\275$\035\212=\"\214\223=\272i}\275\2559\010\276\205\352\n=\201\252\033=!=B\275`\266\033=\356\301\345\275\031\270\200\275\343]\340=6o\324=\270\314\226\275e+\271<\336\373c:1]$\273\252\304\022=\342\356\252\275\263\266^=(5\225\274\340\334\234;yr\037\275\267\355\001\274J\345\024>\037\247\355<\376`S\275\245*\236\275\311q\031\276\237i\020>\365t\331\2759\356\024\276e\022K=\231\317!\276\267\022*>\320?\210=\204\n\317=z:[\276\331 \n>\r*\241=&\246\330;N\203h=-\277r\275\\\034\337\274\006\t\204=\\\225\001>\020@I\275Va|=\256\346\270\275\242N\370=n\371\262\275\016w\237=A\006\347=\236q\016>\376\002@>\336j\227\274\351+\233\275\317G\272<\002\034\310;\277!\226\275vs\202\275\273<\243\275w\364*<,\033\270=\254\371\307\275a\024\320\274#p\025\275\3775\337<\322\317`=\320k\347=\303\340b\274%\234\230=5P\206<*1\001\275Xn\353=B\272\251\275N\205\331;D\013\312=\330\013\245=\245\366\216\273\305f\265<\226\206\007>\376\331\241<\302\277\007>\3713e\274O\230\240\275W\240\022\276+\267\245\275\356\256a=L\364)=\006_\257\272$\342\333<\362\301 \276\272\325\263=\240\215\014<\244\373w<\254Z\033=\335\200P\274&\005\264\275\034\r|\275\316M\002\276\250\261\017\276\341lI\275\225\355J=\267M\354\275\025\207\246\275\217r\227\274\360\003\265=\302\037\347=\252\0062\275d-\265;\205&\355\273\206\005\'=#\265\000=\222\374U=\317j\240=\257_@=\034#\027\275,\214\261\275\033\020\301=\213\301q<\237\207E=%\226/>\235db=\027+\370=\370\275\333\275\2013\304\274\360\365\\\275\262\233c=\'L\212\274\202\023+<\2724\035\274\307(\215\275\274<s<\270\215\227=\024_\234\275\r\352e<JAQ=B\363\357<\216\240\003\275(\255\201\275\205C\216\275Nl\340<\264\031\211\275\231Y\"\275\356(\034=G=\227\275\330d\034\275X\231F\275\027\273\347\274D\365\243=\213\276\363\275\360V\206\275\343t\265\274}\306A\275\000\257\023\275bW\331\274\005\346\264\274^?\300\275\212\200\366={\367\203=J)A=\340Q\026\275i\206\240\273\351p\r<{1B\276!\\\223=\331\332Q=($\210=\004\3253\276\343~\235=-X-\275yo\222\275\257\315\003\276\ra(>\312\270\241=\203\304$\275#\351_=\344\366,>\215]A\276\000W\026>\304h&\276\2744\264\275\023z4>\244\203J=\277\017\341\275(-*<a\366\252\2753\324\020\276\343\320\026=\255A\327<\331\361x\275S\327\357==\3656\275\036\317\003\274\277K\023\276W\263\"\275\255s\250<\370\276\r=4\305\277\275\225\205\353<;S\024\275\304\030\034=\333\300*=\311i\201\274n\224\262\275GZ&\276\304\205\307=\000\247\304\274?V\213=pEI\276\320\231\342\275<\355\t\275\004\375\350\275Cd\362=\221\032+=\033\245\347<\036L\254\275tV\030>\0167\362<\346\021C\275v\020[=\031KD\275O\211Y=Cm\323=\035+\202<\310@\017\275\333.\002\276\273G\226\275~\322d=8\333\242=\354\220 >\275\310w\275&-\256=-F\311<\224\210#\275I*\256=\t\224\203\274\334,\342\275\t@.=\266\354\206;\243\250Q=l!d=\273q\001\276\355\263\253\275\177\016\326\275\r\201\266=d\t\371<\370\207\036>\\\265\341\274\216\370w<\364\014\274=\025\272\215=\234\310\330<-\"\210\272\267<\210=\376^_=|\035\376\274h\212(\275:\320\307\274)P\376<\363s\333<z\320\254\274\034\207f=o\202\037\275\307\206A<#\371\037\275\354\314\016;@\205\363\275\034\202\202=\224\020\014=\032\031\277=\210\360b=\256\005\270=\341\325\225\274.[\271\275\203l\210\275\234\337\017=f\233U=\244#\026;g\244\263=\010}x\275\022\246\020><\222\000<\013\200!>a`\233\272b\2225=\277-\276\274F\004\000=\355\271\234=y\032\014>=\307\302=/\355K\275\203\301\215;1S\312<\323@h\275\354j@\274[\346Y\275\267\257.\276\340p\377\2759\334\226\273^\207\247=<]\351=z\255\005\276F\266g<\234\302\223=\260\333z\275\365\024\261\274\333\342\365\275\332;\n\276\362\350!\275\267\333\020;\202\251\334=1c8>\350F\216<\023\372\003\275\313\211\351;\346\312y\274,\021\032=\217\377\247\274\020q\246=PA\372<\360\212\033\276\220\317\336\275\345\'\261<AJ(\275mK%\275\367\313\302<Y\007\236\275QzD\275#\271\202\275\004I\356\273\241\326\003>\374\361\375\274\021\323#<X\336\224<K\311\213=\252\203\014\276\017\216\022=\212\302K=\256\325\340\275\244p\017<\r\300\301\274L%&\274\020\'!\273\322b:\275o\370\013\276\236d\246=\203\335q=\250\377\320\2736\335\214=\243\025\022\2761i\233\275\"\323\"\275\251\344\213=\177D\031\276}\'\312;J\216\301\275\242\343\262\274\037\204\232=\300W\256=\3367\005\276d8S\275<\341>\275\253W\246=\030~\213\275 b\022>\304#\376\274\237UG\275\010\356\243\275\016\334U\276\032\340\010\276`\260S\275R,\216=E\3008\275\344\340\023\2760\263\246=\004<\205\274}m\270\2740\033)<s\277\35795\273X=\267\2339\2751R@<\023\351\033\274\315\000_\274\232H\367<\263\014l\275\260\004@;\020-\003=,\305V\273\210\240\3578\250\005\010\274^`F=\021\337\240\273 c\255\272F\374\033=\360h>=X3\215\274\223j\200<r\372\266\273|\265\320<\231\266\205\274\'.\023\275\302\222\016;*\257\375:u<`=s\362X\275\246\220\242\274o\275\315\274~\335m\275\271~Q<Nj\347=\321:\315=\312\201(=\210|\360=}\031\001>\366\177\323=\313\036\243<\277\353\331=\372)\222<\265\250T=\207\205\372=T\001\240<k\3253=\364\255\274=\\o.=>\020\357=oZ\027\276\266\2330>\264P\021\274s\237?=\232\304\303=\030\031w\275\367Gn=\204=\\\275D\003\313<\320\346\201\274&\231\207\275K\373C=\246{\261<G\353\334\273\324%j\271\031\"\274;\217\353\255\274,J\020=\215\260\203\275*\020K\275T\037a=\320\276X\274K\007\210=F\370\232\275U\256L=v\301\017\274\307\305\245\274) y<h\026,\273<%\271=z\242\276\273)@B\274\037\326\256\274\300\031\177=\3619\202\274\"8a=N\231\372<aI\357\274\235\010M\274\337\325\221\275\232p\216\273m\3507=\316\003f=\323B\000>qz|\275M\024.\275\264\301\357\274\235\377\223=Hs\211=\362\340\266<\022\326\226\272\201\371l=\365\371\r>\327\360\353\274\201BS\275\31478=\362\266,\275\360\254\006<\272\300D=\226\010\356\274\037\373\003\274\322:\226=\251\260\272\274\014\350Z;r\231m\275\237\275\323=\332k\375;\335\0053=TPS\275VQ\224<\207\265\304\275\347o\256\275Ou\217\274\361\212\304=\2563;=\220\017s\274A\367\247\275\317\226\230\275"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "\341\0371\274*\312\241;\261/\220<\032\363\325\274\320<\031=@$H<\262@\217<\316\244\317\274!h\341<oc(=\213\236\347<l\310\272\273\272pW<\242m\005=s:\n=v\2443<7c$<\000\332\311\273J@\215<@\264\030=\006\225\240\273\356q\223:\317p\220<!\014P<\'U\017=\222\364\245<\340|u<&+\006=\325d\255<\024\222\276<\277\007I;\024\36688\327}\221\274\217\373\225\273=\021\010<lD_<\227\346L\274\005\333\317:e$\275\273\001}\264<\007Z^\274\304f\r<\207\260#=\205\321\026=\203\221\017<x\302\233<\224 d\274\256\230\216\2745\334\017\274\364\351B<\203\340r\274\005\333\221\273^\255B<2%\202<\3137r\274\363\016\233\273Jk6;\211\032*;\325#\0179\247\202\316\273\325\026\314<\375p\300<W2r<\225:\234:\213\370\024<G+\372;\004\376L=\000\350\265\274\303\250\225=N\273\017=a;\237<9\342\327\274\0346\216=\247\316n=u\200\t=K\331\310=\340r{<@\033\'=\236}M=Z\223@=\265A\020=,\035m\273#c\244<7r<=\220\2506\273Y\332\346;l4\354<\325\"o<\364a\226=\260\024\347<1\333,=\221BI=\322\375i=cgb=\210^\202<\tq\252<\325,\357<\274&d<\n\031\213=\310\255\335\274J\350\227=A\201\177<\2130\337<.\334\345\274U\025\207=\250&\020=BK!=\373!\313=\366{B<\273(2<AeI=\002\033\376<\006\367\314<\247Op\274\262\242l<Pi\031=\334\220\032\273wZ\037;\247\320>=\001\\V<\311\214\243=\262\277\215<H\345F=\264\352~=D\270\212=\034\037\026=W{U<%r%<"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:1"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:2"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:3"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:4"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:5"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:6"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:7"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:8"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:9"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:10"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:11"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:12"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:13"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:14"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:15"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:16"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:17"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:18"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:19"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:20"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:21"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:22"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:23"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:24"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:25"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:26"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:27"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:28"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:29"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:30"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:31"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:32"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:33"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:34"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:35"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:36"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:37"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:38"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:39"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:40"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:41"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:42"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:43"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:44"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:45"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:46"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:47"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:48"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:49"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:50"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:51"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:52"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:53"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:54"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:55"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:56"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:57"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:58"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:59"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:60"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:61"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:62"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:63"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:64"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:65"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:66"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:67"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:68"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:69"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:70"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:71"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:72"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:73"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:74"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:75"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:76"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:77"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:78"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:79"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:80"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:81"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:82"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:83"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:84"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:85"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:86"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:87"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:88"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:89"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:90"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:91"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:92"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:93"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:94"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:95"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:96"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:97"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:98"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:99"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:100"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:101"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:102"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:103"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:104"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:105"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:106"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:107"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:108"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:109"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:110"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:111"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:112"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:113"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:114"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:115"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:116"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:117"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:118"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:119"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:120"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:121"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:122"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:123"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:124"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:125"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:126"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:127"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w_out"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 6
          }
        }
        tensor_content: "{\340`?r\341}\277\264\221-\277\034 \236?\204\274\366?\220\n\244?t\214V\277\262y\237>\244\215\t\300\305M5\277\343g\323\276\302\200\340>\031RM\2772\030\010\276\215\014l\277K\201H?C\255S?H\212\354>\374\270:>N\310\264?\177\000\327>}\304\325\276\313\215X?\214\356\n?\n=3\277\325a\232\277M\014\021\277\253|\253?&.2\276\210\003\253\277T\2216?\231\331\220>\215@\350\276:\316\275?\343\235U\277\245Ak\275\313I\213?\367\302\213\277\250\341\024\277gg;?s\242\374\277\023\366h?g>\n\277\261\335$\277s\3112\2776\020\307\276\354D\177\2775F(\277V<\027>\307$S\276]S\256\277\010eA\277\030\020C\277\037\201\357\277\255\232\232?\272\023\n\277d\245\026?\232\240\366\276j+\025?\037\333W\277\251d\330\276\030\220~?\350G\200?\033\213\375\277P\201\304=@B\335?\366\344\217\2763\t\366\277~\346\027?\335w\213?g\231\033?\314\017R?\030\330\026>p\366\r\277\257\350\240\277\323+\275>\373/=\277\377~8<6\200+\277\034\314\202=\n\020z?Nh\201?\3760l?\324\375\230\276Up\204?xFD?a\323&?L\357\271=w\250\023\276\340\246\267\276\315\241\253> \221\244=\022\364u\277\332\206\322>\277S\021\277]\352\233=;z\001\276Yj\302>\252\0304\276$G}\277\000\354Y\2766\331\215=\255\374\252\276\316/\343>*u%?\370A[\2778H\212>\372~\247=\301[\212?\2171B?1\212;?\212\345\342?\215\255@\276$I\007\276D\276\222?\227\026?\276U<\026\277\326\217$\300\237\013;\275\266\377\203\277\234\245\214\277YU}>\260\000\252>Q\237\t\300\240\230\022?T_G?\336\206\226\276>\275\326\276\251\344_>P\016\245\277\226\337%?|]\356>\342\304[\275\330.\004?\365\360\332\276Cm/\277\371\333\254\275\263\021\033?}\314\251\277\344\3117\277\252fI?\017n\036<\2309\212?NV\201?\367\200\006\275B\222\263>\222\203\023\277)2\222\277u\315\316\277\001B\244>f\354\230=~\007\246>V\300\370=\376*\227\277\362-\245?d\367>?\025\240}\277T\361\343=\213b\276?\271\025\022?&\340\351>\225\302\234>\312\222\220\274\3252\375\275\325ax>>(\235?K\212g\277\317\223\347>\206\265\225\277\\\010$?\261\014)\300<\266\203\276@\237y\277\020C\002?\\\007\227\277\325\324w>\367\367\346?\017\227\027?\243#\300\276\n\037y?\302\254\003\277A\204\005\300\352\336z>\350\273v\277\305\357\342\276\020\362\220>\373\035_?$|\306\276\325|\021>\217\254\275\276\2144\265\277\331Pi="
      }
    }
  }
}
node {
  name: "w_out/read"
  op: "Identity"
  input: "w_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_out"
      }
    }
  }
}
node {
  name: "b_out"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "9h\367>\341\340\317\275,E\351\277a\251R>\210\364\267>_37?"
      }
    }
  }
}
node {
  name: "b_out/read"
  op: "Identity"
  input: "b_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@b_out"
      }
    }
  }
}
node {
  name: "output/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/mul_2"
  input: "w_out/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "output"
  op: "BiasAdd"
  input: "output/MatMul"
  input: "b_out/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "L2Loss"
  op: "L2Loss"
  input: "w_in/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "add_1"
  op: "Add"
  input: "add_1/x"
  input: "L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_1"
  op: "L2Loss"
  input: "b_in/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_2"
  op: "Add"
  input: "add_1"
  input: "L2Loss_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_2"
  op: "L2Loss"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_3"
  op: "Add"
  input: "add_2"
  input: "L2Loss_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_3"
  op: "L2Loss"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_4"
  op: "Add"
  input: "add_3"
  input: "L2Loss_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_4"
  op: "L2Loss"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_5"
  op: "Add"
  input: "add_4"
  input: "L2Loss_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_5"
  op: "L2Loss"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_6"
  op: "Add"
  input: "add_5"
  input: "L2Loss_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_6"
  op: "L2Loss"
  input: "w_out/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_7"
  op: "Add"
  input: "add_6"
  input: "L2Loss_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_7"
  op: "L2Loss"
  input: "b_out/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_8"
  op: "Add"
  input: "add_7"
  input: "L2Loss_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00150000001304
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "mul/x"
  input: "add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Shape_1"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sub"
  op: "Sub"
  input: "Rank_1"
  input: "Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Slice/begin"
  op: "Pack"
  input: "Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Slice"
  op: "Slice"
  input: "Shape_1"
  input: "Slice/begin"
  input: "Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "concat/values_0"
  input: "Slice"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "output"
  input: "concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Shape_2"
  op: "Shape"
  input: "label"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sub_1"
  op: "Sub"
  input: "Rank_2"
  input: "Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Slice_1/begin"
  op: "Pack"
  input: "Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Slice_1"
  op: "Slice"
  input: "Shape_2"
  input: "Slice_1/begin"
  input: "Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "concat_1/values_0"
  input: "Slice_1"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "label"
  input: "concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "Reshape"
  input: "Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sub_2"
  op: "Sub"
  input: "Rank"
  input: "Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Slice_2/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Slice_2/size"
  op: "Pack"
  input: "Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Slice_2"
  op: "Slice"
  input: "Shape"
  input: "Slice_2/begin"
  input: "Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_2"
  op: "Reshape"
  input: "cross_entropy"
  input: "Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "reduce_mean"
  op: "Mean"
  input: "Reshape_2"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cost"
  op: "Add"
  input: "reduce_mean"
  input: "mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "output"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax_1"
  op: "ArgMax"
  input: "label"
  input: "ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "is_correct"
  op: "Equal"
  input: "ArgMax"
  input: "ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Cast_1"
  op: "Cast"
  input: "is_correct"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "accuracy"
  op: "Mean"
  input: "Cast_1"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
