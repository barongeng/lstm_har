node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "input"
  input: "transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\t\000\000\000"
      }
    }
  }
}
node {
  name: "reshape"
  op: "Reshape"
  input: "transpose"
  input: "reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "w_in"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 9
          }
          dim {
            size: 32
          }
        }
        tensor_content: "\302\\\005>6\325\267=\334J\367\274m\206\247>\3367\314\275\\Hn>py\003\277\371\201k=]\267->D\200\354\275O\2509\275Ye\366=\256\326\314\275\004Ge\276\214.\221<\304\033u\275\257X\007>g\307\243\275\267\267\034\276\370\207\376\275*P\035>\307\261\335<h\333[>\260\364\336\276}Y\223\274%h\016>\t\277\211>\226j\356>X\001\230>&\020\211\276\273\"\241\276\222\215\032\276\252\242Q\274\0162\305\275?`\344=\0042\030\275S\342F>\345\331\207<3\"\251=\010T\202;(s\333\275l\362\310\274\n\000d=\367\226\277\2755r\024=\037\355\242=F\316\311\274\002\236\274<\233B\240\275f\247l\274\370\234Q\274\360\257\242=0?\r\276\336A\301;\\}\372\275y\203\r>\243\243\325\275\020\346\365\275\320)\341\273\333\324j\276\375(F\276\233V]=\211\345o>\265$\342\275\242(\002\276r\366\231\275\334\215\242=\310\266z=\304.6>\'3,\274{\342k\276)T\177=\374aa\275\203O\264\275\370\024:>\345\303\346\2756\361\020=g.\235\275\331\177\354\274\246?\273=ax`\276%\005M>\222\353\216=(g\235<\225\037\260\2769\377j=\273\016C\272\224\206\335=\200\352\316\275\241R(\276\342\007->h<\306\275a\247>\276\3104-\274\353\345{=\343\252\221\275\277q\250>\3430\214\275\217\024|?\177]V=\'\354\224\276\301\036\270>\034\274\034\276\327m\261\276\030t\240>\362\356\230\276\371\t\367=\352w\210\276\025\301H>\030\226\304\276\200\340\002?x\035>=|MK\276r\321\017\277\221(\265\276i\335\351<]D\237>\262::\276\223\\7\275\246\2551>}\333\003?Lt\351>\330\264a=\024\2462\276\310N>>\313\357\214>\017m\366>0!!=\'\022A>\270\275\"\277\027Q\230\274#{\273\274_\347]>\251+\246\274C\275\006=\017V&=Z\027j\275\263\357\251\276\032s\225\276\2710\264=d\364\253\275\t\374\367>H\263\331<\020\345\267\276\030\324\035\275|\364w>\334e\300\276\271\265\302\275\223\260[>\303\362->\362m\372<\310\0162\276u5\273\276\013+->\024<\013\274-\224H=\335(\007?6\233,=r\347a\275U=\013?\237\002\233=\273\010\227\276\264\377\200>g\027X>\007\214z\275\366b\364=F.C\277\334#N\275\347\323\027>\314=l\276(\270\">\371\333\202\275M\026\241=\25419\276\303\227\313=\310,\373=g\035\206\276H\317>>\032`\270;4\2306\275b\'\264\276\236}j=\032*)>}\212\210<\306\321\003\274]+\230>\242\223\253>\335\314\215\275W\030+\276\360\204G?bj\326\273J\254\251>\214\264:\275\314\365j\276\220\301A\276\216\371\334>0@\022?5\006\027?\343\243+\276)\2273\275l\252\254?\332{F=\316-\005\276H\252\013><\272\001\276\\\236\r>\315\022\364>\235\373\177\275A\236\334>\0337\243?\025\272g\2774\333 \277\345\215\305>\227\275=?\267\"v?b_.\277\000\356\311=N\232X\277u/#\275\037r\353?\006\377\225\275\315\230\202\277IEs\277&a(\276\357\302W=/\356H\276\253XK=\273x\241\276\224\300\213?o\'\257>\265\023\333\2766\001\317\274\254\277\335>\204l:\277\032\303f>*n\316>\324\205\r\275a\3520\276\223q\030>\343\204i\275lL\341\275\177\211\253>sWS?\344\352\234>\316\334\302>\227\336$\277\"\301\363\274\263\315y\276)\0260\275Q\367j\277\327\335\342\276r\241\216\276J\327\005\274`\030\245>\217\005N\277Z\220\377\275 \361@>S;7\276\230\036\260=\343\345\221>\237\003e=L\016\270?\214S\345\276\302\240a=\023\225\211\276\341\237\300>F\231\237>\013\262\020\277\020\250\343<l\357!>B*\024=\017\340c\2748;=\277}x@\274\026\257\033>\007y#?^c\347\276\230\363\250>\203U\004\275+Q\302\276\321\016`\275g9\'\276\214\"1?\0365\350>\025E\313\275\237\364\023\277s\255\235\275\374G+="
      }
    }
  }
}
node {
  name: "w_in/read"
  op: "Identity"
  input: "w_in"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_in"
      }
    }
  }
}
node {
  name: "b_in"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "\017\242$?V\263\021>\2417\371?H\320F\276f\320\277?\253\364\301>\254\010:?-\354\320\275P\311\003??\267z?\023c\362?\364\263 ?\020\316\306=\272\204\213?\035\234\025>\021(E=Hl\355\275\371\242\356>(\t\213?\023\263(?N16?\344\264\203?\013s&=\270\004\217?\261\267\237\275\201s\234?.[ ?\356\2561\276\376\010}=AQk?\274\226\232?\0258\022>"
      }
    }
  }
}
node {
  name: "b_in/read"
  op: "Identity"
  input: "b_in"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@b_in"
      }
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "reshape"
  input: "w_in/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "MatMul"
  input: "b_in/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "relu"
  op: "Relu"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split"
  op: "Split"
  input: "split/split_dim"
  input: "relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 128
    }
  }
}
node {
  name: "rnn/Shape"
  op: "Shape"
  input: "split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice"
  op: "StridedSlice"
  input: "rnn/Shape"
  input: "rnn/strided_slice/stack"
  input: "rnn/strided_slice/stack_1"
  input: "rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack"
  op: "Pack"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1"
  op: "Pack"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack"
  op: "Pack"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1"
  op: "Pack"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "\320\317\350=u\333\002<\332 U\274_m\223<b\2027=\'\027r\274\237\010\276=\017\206\263\274\267\324\256\273\2748\031<\371\034\200;O\022\361:\003\375n<\2768\206<\357<\275\274r\272\260\275\271\260C=\355\266\306;\303\345\305<H@H\274T\311\016\274\200\223\226\274 f\212\274LO\264;|\333\271\274i\262\020\276\032S\236;\357\007\234\274jh\252<{Xh\274\001\340\337<\371\264\032\274&\243\200\275\335\204\315<\376\252\231=\014\230U<W\223\200=\230\363\023:T#\233<\212\260\237<,.\010=p\265l\273\346\236\227=\202\331\317<\207f\324\274\201\325P=O^)\274u9\006\276\313\247\005\275\036\024\232<\265u~\274#e@=\344\0176<\357Y\376=\010\024v<a\226\263\275\362\213\340\274\343\3270>+r\332<\373\212w\274\205\310\202;L\215g\274\354m\000=7\034\243\273\306!\037=\356\274\222:\360]\223\275\201\352\265<o\206\207<]\352\274\273\327P#\272g\211\224\274\203\330\303\273\213\304d<\371\267E\273Yj\250;rO\237<[\3051\275A(\374\274i\237\265<XT\343\274\210\303\255<\232\230\006=\017\355n=\302Z\n\274/\003U=\226\n\207\274\324\340\265<\232b\t\275;`\002>\\\263\010\275x\342\301\2749R\000=\254\211\000\2741O\014\274\202\010\362\273|h\263=\274\007\327<S\354s=]\331\247<Lu\027\275\260%B\274h\263p=P\350#\274\262S*\274\254\247\227\275\"\304\271<\372_;=y\330e\275\265\227\021=\225\027\320\274\361\337Q=[\274\200=I\224\341\274\301O\240\274\3718\303\274\002\035\342\273.=(=K\027\204\274\004\247\207<\254\004\320\274\001\362i=@\312\204=\027\345\353\274\220,\035<W\341P\274\237\034\360<^\325\236\273\353(+<\312\\o<\362\361\367\275\360\372\237;}:\303\274h\230\362\272\346\037z=\272Z\2419\330\374\246\272\237\304\366\274@N\350<\336J\373<h7\023\270l\324&=\267\024\334\273R\002\264<+\373\032\274rC(:\255\303\005<\340\214\034;\020\325\370\273\254\304\203\275\335\306\232\273gKz<\360\204\353\273\377uI>\262\206V\274&\210\327\273@\327#=\210\332\302\272[W\302\274\374i\305;\246\305\222\276w\305\360\274U(\301=/\311\277<\221-\036\276\277F|<05\021>\252k\220\274B\230\242\274\225\257\321\275(\320\246=\270\213U\275(\331\203\271\254\033}\276\004\373\035\274\313\256\215\275/E\300\274Z\306\t;%Z\224\275W[*\275\351\0074\274\031\0174\275P\325:\274E\215,\274dt\345;\224\215\254\276]\253\256\276\371v\277;\237\333\342;\221\235\220;5\250\321\275\016h\337\274\375Y\247;oT\204<\236\255\r=\355\266%<\214\177\273\275T\223(\273\031\260\035=\001\210\037\272\365\2717\272~L2<e\352\241<\326\353B=ztO9\206\\\033>\023\342\242\273\255]\240=\312\026,\274W\250\230;\345(%=\315\\\225\274\220\376B\273\223\206\362\274\231\024\271\273j&\031=li\237\2730\004\003\275(K\026\275x\320\274\273?}Q=\006\030D\272\300\367\007\274\337\226\346;\267\243\004\274\310\317 <\306\366Y=\255\031\211;\203\3174\275\335\317\032\273U\356\023=\345\334*8\350w:\272\3603$\274\002\360K<\335\317\306<\217\354w\272\360\304\234=x\341\373\273\004\362+=5\035\213\274\207\376\235;\245=\2209\001a\005\275\030\244\002\274\304v;\273E\311\001\274\367\002\000=\2361\005\274\377p\376:\2771}<( \004\274\367\305\356<\230\212\266\272\340\002\n=\030\364\272;v\343{>\030jU=\206\016\305\275uq\032=2\252\\=|\036\236\274\271u\312;\341\r\241<\t\273\244\274\257\341\211\274b\010\337;\027o\240<)\226\000=\203>\257=s )\2751i\236=\377\'\002>H\271\257<\214\3470=\364D\354<+\335\326\274\252\222\312\275\245\276\022\274\243q^\275\"\3263\275\303\026z\276\326G\003=WA\036\275~\005\002=\001*\377\274nqh=\301\206\345\2749-\220\275\305z\216=\231Y$>\237\247*\275\270\202\256<\033\023\362<\374\211\341\275\000\026}\275)\205x=1\201=>\275\020\332=\220\260\021=\372\310z\275Of\307=\005\205\022=~ I=~\3265>\213\341^=\322o\205=\t\323\031\275\267\226\326<=\317\264=J\275\274<\236\353\n>\305\236\001\275\261xS>/\341T=\276\202\272\273\361/\000>;\270\027\275\263\330\225\275s\300S\275(\242\022>.\3571\273\265\221<\275\343\366\207=\3055\363\275\214\374\205\274\005@n>\226\030\213\274@\017z\274M\347L=\302\021\323<D9\010=\025(9=\000\005E<\202\025P\275\002\347\215\275\372D\234<\241\326e=\002\265\215=\327N.=\307\250\353\274:Z\213=u\246\r\275\227G#\274Gdn\275:\261i>\212g\223=\212\342:\275\220\314\221=\023\317\027\275\021\361\256=a\252\276\274\242\307\017>\302{\367<\325\371\013>\271\006\353\273\200q\217\275\221\177\002\274\254\023\">\334\303@=I\351\366\274\260\277\355\2757\245\210=\343\370\372<1\0102\275\017P#=\310\3724\275\215Ds=\020E\336=yY\014>\254\256\225\274lJ\037=l;\324\274D\264\354=\214\225\365\274\232\315\314\275\305\347B\275\331\t\361=S\2706\2754?Y\275\177\321\310=J\350`\275\316\306\303=b\260l<=O:\274\254\237]<?qf\275L\211\355;L=\'\273\021\266\207\273\301\347M\275\350\375\335\273\224\270\352\272\300Y\215<\247\272/\274t\251\315<\355\232:;\367\207\"<\034\270\306\273\024\361j\276\234\031\350<<5\213\272~\340h<\025\274\245\274\234$^\274\311i\213=\375n\016\274\205\233\n<)\221\327\273r\030\226\276Ej!\274\212\311\215\274n\276\212\273\365F\203\273eW\t=4\031\004\273\205\306\331\275\366HV=f\3531>\207F\n=\260#\366=\372\365\347:et\010\275Q\300\332;\317\242f\274\345\237L\275g>\311<\365\247\317\274yM\261\273\323o\027\276\002<\234;\343/\022\275M\202\026\276\213t\235;\204\374\033\275\234\262\010\276\353\322\254\272\274\237\347\272\244yE\274\253v\321\275g\315\313\272\033\347\270\274\356\274\323<\001\201l\273b\325C;X\0200\274\\\325\254<l\237\217\273\266~\260;)Gf<\177]\004\275J\027X;g(\207\2752\033\202\273\242\317\024\274\006\032\216\273\361\320\003\273\001\324k<\210\234\204\274\264G\t=\324SG;\374\013\320<\272G\304\273\"`q\276\223N\210\274\313\222\307;\322\276\253<\266\035\314<\315\353s\274\244\301\014={Ml\274&\001\005;\340\216\376\273\017\310y=\361j,\275\201\253\216\2744f\223<\205U\231\273$\211\262\274\331\235\r\273\263\245\006=\017*\247<0\350\203<[w.\273\371\034\367\274\312\203\207\273\374H\354<N\273\262\273\352\331\016\273\"\000\251\273V%&\274\345\205;<c\r\'<\202|r=\231m\312\273e\312o\274\2260\033=\374\234\006=j\317>\275\221h\232\274.\315j\274\266\261\316<vQ\203\274p>\n<\257\016\355\273\350\213\211<\217L\226=\364\262\267\274\315\005\351\273[\231\224\273\007E\241<\3500\010\273\275\022\300\275\030`\266\274\372e\223\275G\0374=\030\202\317=\272J\021\275co\276<\005\316\272\274\247\312\236\274pEP=\326\250\032\274j\216\257<\200\351\005=A\357\256=^G9\275R\'.<e|\n>\033P\325<6\235A=\360\260A\275d\024\301\274\220\264a=\3642~\274C\032e=\021\220L\275!\033\017\275\n\031\014=?\324I\275K\300\213\273\252\275\311\274\301\326\277=\037\3626\275\274 V>\005+\231\275\304\251x;~\260\032\2763\223\007<H\345}<\274N\213=\324\321\211<C\225\312\2738\3526\275\337\017\231\275\200\001\236\275\016Q\204\275\370\344?>\330\357\202\275\304\3041>l\201\333\275\324\023{=\364\313`=\t\264\022>VE[\274\367\036f<\0161\343\274A\'\314\275\006i\220<\252:\214=\263\343R>[s\263\274\224\246\016=_4\353<\247\364U\276\006\317D=\177f8>h\265\235\275\352\000\205\275\014|\221=\211%\004>\370\n:\275H\207(>\276g\036\275\274\216v\274\3135\314=\374,:\274\005\025\027=1a==\360\353\317<\361le\275\375l\005>5\200\356<amn=}C\230=\215\007@>\214\376\306\274\3215\r=\013\353 \275C\016\006>\333\245\206\275\336^\026>0\304x=!.Z\275\203\213+=h\214\336\274oc;=\233\312\372\274FP\326=5u$=\227\307M=\241\317\226=\363\214\'=|\236=\274I\337\004>\327.\266\275\356*\007\275g\034\037<\316\2730=\r\371\223=m\332 \276\305\226\204\274\367\230D\275L)\032>n\3639>x\366\364=\200}\321<\213^\263\274\370\354\251\274U\031\332=f\202\032\275\2365\330<\243\222_\275+8D=\374v\n\276\267gs\275\003\037\034=\325\036\250\274\361\221\256=\374\244T\274Nj\245<\r\277X\274\r\276\223\275\305`\312<\301\322 =\234\352c\274 \347\243<\347\326\222\274\241\240\314\273\253z\304<9\300\004<\234\265b;u#\305<\330\370\232<+\023\031\275d\361\221\276\353\350\224=[\255+<\'E\351<\224\017\231<\2364\302;\276\220\263=\357\345}\274\347\025\025=\323\257#\275\037B\215\276\203\365\361;NT\333\274\367\247i;QjS\274\247?G=\270E#\2744\2662\276\270oO;@Y\016>\324\215\254;\241\226!>B\n\346\274H\305\270\274\3446\030=\251\t(\275\022._>\254,\353<\254R\273=\3547$\275\224\322t\276A[\033=IK\253\274{\266\242\276N\232\342<\256V\314=n^!>\035\304 =?\"=>\00106\275#E\234\275L\236\026\275\345C\t>S\257\024\276\310\224\247\274\220\255\341=@\240X\273yx8\276\247\2064\274\350\273\243=i\232~\275\220\322\323\275\334\\\007=\202\3724=@ Z\274BrL<\230\355\261\274|\340\345\273\352AZ\274\335y\025\274x\211\014<2,\014=\345\230g\275#dI\275\357E\257\276;\024\032\275\366j\345<\260\216\n=\336{\333={\024K<>]\004=w`\327\274\201\003\027\275\177\347C\275DZ\273=3\352\245\275\300\002\007\275\326\037\322<\215,L\274-\311y\274E\347\310\273[j\253=\374\2572<\302\232\336<\247[\253\275(\366o=\331\035I\274\355H\205={\033\241\274\237e\335\273\214\205\322\273\211\233\020=\212X\343<\322\017\302\274\357\310\t>Ml%\275\273A\361;\255\014\313=\320S\305<%[\266;\260\252l\275\031\035\212<\314j\375<K\365\361\274]\241\'=k\317(\275<\313\210<\305\353\244\275 \304\025\275\357e\035=\356\257d\274\314\223M=\373]\356\273\331\262\236\275\004\336\341<\t\306\355=F\332\217<\020\233k=Ie\031\274\331\347\341=\r\243b\274k\347\263\273b\037\006=\237\030\022\272\343\201\005=\376q-<d\002\347;\316\365\223\274\211Z\016>Q@-=\367u\266;\347X\332<\267 \372\274\346\315\365\274wB$\276j=\205\274\277\260\242<\025m\272\274\247\372\336>\212\213\013;}\367\023\275X\000\020=\030 \350\273\275N,\272,Q\005\274\323\3019\273\334S\275\275w\322\177\276\226$|=r\313\330\275\251\307\263;\251\244f\276ck6\274\221t\004<\243Z\353\275)Eh=!d\004\275F\362\242\274u\326\335=\244\201\263\274Gq.\276\031\356\206>\266;\232<\214\263$\274\262C*\276E\2374\274\304\274\344=\255\230\210<kJ\202\274\212\314\351<\331O\032>\316\262/\275\227(=\273jm\211<\220>Y=\312\255\340\275\254\252~\273\202\303\327<\256\231\352;\264m\351=\025]\240<JdG=\003\213\033\274`\303\014>\355O(\274%\021\300\273\002\007H=`\242M\274\261\317)=\341PG<\267n\206=\312{\233\274r5x>k%G=\371t\263<\326\362B=\215\035\270<\360\277&\275\323\004;<\000+\314\274\004\003\243=q\245\347\274\274\267\247\274I=\325=\222\005\033\275O\314P=\\\374\306\273\023\362\256:\242\325\373\273\271\350n=mX\302<\357=\016>p\t\246=\007\002u<\212\267\366\273\201\235\246=\272\367\241\273>\202\357\273\251C9=\236\"\\;\303\244\204=\333\t\242;\376\361p=\021S\234\274\221\324\327=\031\321;=$]\350\273\023,\221=\366\276B;\315\314\030\275\313\254Y=\230\357\321\274\247\031\326=\221\316\310\274\024\3210=\241`$\275\207\376;\275\234G\245:\"\323\362\272\016&\365<\245@\356\273n\022w\273\031\357\033<\323\267\353;\376\254\3128\037d\260<b\315\321\267\211V5\274\243\236\200\2722io\270%Jk\273\323\360`\274\342\201|\273zQ7\271\013_\225;~\244,\272\013\200\255;\320\333P:\371\252\"9\217\336\302\272\302\252j:\374\335\003;\257\3704\274\036\340f\273\025\210L<\311\255u\272\211O\013\275\342zE\271\220H\234\271\247_\014;\205\345\207\272\275<\203;\313\322\005\273\264\310\033\273\254\tg<\320>\315\274\301\021_\271!&\202<v p;\201\034\227<\304\202]\274\303k\016\274\205\351s\274\225\241\004=\241\313\010\273\337\326\201\270i\260B\274mSl\274\022\265<>\331%\256=/4\312:\251)\001\274\224\001\006<*\274\206\2744\037N;\227\226\203\274\002\342\020\275j\277\226:y`\204=8\212\235:\001&+<_\202s\274bv\330:\272\017T;(\312\276;g6\030:\377\"\023<\255y\250<\037^\3179\306q\272<!R\263\270\3160^\271\373\361!\272\327\337\257\270\252\220\366<]6\206\274\277\316Z\2733Y\210:\010\253\027\274\334E=:\376\177\246=\216\021\002\275\315x\027\272\275\016\213:6a\000;\3632L;,\337\300\274\225\322\375\272\032p\335<\316\314j\272\"\366\000\275?5\303:\017\311\020;\241`x;\354\203C\272HPD\272\252\306\371\272\000K\363\272{\'R<1\353m<\305\237\331<\304\026\320<\036\017\025\270\234\032\3319\244\257\201\272k\264\344\270\035\262\224<\350\253\017\274\337\364\216;y\263\214\274l\362\373;\3106\036\2702eG<\330\305\252<\204Z:\273\001\222\345\273\313\3605<|\2369;l\260=\2747\033\247\272\373h\016=\010K\230\272\221\327+\2742/\331;\3040\352:\204\371\264\273\267\307\223\272\270\036$<\315},\273\254\237\213\275\243E\213=-T\210=,\372!=m\247V=\234\006:\275\206&\355=\335\212\263\275\2444\221\274\021\336\222=\324\035\250\274\206!\016=\374K\303<\231\002\256=\023\036\003\275d\205\346<t\216\010>\252\003\204<\303 \037=\336\036c\274\347,\004\275\267\3005<\276\231\277\274\356\004\250=\227\327\027\275: \"\276\260\221\r=AaC\275$\256J;\204\370X\275\035u\005=X\203\321\274\324\267-\276!\376\275;Z\005\314=\240\262:>x\r%\274{\251w\272v@K>>X\350\274b2\205\275\353C`:\021\226\014\275\030 .\276\274\327M\275\210xd\275\271\3278<H\031\307\275\317D\222=\212Y,=LR\354\275\273 !>}j\360\274\265&\007\275\314\250f=\301W\251=\331b\004\275):s=]\245\261\275ER\217<\231\233t\275\235\203o<\330\217\016>\332\334\201<\252\220\237<\030R5=\202\024D\275\351\271_=\233h\373<\342\263\276\274\352\272\257=*\377\016\275\205\235h\274\005\230j\275\336\2531\275J\337l=\035\204\005=\322\252\013>\202\264\034\275\242\276\017\276\264/\021\273\332\352A=\227&r=\245\037\021>@-\026\275\014\300I=\376Q\034\275B\210\245<\203[J\275z\311a>\213\2443\275z\014W\275\375\344]=T\212\'\275\315\303\231=\372\206\261\2746\270&>\014\301\257==L\200=n\343E<\2374_=\304AQ\275\313\177\357=W\036U\273\364\017\020\275\327I\353\274\236\370-<9va=\310B\243\275\200 \372\274N,\n\275\243\331\320=\364\315\356=\315\027\222\274#)\021=\350\207\027\275\311P\010\275\t\375\230=\350\257\007\275a\212\275=\025\227%\275\005I^=e\224\275\274\263\340x\275m\240\340<3\271p\275!\276J=\260\274\340\274\030\230\022\2766\304\026\273\000g\343=\356\332\310<uh\230<;\021\351\274=\000\321\275\226HE\275\343\n\035\274\326\354!=^$\205\273\263\246\207<\310\302\243<\222^O=\352\340\347\274\302\317{\2757\230\245=\233\2048<-o\036=\013D\022\275\020#\304\274\221\333\234\273\307\214\317\274A\305\234\274\264i\373\274J@\322=\334c\276<!\024\031\275\346,\253<\310t.\274\221\326\245:\235$\257\272\375\324\324\274\212\245u\274#\242D\276\221\001\250=\212\322\254\2756y\330\2746\262#\276\300\002\376\273\357\200\307<\377\234\014\276 u\347=\231\237\254\274^U\032\275o\010\326\275\273Y\030=\321^$\275\322U$\275\202\013\005=(F\177\275\331(\202\275=\222\024=\352\0139=\345P\262\274\304\220\374\274IS\246\274g!C\275\311\365D\276\377\370x\274\375\223\306\275\315#\t={\r\205\275Y\023;\275\3376\311\273%\"\213=\347\312\003>\213\013\000=v/\017\275\001\312Q\274\375v\017\275\024>\311\274\225\3451\274\367\231\"=\334\203\306\274\010+\313<_|\336<#+\243<)n\014\275\\\217\232\275\232\331\242<\343\262\005=\244 j=\177\226\247=\221\317\362\274\031\203\323<\331\257\002\275\257\237\244\273\364>)\275\231\224\270=*\216\351\271\005@%\275\177\177i=\000\267\004\272k\274\026\275\303 1\274\264\274\225=\361~\277<q\2473>\026\331\314=\376q\266<\005\262\016\275\220\377\355=\352\037a\275\342\235\260\273\2038\332=G\342{<\002\343\333=\205\r\204=h\243\226=\005\256\371\274\375\357\300=?I\317= Av=#\346u\275\240L\022<\267\314\324\274Ft\253=\313\367\000\275\373{\322<\031\212\013\275+Z\350=JN\305=~wA\275\004\340\262\275\262\352\013;S\274t=\317\000\002\274\365\354R\275\262P\030=X2\373<\323B\026=6\203!=\217\221L\274\344\352\245\275-\266\245\275SSj\274\246\t6=\2062\273<\364\365\210<\'5\005=\260\356\275=\336\2010\275\347Z\007>\2161\003>\231\230\303<!\234<=2\'\306\274\246_\274\274r\201\021<\303\377\016\275W\017d\275\222\242;\275k\t8\276\347\211\013=\265c-\275\303\020\217<\213\247$\275\216\235\215=U\224\022\275\371-\273\273\nE\350=\271qC\275\212z\022\2751u\265\275=\331[;\200\232\255=\210\263\312\274\244\327\251;\344\237\272=\334\241\027=\365\234\375\273j\373\201\275\203Ot\275\243\377k\2752M\032>\302[\201=;\370a=\267\021\204\275<V\263=\206j\331\274\177\347]=$\207k<(\315\346=\304N\000<\331o\342\274N\262\200\275\255\311\206\274\300*;=\255\274l\274<\316\311\275op\316\274\364\013:>T\355\030\275\006Z\023>\247cf=F9\227<s\210\t\275\253\211\233=\0268\023\275\213\t\260\274\276C\226=\372\"\r<\261\301\320<\036\013A=\206\017\241\274\203SZ\275\210\375\374\275:0\255=*Qc=\344\016\225=\211\347\364=\304\214\306\274?\357b=@u\031\275\215\217Y=\325)w\275\014\313_>\275YF\275\nA?\275\002\220\262=M\302q\2741~\215=\233\246\264\274\2528\017>\'\205Q<\364q\2119\227\212\202=\177\360\356=\212\364\200\275\234\215\257=\346\367\360\274:\250-\275\212\351\272;\004_\177=\331\0356=\254Q\324\275\376\033\265=;\300<\275\\\021\244=\242\212\021>\225B\276=\031\235\030=\203\256\324\273\242\024\255\274\362\n\267=\372P\n\275VX\n=$\007M\275W\332\374=\037\306\177=\030\327Y\275\202a\241=\216\'-\274\223r\314=m\022\235\272Y\2768\276h\2242=o\362\227\275 \352\257<_\025\022=\032\344\200\274\354\016\024\274\375?\210\274\375u\333\273\336t\025=\237\202\343\273P0\210<6OT<\224\302\010=z\265\270\274\334\303#=\246\364z=\035\037\007<\377B\351<Q\014`\275\321\024\264\274b7\267<\304ax\274\372\206\371<\210/\324\274\023\202|:\3144\000<\307\206\t\275\021D\273;r\237j\274\243\251\303<\241\r.\274So\202= \2109:\326\353\336=\006B\226;+u\312\275\303\035z<\000\"\000>\2474\236:O\325\326\274\211\263/\276(\372\336\275o\212D\275\3476\313\274I\345\226=\211\033\023;\"n\016\276\376-0>\374\315\275<\205o\323<l\252$>\003\234\320;V\027:\276vU\204\274]\242\201\275Q\342O9\262\255\257=K\314b=\267\225\245\274\022p\334\2757\237\343\274\301\037\031<\315\355\210<T\3001=\367\023\203=\244\206\">\314\363\271<o=\200<\215\0217\274\323M\351=P\302\214\274\3057\367\273\246\\L=z\220\223\274IC\234</cw<Z\000\236=\323\r\342\274J\327\n>\2450I=R\311\320<\375r.=\374\200/=s\221\322\274\373\3319=Gy\321\274\026\276\373=Q\247\030\275NC\231=\341\3435=\rb\020\275|\034\007=\213yw\274\256\313\005=\303\245\'\274\344\353^=\375Ii=6\305-=Q\004\245=\351\016\373<\345K\244\274\\b%=m.\006\275\"\001\016\274\265Kw=.%\004<\026\031\037=}0\006\274T\215g\274_\326\305\274\352\235\223=\234\352\233=\007\300\230=X\207&=\376\254\004=+D\275\274s\204<=\252\025\331\274\n\336/=r+\355\274*FY=\177J\201=\324C-\275\005\360\327\275\277\003X\274\216\256\256<f\242U\274\331\2010=\314\327\";\376:\033=P\206\211:E\343\212\274\232N\005\272\026vX=\321\300\217\272\337\003h\272ZH\000=@\271c<\264\315[<\312Hf:2\272\251;\273\231\020\273\310/E=\320w\330\273\344\373\0168\334\006\352:\367TK\274\243\010#;.\001\271\271\327\370$\273\014^\250:\355@\254\273\005\350\370\274\256%\230\274\232\372\2218\340\366M=\225|U\272\374co<\201B#;@/\023\276\001\267\356\274]\347\214\275~_\000<X\265\004\275\350\301\350:\277\204j\273^5\246\273\265vc\274\233\342\234\274\347\370\003=\352\370\215;\334\005\030;8\201\023\275\300f\331;Q~\357=\23404;\237\356\3629m\264\002=Yd\237\274\311\317\305:1|\026=\232|[\273\030\016T\275\342\213\000\274\374U\310=\036\006\204\275tF\211:1\007g=F\013\036;\346\360\352\274\2732\311\274\327\2701\273a\"\024\273\263\337\221;\217\021r;\010r=\275\256X\013\272\325_\265<h\207\336\271\302\017\'\272C/\014<3\243\221<\340\233L\272\214\032%\271\273c.=d\347\332\272D42=mn\000\275x\0043;\257\304\252<$\2342\274B\013\003:\222m\030\275\350\030\r8\361-5\274\342\337\243\273S\347\236\274]\031\032\275,\255\007;\371l-=\007D\222\272\365J!=!+,;>\225N<\347?r<\240f\330<\022\310|<\316\227M\275\233-\355\271{&\207<\216\030\266\272\275\3665\272T]\206\273DJ\202<~\013=\274\267\302\t<\225e\221<w\361\004\273\343\235\301<\335H\275\273\251\315\243\273=\3622\274\245^\362\274\023)\025;&\341J\273\212\326{\272\002\273\177\273\307\312\t\273-U\325<d\025\023\272\3726&;*(\211=\r*\247\272\030\345\262<\366\263#;\023\334\030\276\245\2446<\321\203$>\037$\347<\3773\343=\003\004\376\274\035\030\254\275\3666\213\275\253\2435\274v/\222=\307\372\206\274\275\336b<\234\026\266<\257\301-=(@\004\275\032\231\227\275\247\021\301=B\027\200<K$\032=\252\220C\275]+\305\274\362\202\003\275\355\257\261\274\361xr<Z^\016\275\207\260t>\273<\305<\256\000\037\275\356R*<K=\251\274\013\006\007=v\033\306\274\302\275\307\274\270\021\366\275\225r<\276^-\342=\236k\000>\353\210\223\273$\215\333\275\312\255G<\262\356\032\275\\\312\360\274\332(w=\367\305\010\275\265;,\275\321\025\320=e\3720\274 \255\351;\330\321\237\275t\327\"=!,;\275\205\007H\273\273\313\331<\211\017\263\275\320\231\032=`tF\276b\331\226<\244\001\312=\323\326U>\202-\333<\240\234!=\252B\002\275+8\010>\340\311\271<\331\306\322=\203\344\325<\034\341\033>\340Z\030=i\022\310=\343\277\226\274u$\261=\325\350?\274n\276%\274\354\351\331;9R\366\274\031\'\274<\236\350\363<\031\306\217\275\300Q#\275\037\256E>1\261\251=\2442 =m\014`=\261\371\346=\321\365\337\274\360o\320<\013U\005\275\232\033\316=ouC\275\370\031\016>\351\205\226=\321\210.\275\316\024\304<\244\231\224\273\345Lb=5\261\234\274\361\302\342=,Co=\001\202\260=\013\017\203<\263\321\242=5\360u\274\346N\212=\231\250\257;nZ\000\274\032\246\355=\\\331\205<\"u\321=\3350\301\275v\330\234=\271`\r\275\260\304/>\347n\004>\2309\021>\030\257\201;\252\031\203\274\256\237\306\274.\031\234=b\340\375\274I\253\237=\212\327\035\275\244\363\005>\341\226P\275\340IH\275\210\307\315;a\376\257\274>\021\230=\016\352\t\275\311\030\t>(di\274>\t\313=2\230\225<\271X\261<\250\234Q\274\002b>\273\350E\254:\343\315\254\273\231\203\313<^s\214:\314Co<t;%<\371\020\211<}C\216\274 \237\317\275\313\322O=d\347!;\010{\235<\027`i\273\324\207c\274J*\335\2744\\+\274\2415\326;F\352\246\274\346\231X\276\r\376C\272\3521\251\274\247\364\227<\301\221G\274*\n==\016\013\205\273?\006(\276\026\322\232=\362mn\273\343\272\331;3p\301<}\007\335\273J\231q=\372\324R<\024,l\274\211\366!>\025!K=\332\301\271\275\331\027\235\274\375{\322=\206\033\215:\337}\213\275\240\321\001>\324xT<\277\251l\2752\005\243=I5%<R7\225=b\027\245\273\273\302\006>\005t\366\273\t\241\353=M\3715=\220>.\273\236\370I=rM-\274\255\n\"\274\220\272q:<`E<]\340v<\031\377\263\275\202\375\240<>H\027\275\227w,\274\245[F=O\252\364\273\361\372\302\273NR#=\224\326E\274\331\275\252<0iF<Q\324&<Hx\263\274\233`=\275\026\034\317\274u7\222<\237\022\341<\003\206}=\305J\201\274=R\307< \202\225\274\335W\004\275\305\032\346\274\317\264\305=ZN/\275R\331\331\274\201\377\035=q$E\274\344\2653=\022Z\251\273\306K\203=\275\372\302<P\330\010\274\203\266q=\036\276\031\274\261Z!\274\241Au=\031?\'\274@9\266\273\333\266v\275O=\t<\330D\226<\354e\000\275Bgs<=\255\231\274L?\016=\325L\212=\302\220\247\274\363\200\310\274 \235\003\274\020\353j\274\230%3=\021Z\225\274@\327\035\275G\252\271\274\272\300\201=\035\301\237\272\023\276\010\275\3709\027=\236\206P\274Djl=\376\210\267\273\320\"9=\023\360\322;\247\273F\275 \006\250;\377\325\265\274+\273\243\272\274\340Z=\240e|:Tf\331\272\227]f<hUY<\315\026\261<\020\204\311\270\347\344V=\320\272B\273\316\376\016;c\363h\273\031\014\177\272\311 3;\365A\311\274\200|\'\273iH\207\273c\330w\273\374\356\273;\236\331\254\273Q!\001\2756\024[\274\021\351+\273\n\036-=R\266\3127n*o:N\026\244;\306\245[\276&\302j\275o\265\034\274m&\234<d\346\276\275\3078+<_\200k=\240\003\274\274\"g\306\274\026\235\206\275JF^=\242\222\022\275\034\355\251\271\277\3170\276\261\231\346\273\371W\014>\002\016\244\273\237\224\t\272\217h\211\275x\023\302\273\366F\002\274n,\216\274\260S\032\274\314\211\'\274\211\025`;5>\262\275\214\002)\276d\n\230;\363r\037=;h9;Ux8\275\204\255\332\274o\214\251:`X0<K.\310\274\225\206\014<\244\311\273\275m\321\302\272i\035\004=\206\\l9\rI\221\272jO\314:\251/\247;jj\037=0\001c8\024\220\342=6Q\325\272\363\330\200<\201q\254\274X\305\342:\024;\017=\217\375f\2740\257\371:wS\031\275r\271f\273\225e#<\243an\273\254:\255\274xA+\275\000,\270\271\232\214\036=\350\264\262\270\004\204\221<\256h\236;\264\005+\272\335\200I<\312u\350<<H6<\327\347E\275AY\204\272\207\327\340<\"v\020:U\240\233\2725\207\264\273G\016~;\260X|<\266f\377\273\307\230\206=b`9\273\232\361\221<<\335%\274\3343\263\273\365\242\027\274\250ma\274A\036\016\272\375\300S:K\346\233\273\263\220\353;Jt\250\273J\256\244;.7\265;B\002]:Je\'=\026\227\356\271\234\251R=\2040\210;\177\361\007\276\031\330h=\036\253n\275\373Z\025<f9#<]\217\331\273}\242\301\274~\243\353\273\276\325M\273\357\rm<\343S%\274\005B\265<\345\376\264;\177\200\005<u\034s\274\303h,\274h-\376<\034\037.;\016\375u<7\371z\275\206\324\364\274n\235\013\275\321\177`\274\274su=\366\250\222\274$\326\210=$=\234:x\264\345\274\317\270\035:YR\361\273]\306\224<\242\261\253\273\237\\\332=\255\371\264\274y\325\013>\236\217O<\306\nd\276\224\217\227<z\"\243\275\337\302\221:\'\241\253\273\374G0\275\323-p\275\244\253}\274\014\034?\274$/?>|\007\374\273W\332\225\2765\\k>\203\374\031<\377\305\021\2754\222\025\276&X#\274~\210\255\275\357\331\n<5I\253\274\350:\275\272\212\252\354<\303\204\373=\022\016\264\273\356:\223\275\313*\233\272\270\t\237\275KP\260;*\002z<\341\332i=\347\243\307=\'\240\353;\254\023\232\2754\357\336\273\272\236\002\275\177P\313\273\316\203i\273\\a\025=\320.-\274\232d\323<\371z\261;,\021\323=\202\342k\274\376aQ=\203H\323<\306\222R<i\207\335<\366\014d\274p\247\026\275\303M\365<\023\316\265\274\237j\341=\312\021\262\274\375,\264\274\370\210\223<\030\335\353\274(\327\013=\004\013\334\273h\";\275U\253\230\273+F\316<\213\367L=\210i\204=\276x/=R\013\005\274\357\324\316\273\013\354u<6\336\020\274\357\226^\273\021ES=\340\332\007\273\237\377\210<]\220\206\274\021]Y\273.\315{\274l\372`=}\033\335<\007G#=\201\266G;K\322\205<\312\374\020\275\310\225(=3\365\301\274#^\241=\224\337\235\274\267\336R=\031\257\250<\001\323\023\275\227\010\000\275\032\212\341\273v\275\232<\352\267\227\273\232\016g\276d5P\275\267\216\245=$\375\020=k\350\356=L\340%\275\304\211\327\275\253E\374\274\230\347\211\274\350\276\332=(M\033\275\345\337\354<\035\373\272<\200/\246=\247K\001\275\216G\312<\332\202\003>\261\300\233<\024\020\034=3\214\243\275\024\363\363\274>\375Z>i\233F\275\363\227X\274\247j\014\275\036\007\204\275\304\366)=\211\2268\275\177\3400\274\373?J\275\331\177P=\341\203m\274\204\266\004>*6\272=\237:\007\275h1\315=Tc!=o\245\346;Ev\203\275\231F3\274N\240~=\270\220\252\275\251\334\021\276\244\301\373\275u\nD\275\342aV\275g\210\037=\333\272\021>\026??=,\3429=\265\346\261\275\335\231F>OP\237\274\241\262a\276 L\265\274m\271\355=4\243\023\275\032m\356\275\231X\276=\235\365\207\274Tj\270\273-z\251\274\347\242\202=~\0056=\355E\366<\\\326\232=Gxn\275\303\351Z=\314\225*>s\014\032\275P\213\375=\225\016\226\2756\262\325\274\241\363\332=\335\027i\275\343XD=\366\254\000=\242\300\247\275t&\035\275sD\260=\375\037\005=u\3529=\236-p=F\277\204=\233\225\006\275\367\243\364=\037\272\024\275\255\277\250=0=:\275e\306?=\203\356\210<\362%H\275\305\235\302<d\234Q\275ap\316<T\354&\2759\300\365=\036\365\322=\021$4\274\344k\217=\344c\376<G=];\227\206\333=n\307\322\275{\275\244\274`g\227=\372\200\365\272\224]\364=m\026\206\274\271\261\240;=\217\010\275\031\312\356=#\350$>v~\334=xTU;\373Gg;\2731\365\274\'\234K=5\351\014\275E\372\245=\211\311\032\275S\216{<\312\241)\276\177\035e\275\3540\222\275\347\006G\275*3\255=:.\257\274\305\351U\273\243\"\023=\246\t\376;\035\tM<\030W\022=n\230\303\273\\\360\336\274\320n\213\274C\364[\272\032\377\r;\200\031\300<\317\372\276\274\252\203\222<\313\342\312<\256\3523\275\307\225\264=\377\034\217<[GK<!\305\267<\376[\275\274\364\030\034=\372\223\347<qr\007\274GG\225\274\330\3154\275\366\334\t>\220\026\324;#\263\305;\r)\013=.\237\211\273uzG\274\203a4;{\367=\275\330|\002>8Qc\276\255e1\276 Tf\276\275\374\037\275\214q\351>\237H\323;\341\335\202<\247\223\210\276\344\273\214;?\253\327<8\013\033\275\000\205S>\227Jj=\021gC>v\302\212\276\340\270\306<\367\261\004>\377\376\354>\031\026\212=8\3068\275\321\213\277<&\236D\276\r`Z\275tm\314:^\376<\276&\240L\275\214\025\350\274gD\263;\241\226$\274\003#\346\274%\207\217<\217\020V=`\271\232<\277\007\273<\'^\277=@j\312\273F9\255=\'\025\245\274\204\206\332\271\002\376\031\275\007\321\000=\254\332\325\274$\260\005=az\236<E\347b\275\302\272\005>\264=\010=k\240\241<;\362\356<\372\t\014=\237\010;=]\316H;]\324V\274\302\177\372;n\234V\275r\327\212<\314j#;\211:\265;\306\344\017=\312#;\273C\325\352<\227}Y;9\277\t=^\200E=-\364(={1\207=\"Z\376=\373\"\211\273\224\004x\274\264\355\221\274Q\210\202\2723\236`\274L\261A=)\335\275;\304b\2129\323\037\032<n\254A\275C\306\250=\276x\371;\337\003\232=\0050\243;?\243z\2747\356g=5e\305\274\260&2\274\350\001v\273\214\264<\275\302\255\211=#`\205\275cz(<\205J\365<\201\203\200\273\230\257\373\272\371\352\027;i_\332<w\333!=\333\312C=N\272\014<\334U\356<\351h\372\271\226\221\375;\024\371\204\274F\235\207;G\351\016<V@\217<\251=\302\274\206wA<\350\231\001<\275\034\021\275\030\035\323\273\226W\023<\346\327\305;]T\200<\005\241b\273\204%D=o\243)=q\360\341\272A\231p\274\365\356\003\275\316.\215\274\331G\250;\342\252\237<&\326`<\034\324\026\272\256\211\227\273\273\2352;\336\334\367\274\230\370\036=\247Jx\276b\331\013\276i0\312=\361\'\201\275fNi;\005\330\252<\347\030\006=_\204\226\273\357\033J=\366\036Q=\025\306\n\275\234B*>\374J\231=_>\027\275\001\246x\276\010\020M<\211\2270>\206\330\205>\224\205\241=o\365\200>\234$I=\270\363\250\275K\225N\275UR\213\274\220\312l\276\002D\222\275\312&e\274\261\225+<\214\247\234:~\3071\275\330kP\273\373\265c=4g\364<\344z9<\224\r2=\264|\24792^\'=\377\300\223\274\372\320\254;\364\001\277\272\212\360\274<\310i\353\274i\325\345<\0024\347\27435B\275\216\210\334\272\250\251\305<\224W3<\021(\203<\354\214\250<;\202e=M \177=X\016j\273Q\260+\274D-\037\275p*\010<\315!\021\273\315\370\207<\341_K\272\247\001\2019X\031\020<\223]h;w\022\026=\364\206]=\010\342\"=L\0105<\254\342K=\247\026\222\272c(\271\274\202\246\210\274\334\352\000:\336[\204:^\347\034=\233u\230\273\363\306]=X\033\232<\271e\037\275\360\275\035=E\235\377\273\031\326\001=h\231A\274\371\330\023\275\335\375\204=&6\254\274\217\276\227;\255\336\316\272;\013\002\275\2741\010=\250\2127\275\324L\271<N\236\243<\020\360\t\272\005-\227\274\277\264_;\212\326\311\273\255\323\025\274:\251\237\275\274\027\352<\226\334\224=U7\200\274r`\n>\250\250<\275Qp\035\274\214,$= H\212\272\332\272\246<\030\323\220<\240\261\354<\320l\333\274\005\026i\275(\215\247=>\207\033<l\357\365<W\266\225\274\207%\302\274\301e \276\002h\273\274\332\205h=\254\224\004\275\207\230w=b\205!<ye\024\275T\236\210<\334%\210\274\033C\231=\365\305@\274\334\016\300\275~\372\r=\275\330\310=^ef<\334H\013\275\263\021\213<\001<H>\347\253\205<\007X\217=\233\300\017>\373\245\237\275\346R\375\274\255)\013\275\363\201\354=\2305\231\274\204L\206\276\267\"\376<!\002\350<\037\372\374\274\274\n\010=?`\341<\016\274\303=\354\032\207=g\016 \276Q{\334;<\341\361\275\023\002\355=1S\250\274Ciu\2748\255\020<v~\346\275k\023\311<\314z\005>$B\362\274\007\237E\275\021>\006=\351\005\227<\031\306]\274h\271\223=n/\251\274k\2520\274\357{\027=\262\206T\274\375\304\373<\377\335\257<3T\342<\2036\005\275>\030^>,][=\216\326\n=\036\3619=\225\032\235=C=\346\274\340\327B=\301\334\331\274\240\273\266=W\3739\275\020\010\317=M\032\276<\360\244+\275\323\232;=\t\335\210\274\262\305\316\273\304\220r\274i\341\260=\244\013\036=\"\217\232\272\225\300\217\273\355,\216<\245\003k\274~9\217=\263\303\360\2749\245\220\274\355D0\274\211{\223<\357^\234=\3134S=i\255\367\274\276\376\351\274\357\004!>\302\300\246=\003\354\330=\3415\211<8\306\243<\210\250\316\274\321[\300=\307?\316\274,hY\274k%\022\275\233\366\222=\354\351+\275\017%L\275\277f\210\275n\231\021\274d\300\010=xVu\274\024k\016;F/\247=\206X[=d\351\027=\261\325\257=e2\336\274\026\304\326<\321\tm\275\353J\270\274a\246t=\246\206\331\2746\203\343<v\324\325<\260$\235=\254*\016\275Mu+\276\023\025\371=^,\227< \264-=\004\024\021\275nR\016\275\344d\'\274Vj\351\274b1d;\366+\034\275\016u\035\276\206dN=\257\022H\2750\254\"<\021\232\'\274\312\366\211=Q\356W\275<x\273=9&\340\275n?\335<M\231\205;\037e\000>\225\301\372;l)F\276\037\022\341<\016\277V\275\207\010!\275\257*\206=A\212\355\274LlY\275>\337\001;\024CL=\251\341\242==_\277\275\304;D=3f=\275\236\272.\276\340\210\200\274@\337-\2753\352\022=\250qQ\275IH\264<\036\0045\276\227\312)>\202G\314\274t\267\305\275\336\004_=\354\023E\275[\355\340\274\306\235\263=f\304%\275Z\023\026\275K\rW=Bhp\273 \344Z\274\336\363\222;\373\252W\275\370\334\234\274u\345\035;isH\275\301\0268=\311\361\027=\003\3274=\251\204)\275\352z\364\272k\246L\275\267VD=\210A\204=\375\324\023>\014#$\275\260\200\007>\357\221\036\275\005\304\027=\027\303O\275T;]=\257\346\223=z\"W\275\253\375q=\252\026\316\274\374p\300\275Y!\267\274:X->\205F\306=\325\300\314==\375\277=\221\353W=\027\377@\275kH/>\254\353|\275\364!\262\274\241\034$\275f\325\030< \342\346=\373bX\275\006D\205=\222\240\026\275\316\266\340=a]\022>\311\201\010>\0354\005\276 \024\327:jj\024\275F\232\013> \327\021\275Y)#>\363F+\275!\017%>\217\360\034>gVv\275\020y\033\275\235\347\267\273\264\177\266=o[\201\275J\333\214\275\322\236b=mp\225\275oi\305<4\\\354<_\201\267\274\361/\321\275\227\025\263\274\327\222\021\274$\006\005=\273\204\250\274\236\254\004=\2678G<\310\350-={;\225\274\320\301.\276\350\325\246=\316\307\311;9D\336<[k1\275u+\332\274\263\265\236=\230\243\264\274e6d<L\027\303\274\365$%\276$_n<\262\343 \275H\330\253:\243\017\234\274\321!N=\231\331\224\274\343\211\021\274\017\335\223=8\272O>tk\002>\226\tJ=\305\374\220<\374T\242=\376\317\220<\277}\261<8@R=/#.\274\344\376\235\274\212\253\312\274\337#\244=\242\340\220\274\277(W\275\007\031\020=K\303\262<\363m\324\274\240\351\203\275\353\254H\273\026\265\251\275\336\022\"=\330E\330;w\342\026<\233\212\034\276\036\206\303<\005K\306\274\357\006\301\2750\250N\275\212wj=B\202c<\310\005\200=5[\200=n\303\017=oK\301<vr\327\274\371\200]\274P\376\257\275P\022\343\274\305\300\"\274\360\247\013<;\207.\275\223\2308=u}d<\030\033\325<\330\302\253\274I\342\251\274\\\356!\275\306\'\320<\251\025!=\260>\253=\314M\374\274J\301\242<\343$\372\274^\376-=\372\023\000\275\020m\010>\332\267\260:a\236)\275O\267\024=(Z\261\274\253J\323\274\237\2248\2741\303\243=|\315^=*v\243=\227\216\207\274\267\230&=\034:\274\273\244:\251=\267\221\t\275;e\355\273\302\264T=<\343I\274\371\273\220=\222>*<\021\267\027>;#\234\274k\362#=\242~\334=\376\236\304=\336>\251\275f\221\035=\313\240\347\274\247C\327=}\270\376\274\325~\241<U\365\326\274\025\004\346=\021\346-;)\224K\275\212\227\201\275\242\356\331\274\364\021u=wN\213\274\220p.>\"x\262<\233\343\035>[-\233<\230\216\301<]\321\353\273\260\251\215;*\343\217\273\265\005\242\273\2565\002=\262Y\222<\203Y\006;\r\264Z<8\203\344<|\200\324\274\032\235=>\255A\347<\265\371\262;\217\215\002=f\236\006\275\250\276\264\274X\327\267\275\377{3\274i`.\275w\313\341\274\262\3303=G@j\273\264\022\277\274T\225Y=\030\005\223\273\333S\200;\370}\"\273\024CL\274\347D\274\273\370\0354\276\255\246<\275\031\220\023\276\372#\014; ,\257=9y\214\274\314\245\227\272|\246)\276y\343)=\323\215,<t}\302\274\321\023\022>V&4:\366\234\023>6!n>\3144\226<~\006\227=\"\276\340\275z:7\273A$\021>s\364\247\274\223s\306\273m~;;\243\253\020>\344\250E=\037\236\370;b\010X=\316--=0\201\274\275\260\277\231\274ESa=\324q\351<a9m=\326W\310<\300:\242\274\354\002\373\273\325\177q\275\3376\221\273c\227\247\273\352\374C=\n\330e<\315\"\013;\3332\220<T5\342<\3364\376\274\036\214]>e\227/= \204\260<)\rI=\010!\240<\222\027\342\2745\370G<\237\275\252\274E\331j\273a\255\032\2753\016\306=\301UC=\326\356\343\274\002}^=E\034\027\273\016\354\210=\002>X\273\370B\210=\215\255\362<\320>{=\344i\236=r\237\341\273\235\327\253\273XeW=\022\230<\273\327]\243\273\234u\326\274\374\003\002=An\021=9\374\352\274\3760B=U\354\345\2744\275\253=\rH\003=\215\315o=?;\247=\234\344\200\274{^\323\2742\254\014=\274\246\262\274\245NA<R\212\370\274A\230\235=\377\213d=\363\254\014\275\367r\334;S\316\223\273J\320\344<|\357\226\273\305*\240=>\342><kG\007\275Y\323\323;\307\360\266\274\240\365*\273\004\222\316=\032F\332\271a\026\t\273\202\303\204<WB\207<,\030\321<`\200\256\267\244\261\236<|\006\004\274\364\004\275=\277\316\016\273\245\243\341\272/D\017<\263\033\202<3\0047\274%\253[\275`\226\246\273\2626\245\273\346\347\301\273\310\327&\276\005\376\324\274_\334\030\274|\370n=\3751\351\272hK\255<\014\004.;H\324\322\276\001\300j\274\222\265\'<\341\253\262<\236\315\336\275\022\252,<Z\331\375\274+\3026\274\301\037\231\274A\274[\275\244\206l=\351\242L\274\n*\273\271\362\353\333\275KH)\274\360\234\337\273\377U\274=\225\240\313\272L&\370\274\256Us\276\374\274\202\274\317\326u\275E\003!\274\0227\320<\202\032\210:\200z\030\276\225\'d\276\001\366\340;\332 >=Y\334\250;S_\364\274*\322\263\274\301\356\t\2748h\365;?\267\026\274\2164\032<\223\177\275\275b\320>\273\026\026\264<\211L<\272\204E\355\272\261\203\274\273\243y\267<\351h\023=j\2722\271U\224\333=\266\215\260\273\232\202\265=\354f\343\274\000/\026;\227\255\356<\343\026\272\274\364K!\274\250\235^\275\264V\351\273\233Q:<\026\320}\273t\323\341\274xS`\275\310%\371\273\326\375\203=\377\017\347\272\233\313\363<%\273h;\230\037\204<\010\305\257<\331O\255;\271\213\240<\333HZ\2753\362\367\272\027\214\024=nz>\271P\204\235\272\200\3773\275C\021o<W\323\215;k\021(<\033\362F=5\353\005\274\204Q\013=\026\344\"<\000Z\030\273\n@|;\317\263}\275 eA\274[r\010=\2167\027\274\272n\010\272\363\353\270\273[\354\223<n\030\362<\242z\032\274\364z\240=U\030\371\272\322\215e=\007\256B;\000w\225>$<\002=\321\276\t>L6\235<IQ =b\340\327\273q\273C<\277\310:\273\306\320\215\273\354\024\020=\240P\325;\317nw;\\SD<U!y<5\272\276\274g\254j=\364\006\310<\272we;\340\210\363<\360\315\026\275\245I\000\275\232\307\275\275\374`0\274e\266\200\275\322\261\273\274\\\0079\276\nY[\273\245\331\271\274\372A_=\250W|\273G\203&=\\i\235\273\r>-\276J.d\273C\220\021>O\374\365<\007F\367=\376\360\030\274\371\371!\276\021\002k\274?\367\'<\357P\032>[H`=\314*\264;\327}\262\274\313 \031\276\247F\370;\372\364\353\275*\001\307=\372\272z<\221\031\204=\261\025\212\275\0012?9\304\270\332<}L\274<\327\320\274\275\374(\320;\325\220\352\274\034\205\001>!\307\221:l\202\004<\267\335b\272\206\361X><5\022\275RG\232<\331\242\212=\316\203\037=/\025\246<\035\352\254\275\234\321\304\273\033\3767\275\253\320\272\273\310I\230\273\340;\206<%Xo<~O\254;\214R\204<\306\013t9S\202\325\274\361\004Q=\340\202\036\2747\372\240<y\327D=ZR\345:\212\224\037\275\207\302\363=\370\246\245\274\001\306{\274\241\363\374\2748\265\365=&\354H;\233_\336\274\335\312W=\327\350S\273V\307\254=|Um\2738p\254=[#@=$9\202=\217\264\006=Ih\251\275v7\271\273\000n\200=e\211\301;\337\322\247\273-\364\265\274\303(\374<=\367\277<\336z\326=\363\276\345=\311\204\315\274\273K\253=\331\275\307<\201d\217<\253\342\323<\001N\005\275\230\031\032\2758c-=@\234\255\274\177\340\315\273\274\036\314\274\262M\262=\236E\031>y\337\r\275|B\246<\226\030\214\273*\250\016=\"\243\206\273Tb\215=\325\217\321<\347\2341\275\2753\223<\361\356\330<Z\211\034\274\023\026\\\275\303ZY\274\234\352\241\273Z\n\307<\032&\005\271\224v\242:\006\241\204<`E\316<\370h\332\274P\355_\276EOM=\002\246\305;\336\310\355<\010\301\301\2748;\013\274\355c\207=N\313R\274!j\370\273/~\340\274kR\206\276\205e\343;\213\350\275\274\007\317\204<\206\221\n\274\001\221\221<Y\246\270\273\331\220\003=\000\251\252=\371\234\327=\360\360\222\274\314\344X>i\330\314\274s\345\203\275B\205\244;5\351\327\274=\241\000\276C\243\355=~\222\314=e\356\343\274?mP\276\266*$;?\341\351=\016\214l\276\314R\246<\366*\203\274\376\201\244\275\364\350\232<\021\006\205\275\332\360\354\274Sc\351\275Tk\003\274o:\245=r\000\006\276\022\375\273\273\035b\013<F\000e<\201\225*>\343\017\177\274}@\206\273\376\032\257<i\277\022\275{\310\237<t0\037\275\226\346\032\274I\016\014\273\255iH\274\202\354\256\273\222\222\034=o\371]\274,\263q;\235\031\272<\373\3445\274V\222\r\275\222\266\221\276\240]l\274]3\247<\014J\024=\r\343J=\274\205\370\273\216\255C=Z%\310\274\3306@\274y\211\030\275\211\035\373=\320\262k\275\313!\340\274\234\310\351<\275\211\310\273\303H\013<\300_r\27370\252=?\316\005=\262<s=\271\361\370;\335\371\377\273\203\341\177\273\037\376O=\346\336\211\274\315\027\264\273t\032\265\274\035\257\224<6\250+=\303I\216=g\350\350==3\357\274\010\266\220<Pb\202=\317\213\231<\275\306J\274\177\263\026\2752\311\271\273\017(.=\324\177\314\274\"\026\221\274\303\010\373\274p\355\245=\207\336\024>\237\332\003\275g\323\311\273\273r\271\273\312\376\325<\035\000\235\273n\270\006\276\023\035\316\274\234\3224\276\030\256\016=\345d/=\225\241:\275\2739\310<N\253\232\275\3769W\274+\0324=\267B)\275$\352\035=\312\332\235<\2538\203=O\322\317\274wn\250\276\256\036\366=\301\016I<\221\266\016=\30317\275y\254\002\275m\216\010>\356\323\033\275b\265\201=\336\301\364\274\210\317P\2762\2722=\372\250C\275\177\306\270\273\342\205,\275\230\3267=j\224\244\274\256q\254=\271Y?=\273\264b\275\333\020\033>\370\204\333=\255v\273\274\2430\211=n\373\275</N\315\274\347\0143\274p]\274\275\232_\245\275\006\022(\275va\033\276\323\262c=\037\007[\2762\375\027\276T\235\020=t\005c\275\317\304\261\275\346\227\323<J\244\233\275\210!\315\273\204 \001>0\336\200\275\326\337:\276\224j\353\273\000\302C\274\312\025\347\275\363\203\266\274\324\272\020>\250\227\243\274\343\305\224=6\3339;\271\211\364<\204q\020=\033S <\202\035\242\274>N\335;\2156\010\275\035\267\261\274B\252\237<{\177\223\275\346\025r=\315\247\323<\177\314\032=\250\017\363\274j\266\214\276\271\033\333\273\277h\035=\036_K=\330h\r>Tb\026\275\354\346\032=V\024!\275\245\347+>\271O\035\275\225\313S=\013.`\272\311vN\275\263\217\016=l\375/\275\032\364*=6+y\274\273\302\253=\334r\256=%X\003>\373\n\364\274\314T\227=\327\317\014\275\354[\321=]\261u\275\001\355\001\274\275\202\251=\010m\241\274\341\201\243=\376\315\021\276\260&->\032\036\330\274\301\321\026\275J\271\003>\224U\305<\276\031\255\275g\023\301\274I\306\007\275\234\362p=F\307\031\275\234\312\330=\323?\006\275\327\210\200<\3671\024>\323\231q\275\317\344\024\276\374\360H\2759\022\271=\337\236\320\274v\315\246\2737\247\252<\252\326~</\223\223;\307\nU=BeE\272\353\372\337=\025E\346\272\335\016[:\253(9;!`\244\274S\303\254;\033\343q\272Uz`\274\307 \312\273\271\336\316\275\247\371\301;\004\372\204;\014\030\005\271\211\373\326\272\373\007\265\273\304\227\200\275Z\363\017\273\006\343\207\274*\325\277\273\002\n\177\274\376\202\214;\033\322U\273(\213\000=\007\2259\272\235\\\253=~,\033\273\300\276\244\276!\034\t\274\344P\255\275>\274\267;O \323=\350\033\010:\263\363$>&\027\223<\030\000\002\272h\320\024<\366\224)=\2011\007\274\036pM9\3556@\274^\030.\2745\330\201\276\353\216\\\276,A\272;\263\330\353\273\261T\350=%\026\025\274\236\202\257\275\330#\007\273\013\314\033\276\001\3641;\006\347\215:x\354a=\022\034:;>;1=\367#<\273\006\200\230=\327\353.<\3726):.UL=\255\250\205\273\nx\241;\272\375\213<\020\306Q\272h\306\262<H\311\332\272da\350\270F\004G\274\036\313\354;nF\202<\376\200.\271\3357\212<\324\341\236\273\022\002\007>W\"\237\275%IR;\326\007)<C\"\212\274\204\374\241\272`\004\234\274h\006s\273\'E\362<?\313\201\273\034/\301<m\003\264;\257\256\017\273\304\260f;\225\276\265\272*\254 =\311\212\203\272\215|\212<aO\023=2\323\013;\n\025D\274)fA\274$[9\272\231X\373<YR\266\272k9\26798\347\004\275Z\227\247\272\023$\220\274\206\315\251;\221\036\372<\253\251\324\273*\377\022=\252y\344;\276\305\270;\262\r\250\274\263e\001\275\013\217|\273\346\3354<W~S\273M\273\224<\303*\277\273e\220?<\260W\252\273(P\026\273\323%g<\346s\025\272\226\227a=\303>\331\272x\333\362=c\236\330<j\367\037=\225\335-<\227\022T<\026]\320\272\352SA=\010\222\344\273\253\364(\273\233\223\325<i>\343<\372\036%\275\355\3740\273\010\264\230<\332t\205\274\036\3332>\201\214\272\274\230\332)<M\035\233<g)C\275d\231\261\272\003\002\224<\245}\356\273\203\313C\275\265\210\r\274\032\035\234=E\241\340;\353\332\033;)r\264=\236\3566\273z=\227<\030\316\222\270\212\315\252\276\265\246\241<\304\367\336<\177U\315\275\021\337\232\275\357\3630\274\230\205\330>\337l8<\307\243\264;c\340#\276\357B\"=\307\335L:\200]6\274.\264U>\235/\332< \262\022>DZ.\276\240\221{<\331\225\314=\027\020%?9\363\341<b\345\225\275\361\030\027\274\301`\371\275(\345)\275&#<=\0200\215<[\334/\274\210\337\230\271.\212\236\274\241~\374=0<t8\272\2557=\375\345`=Y\266\251\273N\362}<\033Np\274\213v\273\272p|\253<\243~\336\273pU\031\273\347T\230\273\263WB=\244\0255\275%\222\254;\262\350F\275\366\t\252\274o9p>\356\234\207\275\207\243x<\267)\371<n_\237\274\350\200\214;\221\223+\274$i#\274)\231\211\273\0068E\274\010\026b=1\235\002\2730\265\032;8j$=\237\203\300\272\224\216\342=\303z\223:\300jQ=\306o<=\025\257-;\'\324\372<\215\027\277\274\3402y\272\177\355\223<Z{\334\273:\020\327\272\"\341t\274\027\243L=\216\237\361\274\243=\220\274\371\332\031=\303P\224\2742\304\247=\331}\000\275v\372\'=\000)!\2744\r4\275\216\234\032;q\361\257\274\214%.\274*\350y\274}\0269\274\244\036\201==#T\274\310c~;kU\200=\263>0\273\241\337G<\035\275\\9\307\377x>\037\2745<B|\034>\034I\221<-\347\001=\202\210\234\273S\231T=\337\331\026\272\305Wo\273\317\246\347<\030b\245<\240\332\205\273\"\026C<\000\211\362;\034 \335\274\364\262\t>J\010(<3`%;Z\352\003=y\335\240\274\234a\344\274\314\210\351\275x\312(\274A\321V\275\016\016\333\274\223\004\255\273\240\246\014\274\362\316\235\274\265\356\224=\020\013\225\272\257\237\372;p>\264\272\016p/\276\035Ar\275-W\322\275\003N\210\274\341\032\370=q\025\013\274\345\215\220\276\220|\252\274F\334\003\274\r\001&=\342m\362=qk\255<\273m\261\274\305\305\030>\006;h\273q\251\025>\nu\\>\241sW<[ \302=S\035c\276<U\200\272\223\'{>\035\361\013\275\254\005:\276\t\330\002<\314\335\262=\272d\367\275/k\037<\247\302\226=J\305\323<\265z\210\275R\344!\275nj\224<\210\030\304<\340N\014>;\327\271<r\240\243\274[\242\233\273}\213\372;x6*\273\206\312n\273\002\344\301<\023\260\311<\223\345a\273\'\357\220<L\272\376\274\265G\366\274oIo>\307}\014\274X\256\216<\026\207P=\362\277F:w\021\007\275\"\201:=LI\235\274\314\026O\275\026\264\006\275\261w\223=Z\215o\273\353\323\277\274\032\351l=\305kc\270\231\270\224=\325*\265\272\275\246\221=\323P\324<I-\237=\3665\224=\355}\020\275\347\016\215\273\226\307\251=\250\305\017\273\016\244m\2732-\"\275\350r\034=\220Z\243<\232\333\277=\312dd=\206\340\354\274\274\240\240=xz\001<T\023\'\273\347{\223=\350Vj\275\027D\007\275Jc\302<\271\224\251\274\004h\347\274\201\223\357\274<y\207=\361\360\t>\356W\363\274\026\006)=\362=\2048\264\253\330<\016\241j\272wu\033\274\311\273\227<\235\2757=\350\277\023;}\336 =6\315\305\270\325%R=\305\\\037\273\320jd7 \226j\274\316\276<\274\271\301\r\273\327\213\200\273\022\266V\274j\005U\273$V\253=4\022\366\273\267\333\303;u\016D;5\362g\274\207\307\261\273\242\"l\274\210\002\216\273\316\354\000\275\342Q-\273h!r=\233=\366;\370\347\001\273#3I=S\315\303\272\314\234D=\227\262\314\271\nf\263\276b\031\327;\320\013 \275\266\202#;e\201l>w\210m\273\341\317d=\023\205\243<B\250\014:~_\343\2758\225\264<\266\321\206;u\222J;Q\025\241\275a\006V\273$%\226\274p\201=\276\344\246\010<C\n\257<^\216\205<\177\362\262\2728\322C\276U\206x\273v-\230\275\377W\007\2748b=\275\2278\266=\304\"j:\014_\036=\252\003\230\274m\014Q>\3348\227<rk\275\273.fd=^\014\301<O\365\271:\345J\036=e\207f7\224\0326<\0358\n\273\237\340U\271\233E\201\274\264!\313<\201\352\341\273\246\227p\273\364\323q\275\306:]\272L\370f>(P\336\275\356\242\314;\322\375I<\006z$\274\345\250\205\272\336\n\240;\216\350\272\273Y\240\325<\204\037\343\272\023&\335<\270Kh;FR\307\272\305\313\016;\300\002\253\272Wg\221=\277\262z:\363\224\n=\256\364\025=[\360\037<\306T\204:{|5\274\373\214\2518\035\212\021=\307|\013\273\342$\2377\203f\030\275\267\325m<\225\335\331\274t\225w\273\030\3562=\352*9\273Wx\227=)U\336\274\261\342\027<\034\032\375\274\315L\360\274\202\315\201\273\251\300\020\274\231\303\277\273\203\343\354<x\263C\2732\235\245<\275!\304<\270|\320\271\000\356\211<\034\200\275\272O5\005=Y\267\2239\000\201\370=1.\247\275\231P\312<\275CU\274\357\220C\275\252\356\325\272i`\342\274a\033\274\273\345@\345\272m\306\363<M!G\275S\020\024\274\023\236\340;^\265\336\274\251\341\271;Zr\370\275aM?=f)\n\274J\312\006=\222<:;R\352$=\010\300\274=\246<\243\273\262\370p=|\177n\274Xf\227=3\255\366<w\262\003\274l\001\270\275\262\335+\274\240g-\275\325m)\273J@B<\025\274\241=n\344\325=\315\360\224\274\366\020g\274\254\022R\273\006\211\252\275W\335\037<n\240\326<<\302d\274\017?\033=ZS\262=v\004%\274\265\314 \274e\357)=\220\377\302\272w\370\013>\020oV\274\213\332\376:\332\331\334=\244\000r=%\255\025>\334\250\275<3\001\245\275f8S\274-\347S\275\t[\005<\275\340$\274\373\323\033\276d#\020\275z3M\275\331M\004\273C\017\252<X\334\274\275Y\216\300=\272q\254\274\222\352\370:\344\305\321\272\261\200x=oII\273\374\203\026\2730\363\010=0\337\200\275r\365\312\274\234\360\016<\212\362\271=G\260\033\273aBS;\037\026Q>\240\317n\274\217\337\354<PZ\244=\2112Z=\224U\275=2\373\313\273\360\220\367=\254\313\237\274\265o#\276(\274\335=}\243\032\274\030\264\337\2756\362)\274\373\006\232\275\225\312?\2734\373\242\274q\030\272\275l\272\207\273T\333\002\274m\330\254\2758\342\025\273A\021\216\274[n\017\274\2039\t\273P\201t=W\304V\275JL\331\274\005\220\221\275\367\330\014\275\337\307\222;\340\003\245\275\253$\350<\026\032g\275\356\350n\275\2302\223>\226LS=O \347\274\250\201\261\273\'z\233<\205\275\210\274k\027\224\275\302\322\350\275\3463,\274,I\003\276}\261@\274gu\214\275P\306J\273\352\223,\274\302\341\270<\317F\030\275\335[K<G\254\200\274a\223*\273\266\220\246\274p\370f\273Tc\025:vz\215<\232=\361\273\033\216\347\272S\330\024;p\370\241=\265\277\230\274\375Z\230\275\332Q|:$\314\013<q\264h<\242\\\243<2\314\236:\311jh=\326\201\211\273p\225\266<G-\266\273\215\360\257\276\030\020\327\273\251\036\375\273o\321\212<a\375\201\272y\244H<p\371\376\271\2347\234<\217fg=-\2447>nl\224;\021\363\035=\313+\354\273\320\214\223=\372[\036\273\246\331\022<\013\310\313\275\202\371\037=E\330 \274\302\364\'\274^\266S\275\034\276\327;p\323)\275u\026\004\272\223\355\210<\311\340\t=m\334\244;\212\025\332;\233Y$\2758u\335\273\276{\211\275\200\322\2076\007\300\326=}\247X<W}A\273\306\211\004\275\245\013\t<\316T\016\275=\202\367\273r.\023=Q\361\024=\255\337T\274Fio<:E\305<u*\034\273\216\030\232\273\257\\Y\273\036{\3369m\264\341<tQ\343\273\213\027\321\273#V\314;\323\273\302=p\322\244\274\'k\233\2752\232\310\274vZy<G\020\337<\023d\223;$c\325;-\306\037;S}\370\273\314:\025\275~\177\001\274>\310r=\034\256\316\274\000\347\r\274[#\320<R\341\336\271\236Ee<&N\031\271dG/<4\223\016=S\271\247<\\\274~<\331+\265<F\324F\2730f2\274\234\343\274\273U\017\2738QM\303<\3005\363;\320\'\207<#\010\262<\217\013\266=\301\026\236\274\031\354\243<\352\372\217<\346\314\214<\0179\026\274_\252j\275\2775\334;#\025@<j\376\353\273X`\323<\271\203\320\273q\337\270<r\311\200=\373\246\005\274;\217G\274\262\'/\272\023o\021=\225\325!\272\3173g\275\206\021\002<\243\245\n\275\277e\200\273\300\367#\275\216\216\317\2734O?=\347\366|\2736v\240\273\374\275Q;ASK\275\272`/=\324\031\300\272l\345$\274\253*M;\270B\337:=\324\332<\244\236_\273\335\300\231\274\264\377v\274\315p\002\275\311A\'\273\302\320\257\274\242+\264<o#)\274\n1\231\275\341\375^\274\352\317\007\275\026\333\354\273\\\305Q\274\326\337\020=\322\t@\274\263\270\326=%^ \276D\2556>\321\007\275=\005\026f=\\\301\023=\031\021\022=0D\220\272\357o(\275\235h:>\245>\200\275 \215\r\2758\304\266;\347\353S\276\371\032\006\275\225\213D=_J\314\274\346\224\306:\356L\223\275d\223\352\275\346\300\n\275\030\267\024>\3539\334\274]\035i>\024\372\242<9\024\212\276\347v\322=\363\3221<O\302\235=\366\323\273\274\212\000\005\275\355Q\t;6\004w=f\rF\274\342\022L\275$t\272\273F)\363\275`5\334\273\227\2400\274\350\033T\273:\212\240\273z\346\002=\267Bz\275\274\034V=\026\221\234\273\315\022q=i\342\360;;\016f\276\230O\302\274\236a\375:7\023\251\274\177\315\n=`\214\020\275\035\223\356<\016\216\365\274,X\007=\366S\352\273/\310I=mwI;\375\235\362\274\016\007\312\274\234\367O\274<9\001=7Uk\274\006b*=\\\360\312<(\253\257\275\261\276\321\274\2274\355\275\367\016\265\273\277\021\366;X\006\223\273\242y\220\273\242sH\274\0251S\275\\\337\272<\254\347B\275\333\347|\274\214|\243;\022\202\325\274\243\206\030\274\336\032\372\274\371S\270\275\000\363\203=}\343\020\275i\\\216=\322\220\010\275\347\023\032\274$\330\025\274\334;)=\322\303o=^\"\030\275\204\006@\274\344BH\274w\246d=\323\2768\274\330\271\204\274\037^\005<\337:\241=:\264\243;U\314\355<Q.8\274\263\270E\275\3452\\\274\355\243\311\273\217.9=\034\361\r\274\255*\220=8\317/\273\306\010\223<\331\245\341:G?\202=ofd=\261}\345;h\220\206<\300\253\357\274\036\036L\275V*\r\274\267\007\244\274rO\365;\276\000\326\273\267\177\243\273\373\360\265\273\212\212<\275h\323\004=\316\322L\274O\357\313<\314\005\033\274\271\216U\275\317UF\275b\353\251\275\263\214_=\212\277\301\275\022>\336<r2\263;\353_\221;\007\017\226;\177w\336=.)\\\275\303\004\317\274\301\317\212:\023\340\006>w\374\312\274 %\023>B#\255:\347\025\216<jD.\276%\350\307\275\003\007\323\274Y\374\234\2755\214\007\274S\356\230<`\243\265<\014\343\345;cY\t>B^\335\272\227C\321\273\221\346\304;8~\037\275\360\370\251<\365t\212=\036\233n<\316\363\341<j\331\204<\350\374\005\274n\2532\274)\302t\274A&0\274\215\000\332\273\263\t\177=*\347\354\274Ij\240=\200lv\273\010\006i<=\327\024<t\031\327=\314fZ<\t\207t<4\350$=)\357r=\202<z\275\332?V<\340D\005\275i\314\352<d\032\215\271\230\\\321=\241(\261<dd@\275$\233==\030\206C\2742\377\370<g!\037\274\315\003X=\303\220\245<\332\215e=\342b\300<\353 \274\274\333\257I\274\277_u=\300e\223\274g\244\333\273\220\352>=\211W\273\274\001*Z=\275q?\275\202\222K=\272\215\\;\025o\031=L#\231=\376\254\t=\030\2707\275&|\237\2732/u\275\305\234\224=@\232\020\275\360\325\020=\321e\252\273\373\372Y=-R\001\273\024\017n\2754\364\036;.4S\274\311U\"=O\310\031\274\'\275\262\275N\035S<[\306\035;\2352z<\2572\307;\333\266\373\273\304?\021=\216\271\021\274\227\021G\273\n\347\203\272`\215\253\274\024\r%<\227\337\000</4\030=0\300\225\274\010Z\370=\r\330\025=y\366\264;c\361\263<JD\031<\270\004\3278\271(\334=\010\206\245\274~\250\257\274\362%\314\274\1777\034\276\330\023B\273\006O\376\274\353W\272\273\276`$\274\020k\007=\314/\231\273-#\\=\335e\206<\312/\201<Q\2350=\025M\300=\221]\024\274]\016\230\274\2669\213;\030?\031\274\252a*=~\025g\275\204\322:\274\323\215\205\274\211\241\317\273\304\032\247<\\\342\211=9n\333\275\211P\207<\031\333Y;j\002\247\275O\177\302<xH\370\274\356\340\222<\313\360\303\275)5\206\274\255\020b\276DA\227\274%\273\326\274x\347G=<;\342\273\350\262f\275\273\346\234\272\354\206\023=\362\232Q<r\007)\275\246n\231<\330\002B\275#?\001\274\233-\277\274\314*\030\274~0N\273\210\260}\275n\3141\275\226\357\346;\363\025S<\025\364\236\274c\331\316\274\240}\261<\020\000h=\344\007X<\200B\317<G\271;=\334)\225;\244\036\301=\340\327\013\275\230\307\233\275\224\005\003\275\034\032\251=\340\002\016\275A\331\005\275Z\370Q\274\374\247 \274\253G)=\347\n\257\273\000pm=F\234\255<\244\235\270\274\265\235\306<{\237D\275\236x\353\273\374\005\021=\031\234\016\274\306\037l\273\225\320>\275\"\202\261\273(c\221<\221]\001\275+\237\203=\261\006\244\274\277\3743=\366\262U=\031\021\204<(.\\\275\356\2619\275y?\305;\242hz<>\034\r\275\250\000K\273\234%\343\274\345EL=\343\273:=]\014\026\275\300\235\313\274\260\240*\274\335\257\300;\264\255\237\273v\217S\274\304\310\030\273\333\277-\274\341\n\001;\223\005\251\273\023\323\303:\274\376\216\272\265\363\030\271\320\237\2308)-$\2746\367\340\273>Hx\274\002\225\2359(qW\273\216\235\3279\2657Y\274&\370+\273\367\312\233\272\251\312\211\273\231\374t<^\327\270\272\224M~;\340\2628;^\343\255\273\337\326\370:\304w\r=\342\000\302;\235\2023;\330\220\244\273\200B\244\270d\2650\273\341H\223:\227dQ\274\354ui\274\274\243b\273\032Y\277;\375\376\333<\307P\232\274\275\353\202<A\330D;\004\326W;\243\030\024\275\320\375\'<\2707\305:\306\003\2279\372y\251\274\027\343N;G\313\231\273.\262\364;XS\334\272\215\247P<\257\214\271\273\321\206\314;\312\365\016=\276\020\014<i\365\002\274S\024C<\000#/<T\225\036\274\236\017`\2746\246\315;\254\231\023;\272.+\274\013\032>\273wr\230\274\220\327l\272\312\310G\274\264\253\224;\311\233u\273}?\306:\\\375\335;`\326\006\271\354\032\0069aA\203\274\021\223\023\274\205\321\224\274\212\306\2608c0\312\271\227\tG:\210\000\030<^Q\336;\354\324\022\2739zQ\274\366\000\256;\336\340\201\273\005\347\253<\360\234|;\240m\036\274\2331\020;,\203\322:\314\340\003<+\t\213:\r\313(\274+\256C\271@\261\016\274\252\240\252:5\354]\274\277\212R\273\344.-\274H\261\275:#1\233\272\363\000z:\366k#<S\\\210\271\317\305\0079\200\315J\274\257\363B\274\365y6;\337\336+;\304\216\031\274}~\3439cY\370\273\262O\341;2n(\273^N\334;\310\233\234;\307\353\251\273\330\317\r\274L2\232;\006q\n\274z5\004;\362G\310:SK*\273\302\252\030\273\265\035\312\272\272\261\r\271\215\200\264\273\rW\221:1\343\n=\027\273F=\016\240\t\275\236\242?</\316\365\274\024\177\337\273B\351Q\274\203\"3\274 \305\355\270\255\3552;\336\021\233<6t\235\274i\000\314;Y\361\237=\224\022\215\274\334}\212>%KK=\214\317\264\2678\327\201<K\376\006<\342\334\006=y$\242=\242\325\367\273\320\224T<\273\335\017\2754\252C\275\302\310\365;\016D\372\273=\030\233;5\246k\274\252\345\271<\253\375C\273XQK:\305\216\006\276\224\020\364\272\331.\312\274N\006\273=\\\336=\275H\250\236=\374\317\311<H\356\023\274!\277\221<\221\004\026>56\236\274\374\342\224\274\314K\272\275\366/ =\311V\237=\361\326<\276;GV9E\225H<\340\254\317=\371hn=!B\233=\277\r\'\274\017\222\302=S\202<\275\350\263\274\2742.\310\275\032\255\357\274\246\363\033\275\261\216 \274\321\263I\275\017g\362\274\366\367\350=\365\321C=\026<D\275\0342\242<\014^I\2753\177\344\273t\326\034\275beO\274\316\354\212\272Wv=\274^h\231<\325\205\316\274;\0109<\347\304)>\347R\344\274\340\357\317=\nVf>\213)z:\341r\001<\034\234\276\275a\2051=T\014&=t\214e\274k\332\260<!QD\275\366P\233=\363:\305\275\224\212\025\274\356\232C=H6s\274\316\353\t>\226\232\037\273\347\371_<L\237T=[/#;\022u\204\273\263\276k\274\205\275\311\273\302a\001\274\325!1\274\272\341\302\272[\377\347<\244\305\003=\272{?\274\234\363#\275\303\206\005\275\204\371\237\274\263\262\007>\304\327C=\005\361m<L\333\225\274\2434,=\257\2278=\001\361\037<\010JJ\274_\371\303:\021\177\"\275\371\334\374<\246BP\2759Q\002\274!z\363<-xj\274\347\210\357<C\022P\273\264\265\001\274Kp\n\273,\2455\274\346\201\217\272\026Os\273I\231i:X\016\202\2730\226+;B9\2719\321\3539\272\3104\254\271\242\026\000<\027\032\305:\351\263\205\272\245Y\307\272\350\340\247\273\336\370\346\272h^\037\270%\311\007\273x\225E;\334\274\244:J\226\267\2726\363\315:\226:\351;jZ\265:iMw;\320p;\272u:\253:s@\234\273\271\250\213:\\Q<:\333\350d7]E\224=\346r\"\274\177\017b=\031\023\275;\035a\001=\320\031\020<\t\240\367\272\266XW\274\312\\\241\273\274\300\226\273\316\341P;%\311\301\273\214\266\031:\235\247\220<(,Z\274\000\221\315\274\206\222\034\275\313&\371\267\004P\004\275C\\\237\274t\314\n\274\rtB\275Q\202\277\273\303\017Q\275\203\010\026<r\250\010=\270\257\225\274|W\035<\376/\274\273C\363\016;\277\223\370\273\003[\364:\266C\013;\345\014\373\272\020\361\024\274\373L\240\273\030V#\273FDt:\253\325\004\274c\323&;\350\002\3239n\351S;[o\3178\350E\234<\202U\225:y\241\231\272\220\206\037\273\241Z8\274\223\024<:235\272\336\341\003\274\3212z\2735\363\327\270bZ9\274\240\242!;\004\301+<\304\304+\273\271b\003\273\001m\025:\335\021g:\342\225\\\273\037\236\201:\260b\002\274:\202U\270nf\240\273\356\262c\273\2303L\274\247\315\207;B\007\202\273\276\277G:\312\004\025\273\022|\037;\252o\2729\2453h;\312)\210\273\017\252\242;\254\243V\273\304\024,\273|\323\307\272\206s\"\274\343\362h\273\243K\337\273^\266\021<\272\235w<\203\222b:GL\241;\032\r\023;\361\035r;~\274\303:3\233F\274\017\215\241;\320\276&:\\\343\327\273\223\202\210:F\0148<\036\356\2517\250a\322<7F\377\272; \303;\325\t\3728\353K\246;\311i:\2729\026W;\377C:\272\264\306\223\271\2713\231;\206@W:\223\304C<\216\307,8f\266U:>k!9pDz<\363\002=;OV\234:\n\360\344:0\251\270\273`\341\033;9\252s\273Vv\270\272\251\205\204;\333`\325\272\241i\243<\327\246\223\273\374\356\370\272\017\240\024<\323\346\377\271\373O\010;\\q\242\271\275Ey<c\205\247\273\220\304\364<o\367\210;\242\200y\274A\322\213;~\346\005\274\256\244A\272\206R\306\273\210\230\303\271\027N\274;\255\260\220\273\305\237\3718\301\346\033=\032O\000\273\260~c\274P\001\237<#\030&;\214\'Z\273\301\032\200<O\177\032\273\343\242a\273#\335|\273}\025\274\274\343c\030\274\347\021\027<U>\000:\221\034\267:\rK\274\273\021[\220\2730\333\034:\366\340\350:|\352\221<\301$r\273n\372\035<\355\217\013\270\326\340\320;\006\254A\272\034\205\212<*\340G\272\022\t\241\271\314\226O;\367\'z;\203\240\222<0b37\223\221\366;D\371\3719\006\215\361<\262\000\036<\311\020\023;z`\314;\226L6\273\324\263\242;a\212\310\2738\302\n\273\3660\240;\204\230\337\272uh\363\272\316O/\2733\257\221\272\001#\024<\036\037\341\271Ll\n<\025\242\307\271\367WF<\032\260\022\273U\326\244;\r\246\035;\007T\235\272\257\364\003\272\231\326\025;\244\206 \272\367\272s\271)\340\007;\030\264\240;\010\223\332;\304\025\215\273D\213\034<\260\345]9\271\034\n<\242\217\213;\002)\207;\354\342\017;\250\031\237;\370l\227;G\033\020<\031\304\037\273\215\262\304\272\361\340\356\272\003\3637\272p\021\013\274\260\270)8\355\005c;uy\360\271\372\007D<{\345\211\271\366\236\307\274\230\351\n\2744\275_=C\242=\273` \240\274u\275}\273\364\211\327\274u\026\030\273k8X\273\312\274t;\305\2257\274\215M\212<Vk\325\271\241]H\275\374\r>\272\005\346\346\274\004\004q<\232\277 \273\26498\274\304\0222\274}\342z\2741\223V\274\301\244i\274e\202\332<\'k\r\274N\341U>\245c\376\273\366X\211\274\311\032X\274\205\034\303\2735>\214<\267\021t\273\244\313\021>\n\203\023\276\2259M=D\232\350<\316\325\205=Z\265\267<U\341\222<\230\220\352:\214\235l\274~B\032<\304\022|\275q\332u< B48\020\375^\274>\270>\274\364\244\022=C-\201\275h3\333:\375\322%\275;\023\261\274\304\277\027\274\"NE><\222\272\273x\237;>L!\033<\366\224\222\275\261\266\217:+\313B:|\325\351=`L\276\274A\035\335\274\303k\002<FH\263=\304\207]\2758\330\365\274lE\234\273U\227\312\274\r\224\212\273\326A\266=L\214\307\272jTg\273\305Q\361\274D\240\215\274\201\270\241<t\317\251\271 \351\016\275g/.:\361\302\024\276\223tl\273a,R;\223o\314\274C0R=u&t\274\377\316\255;l\310\225\274\261Al\274\371\025\347\273\361\232 ==\037|<S\020\200\274\215\241\321\273\266\306\265\273\002\371Q<\255i\224\273x\337Q=\226v\006\274$Y\016\273~W%\275\376R\277\275\256\232j\273J+\353<P{(\273\214j[\273E\222c\275\313\350\024\274\312S\033\274C\031W\275\336D\"\275\240\215m\271z\262\364:\316\312\r\274\221\207$\274[h\\\275\306\2722=\254\236\210\274@\016\t<\223\340\245\274\231\270W\275X\270\020\274\331\014\264<\250D\201=S7\244\274\026\362><\323;\275\2731> <\013\026d\273x\323\365=0\313\360:@\240\303<s&\002<\240\374\335\273\253rM;\257Mj=8\325\331\273\332\n\n;\320\023\340:\020>O<\315\305\332\274\037\200\023\273\016\263\344<sP\333\2736\261-\273 <\356\274~\324\024<\331RW<#\302\372<v\272-<\276R\371\2735\361\333;\231\202\000\27562\237\272\362%\032\275\230\354\025\274c\032&<\001\261m=\253\224+;ifG\275Q\313\034<?\006\361\275\tvD=\314\022N=\022\222F\275\270\303\271<\250\377*\275\376\214\027\275\017\325?<--\306<\277\352:=\026)\"\275\325\262n<8\"s\274\334\371v;\t/d=\366R+<\245\234Z<8\215c<&\337\220=L\005%;\301e\231=\320\354\027>\322\236(=\016\257\321\274\314\226\013\275h \227=0\367\010\2755@,\275F\257\314\274\252H\243;\336U9\275l\224\025\275\215\230\272<=\232\005=\021\330$=\265\240\036<5qj\274\353^~;@\340V<\303\340\317\273\3662\004;\337Q\361\274\3302\223<\3147\353\27463\016<F\000:=z\333\200\274)\250\037=-j\207\2755\243j<\024!\230<Y\227\32597\224Y<\321T$=\026$-<Y\264\\\275T=$\274j\016\214;\333r)\274HM\356;\202\207k=<RF;\220$\252<m@4<p\336\004=\3461\204<\nq*=\351X\224<JID9\301=!;X\305^\272\200V\350\273\201\250\331:S\336\246\274x\375\323<Q\351J\273Os\030=B\235-=\027\235 \274\254h\014=f#\016\275UI\337<\262\024\206<\274\367x\275\364\360[<\313a\332\274m\022/<\010\215|\274\262\357\337\273V\315\003=\032\356U<.m\t<!}U=vb\017;\221\344\255\274+l\035<\263W\244<l\347\024\275[Y\222\275\342\006\266\274\032\020/\275\327\200v<Cl+=\323\225F<\334\271\363;{\301%\275:\316(;j\320\346\273s2{\274\304\267\n\275\005\216\021=P?@\275?e\210\275S\211c\274O@\017\275)\210\327<\257!\001=q\225C:\256\326\257<.\017\240\272\373r%=}\356\266\274z\265\224\273\373\3172=\226+\320\274E.\207<\271\211\025\275\234r\021<tk\376\275\206\326\270\274\006\n*>\344[K\275\204Yg=<|\030\274\247\335\021=\213\347s\274\033 q<@\247T=S\006\322<8\254\336\273\364z\352<L\231\361=\214\037\261\274\314\374\362\273)\241L:]\301\001\275\223\263\306<;\312\246\274\360\263W\274\200\315\254\275\277\305y<\206\223\026\276\343v\035<\321`\253=\273\242u\275\212\307\240<\032>\202=n\025\337;\030\340\026\275\016\344/\273\000QU\275\315:\026\275\244\323U\275\200\313\376\274\213\205\205;\277\217h<\0329\014\276\250\246|<\371:\005<xo\004\275\356n\255<\345\356\027\274x7\266\274\262\3157\274{)*=u\tq\275\360.\035\275H\356\342\274jzO\275\336\036`\275\337/\027=\250\333:\274\201q\026=&/\235;>\356^=\370\"\351\275.\332\240;\372X==[\366:\275\317\013\201<\217\035\203\273\275@\022<\340\276\240\275h;7\2752\202z\275\031j+\274C\221\372\274s\270g<\"\031e\275-\342\304<\375\224\005<\363\025\341\274x\2054\274\310z9\275}\0012=\000\231\263\274F\003\033=Sw\245\275\214\250\246\275\014@X\271#$\316;\344\274\237;\211\346\013=iIV\275\213\344\033=\342\3508\275\246\2509=i\025\271\275&^\360<>;`=\356\365\333</a\212<\025\303\352\274];\016<*\242\376\274\246\230\225\274\333\242\007\275~o\031\274\205\007\312\274\365\211\262;\345\331\0369?\314\314;@X\023;U}\234\274X\204C\272\365D\247\272H\306@\273t\212|\274\370\300\223<\375\005\232\274\177\234\266\2749!\347\273\250\251\236\274\024\335\001=7\010\022<9\010\2509\016we<\257\354\251\272\202\355\255<t4\261<\313\220\375;tY\243<\273\031\016\275\350\350\265;\332w7\274\327\250+;\265\0232=N\301\002\274=U\376=\305C\214\272\330\0302<\200B#\273-\261\363=%\227\217\273\301\005\003;j$\246\275\030T7\274\352\013\306;}\240J<\253\377\247\275\323)\350\273:N\302=\323Ie\275M\266q\274:\303!\275\020\020%<\203K\372\273\343\361\357\275 \n;\272\256\247_\274.\301N<*\237?\274\243r\030=\261\267%<\271cw<)\211\025;V\307+\275q\244\276;\247\270\227\274\232\227\254\274\214e\017\275d\324]\274\347\311\214\272^\274\272;\243\210\003\274\2703\320;e\003\025;\343,\230\274\354\033\324:\264\306\271;x.\024\274%\312\r\274\t\032\252<\373\002\342\274\247vV;\274\225]\274\035w\005\275l\362V\274Vs\266;\276\205D\274\263\334\261<\037\027\332\273\005\n\265<%\2320\275\347\227\323;q\333\232<\000\031\020\275\362\323\250;\243\000\262\274\\5.;\3652#\275\200\357\323\274++$\275\316B\300\274\350/b\274\221\236\224;\321\247\356\274\221\215\301;\027\033\021;\223\210!\273\337\217l\274\250(\205\273{(\232;oK\254\274Z\372\237<\315\200\r\275:M\320\274m/\336\274\240\242\346\272\305\244\311<\240\355\335;\375\234a\274\322-\301<P\315-\2748\256\277<)\245/\275BQ\031\274\304\004\272<\026\031P\274\016u\254;>\201A\274\272/\";DR\357\275\177m\241=>\243\372=I\204p;\343\253\323<\367Ou\272\342\"\250\275\210)\001\274*\300R\273k_K\273om\325;B\211\330\272,\235\2569|\243\353<\'#\270\273N:W\2769un<sq\013<wW\342\274\213F\345\275w\326q\275^jO\273\247t6\274\353\202\344<\210\032\305\273\342=I=\376\321\255\273\367]7\274<N4=i[L\273\267\256\347:G\256\271\273s\213V\275Xoj>\'o\324=\232g$\274;\252\320=\352i\242;\002\'_>\313\037\352<\277\255\025\275y7C\275\354yf\274*x\r\275\275;\010\273\202\302S>\021\316\020<r\337-=\324\265(\276b\0351<\254\2122\274\370\215\270\275\312\3646\275\035\304\212\275\232\373C\275\332\177\206\275\271\t\226\274x\256-=\245]\362=v\024\233<\001)\237=6\341]\275\004X\221=\324\0136=^\347\005=\265\005\371=Z,o>\215\005\014<\235\235\037>*\375%\272\340\010\020\274\376\236\306\273B\337\245\273R\353.<\206\313W<\310e\031<\260O\0229\025\331\206<\231z~:\260\234\356=\354\372#>t\343S<\036\341\261\274`r3\276\334:\210\275\014q\233\275\304dy\274\347\260\213=\361\311\256\273\335\'D>\372\370C\275\3078\025\274\334\035\320<1O\003\2734gg=`\215\240\273\"\267S\274\254x\221=\202\243X=%f\202=P\204\247=(\\\"\272Y$M\275\312\340\376\273\301\323K\273\033\225A\274\024\302\\;\363\373\r;\3611\022\275?\230-=\370\250\202\273\321V?=\363\271v\274~\263\233<x\211\214\274(a\254<#\302\220\275\017\265\342<\243\223\222\274{G\202=\301o\265\273\205\253\336=Y8\211=\335\037m\274\214\250\216<=7\320\272\264\200\037=\344:\222\273\032\217\216<\340\311v\272/[c\273F\230\323;\365\240\214;\034\272\t\273`\240=<8`9;p\371\202:<|\213<n\253B\273\360#\371<0\235\003;X\261/\272\311-\204\273@\023Q\274\264\000\370;\272r\002;\014\223\252\272M\322\303\274\307p\373;Y\320\303\274\313\322\216\273\n\275\241<D\201\303\273\376\217\377\274\302`\007\274\304\361\004<\366H\"<\255\272\362\272\223)\240<\224\010\024\273JH\365\273I\237\327\274\\\005^<\037\270\320<D2\334\274G\303#=7\022Y\273\256T\245\274\275\n\224\274\305.\244\271\032\264s<J\337\177\274i\223\3219\211na<\333\273&\275\004\331\010;I\221I\273\227\200,:\036\277\311\275+l\253\274F\031!\275\022x\003\275\370\302#\275\200N]<X\272C<Y\231#<\354|\343\274i\222\025=\034\220\305\272Oe\241:+\300\312<\270\022\257<?\332\003=\303\035\253\273\350*\340\273\211\335H;X\376=\274<\326\010\273\003\n\010;\271\\\322:\354\327\010:5\036\013=|\302y9O\362-=b\2556;\263p\013<t\'M\271\301\321\255\274\207\027\203<\257S\2719\270\335\0319\247\001\223\274\365\260\020<\340)*\275O\312\010\272R~\006=!\n\362\273\250\274=<+\255S\274\365\206\001<>\027a<\234\307\001\2731\374a<\270\002\313\272v\t\240<\356\026\212:\221sY\274ed\351\273D1Y\274\272\326\000\273&WW<\202\245R;X\336\026:\337\326\231<\372~\231\273\256Do<S\273{\274\210\337\215<\006\275E\273\304\340y\27433z;\241\227%\273\271g\216\273\030\3625<tm\020<\335\330\312<\2762\003:\353&\316<r\013\346\273\336O\004\275\375;O<.\303\026<\n\336\342\2738\230\340\272\352\214\025=\013\341\007\273O\247)<\\qL:\200w8\272\377\277/<\347\277\017\275\247z/\273\320\371h\275\266E%\274\356\217\233\272P\314\006\275\3246\016;\354V\352\274\226)\343;\301\270P=l\000\237\274`\251\266=T\236\312\2738\316\2539.\321\200<r\321\217\274\273\376\020=\257d\006>\316\273\256\272\266R>\275$\372\237\274{\304(\276q\235\\\274\036\037$\272\227\353\206\274!\210\002:\272a\016\274Y\2154;\343e\366<@}\265=\310V:\276zI\201\275\031\2262>\235\217.\275?\362\032>\303\021B<\370\330\362;\016b\224\275\177$\005=E\337i<,-\244\274\0046\350\275\277\232\\=\360\273\n?2\332n>\326\004\371:<\210\235=,\350\302\274\007Wa=\004\rc\275\212\344+=<\303\310\275\323\200*\275\375\032k>\317\035V\275\227L\025\275\236\276\035>\375j\021=PE6\276\203\301\016\275?+\270=2p\245\274\267|\215\275\362\027Z<EA\037\275\272\217)\273\237\263Q\274\2051>\274\346\274\t\273\270U\001\276\177y\331:\204\315\001\275Z\275\211<\3473#=\341\352\365\274P\252\312\273\361\237\266=J\023\333\270\273\233\222<!\277\206\274\223\316(=\005SA\274f\363B\273\255\\\017\276\302\350\360\274\333S5=\237\207K\275\177\226_\272$2\246\274A\335\221:{\357\243<e7\267:\312\266N=\264\222\313\273\365@b\275\033\351\377<\022\330\347\274\243\202\322\272G\302\037\274\362\261%\274\304C\351\272]\304\235\275\256\264\263<\036\254\301;2-\t=\315\353\325<Q\347\267\274\215rd=\220\026\020=\316\214\370;\205-?<\371\261\241\273\364\000==K\361/\274w\366\033\273\307\321*\275\237\026\301\274(\030I=2\210\203\273\354g2:\344\034y<\346Z]9\"\357\356\273\275V ;\232@\210>\023\272`\273\212\273\273=V\243\355\273\004\371P=;\265T\273\221\300\'\276\006/\326:A\267\366\273\201\232\356<\201D\027\274\366\334\022<\250\336\202\273\361m\247\274\035\251\014<MR\317\275)\205\244<\374A\177;$\337\231\274*\034Z\275>S\274\275.fD\276b\277\261\274x\267\242<\233\335\253;\223J{\275\3549\341\273F\037(\275\276\324z=\376\330\265:\370\025\306\274\352\261\233\273u\256\377\275\351e\347\274\014\247\336<=\201\023<\344\350q\276\205\330&=\325\031\034\273\363\357\246;\234h\260\274K\355 >U\367\216=w\331g\274L\233\021<\345\262\316>Wz\346\274\0021\347\275V\020\207=\016j\240:+\004\204\275\327\273$\276=\275\243\275\002)7>\233\2015\275.\356\377\275\337\332\000=\272F\275>\027\031\254=5M\255=\232\211\204<\331\2305\273\255h\326\275k\010\321<\352;=<<#\335<9=8>m\216\272\2732\364Z\275\326M\203\273\177\361\017\276-b\227;nA\023\274f\351\323=\314T\177:\301Lb<\205m\017\274\273c\n>C\007\262<\217\231?=2\377\201<:\254\317;:\372\341\273H\235\271\274\3477\317\275\324\360\247\275\267x\323\274\\\275\033=*n\203<OW8=\363\252;<\3400\r\275\360\373l=\376\315\245:Zp\307\274\236\261w\273\200\310\2008\335\227\\;\352\016\301<\260\241\275<=c\025<\322\331\200\273\302\354\346\274X\223L;Q_\277\273\302MT=8\017\250\274\014\"\034\274\001\315r<\021\004\017\276\006\202><f\030P\274V\'\363\273\353\321\323\274\232\273\032<\274\341\351=\r\344\340\275=\316\201=\252~\021\275\272\304\257\274\222\306\r<(\345\034=\271\037\"=\033\366T\275\023*\'<\374\017\013;\331x\027=\234\344O\273\202\010q\274uR\364<\211h\240=\030y\235<OD8=\300Ze\274\233\235\265\274\230\002\261\274\377\312\345\273Fd-=\354c\017;,,;<\260g\205<K\314\006=\375/\022\275\256Z\247:!\331\210=\312-r<Y\374\013=\365\320\375\274t\344\267\274\254.c<\227\375\266\274\267B\013<)\0201\275\351\365K\273\217\263\261\272\037\013,\275\010\231\303<\373\306^\274x\"\t=\"m\026\274\230R\323=\331\234\254\274\351\2160=\215U\010=%A~\275N\177\347:\205i\376=u\361\221;\203K\"\274*\363j\275\020\201U\2748\205\007\275\300\270\365\274\301\001\332<E\253/<ZJ\245\275F\300\021\275)A\010=\225/y<\251\234=<\346\016]<\tS\203\274\276\267\362\274|Y\002\275T\241\027\274YKa\274\342<\373=\225\373\002\274\204\306h<\006\205\243<\267\241\'\275\036\272s\273a\353\313<\317\263\014=O1T=\361H\343<\273\220.;\0233]\274\334&\370=\316}u\274,\264\372\273\204\362\024=\256\343I\274\1773N<d&\302<\374N/;I\t0\275QC\265=CR\322<\\J\374<\013\221H=\206\216]=\325\223\303\274\356\377p<\013$\035\275\313\235Y<\017\224i\275!\226\211=\375\201\360;\247-4\275}\2746=\372\212P\274@y\307<S}\014\274\344P\264=\227\333G=n1\275=\340\343`=\202\2456=\274\353k\274B\210\223=\n\362\303\274\356\303\001\274|\263\032\274\261i\256<I\2154=\035\261\351<d\207\232=<\270\033\2756\017\247=/H\243=\0241\355<bn\376;\227\213L\274=7\260\274\352\346A=i\333#\275\236\3111=\037\203E\275\261\365\270=\032\235\307<\030\251R\275\241\025\371\274\n\013g\274\213h/=M/\021\274\027@\000\274xL\016\274`\365W\274hf~\274\370C\315\274\364H\003<$\226\277;\0336_<^\031\230;R\007c\274zY\312<\245\320D\275\314\232\031;\034\320\005\275\002N-<\223\231\375\274\324\253\020\275P\235\233\273\001x\222\272Js\316<\241\034\034=y\005\232\273V\364q<v{\212\274\354\035w<$\215\220\274\252\226w;\333g\016=\352V\035\275\306 C<]\370\212\274\320S\307;ga\356=\355\324\320<Z0\230<\002Z~\275\312<\035>\327/F\274:\365[=\217e\221\274\362\276\332;\355,\266\275\006q\275<\213\340\200=NW\035\273\360y\237\275\023&\007<=\210\020\275)\203\003\276\23323\274\242\013:=r\014[=B\310\250<\002f\264\274X\256\305\273\205<~\275\340\225I\273\367V`\275?\363\247\275\306\205\325;9\037\026=\271\261\272<\323\225[\275\305\261\251\274e?n\275\223\023\314\272\r\347\227<\246\262\310\274`\203\021\274\212G\005<\207F\266\275\203e<<`V\240;\013\322\203\274\261aP=O\366l\275]\326\240;\3677\213\274\273=\371;:{\211\274*\002\241:Fd\032\274\313ua\274\304\217\017\275\tuE=\247]f\274R:\311<|\201\253\274\203\371{<\301\'m\275\337\375\375\272\031\302\025=\364+,\275.\224D<\236-\n\275s*\312;\245N\004\275\025\033,\2740\033\300\272+q\303\272 S\317\274\331\362\002<\021G\022\275k4V<!\035\223;\004MT\273\314\2649=+\317C\275\221R\210=\331\373\000\275\371a-<\321\244\357\274\366\312\231\275\004\312\336\274\003{\003=\313@g<|\320E=\262\207\201\275\315\214\332<qB5<\223\230\202<N\232\255\274\356|\013=\000\013>=u\271\222<\021\020G<\255.1\275\266\032\277;\344\313\233=\212 \331\273\206\037\211<!=-<\023N8\273\353t$\274 T\341\274{\232\004\274\333\376&\273\005\\\272;=e/\274\360W\014\274\'\003\004<\211\273\233<\210\014\242\274\352\266\241=\361\361F=\000\356\3078T\020\361<\376\274\006=\357=\271:\256k\264<\307e\333\274[L\355;\303\007\013\275\013\'\316=U\003]<k\252\030\275\302F\301\274x\206\365\273\3123\277;B\313\247\273<\001\006\276\261\330\223=\273\r\001>\033\330V\275\265\013;\276\270O\0368w\310\262=\275\3118\273E\317\022\274M\\\313\274\330W0<\372M\215<\002\310\204\274g\302\006\276\255\326\033=\233/A=\370\245\331\274\377J\004<\302F\361<\270\315t=\256f\005=D\314\320\272\266J\320<\266\351\254\272\264\365\323\274Q\362\251=-\313\344;\021y\276\274\260\240\356\274\340m\211\274,nI\275{\220\234\273A]O=\255\250=\274V\274;=4N9<@*C=\326\2671\274\234^\327=\374\362\r\274\314\276C\273~\273\355;\233-\217\274?\022\221\274\356\261[<\3776\373;\237\233\334\274\031<L=\"\375\344=\021?\233;\375v\013={\035d=\275[\243;\020x\314\274G\003\027\275\266x\035=~\213\032\275\310\315\222=\215\2031=A\336\016\275\252\343\323\273\370\356\364\273\371\216\253=\315:\343\273\311C\266;\007<\262\273lX\270;w)|\273\241[\226=]\256\020\274\"\"\026\275M7\005\2744K$\273\367\271\313\274\373\341\235;\325\360\300\274&\001\324\274]\235\272=\273\314\263\274\006/U=.\326\245=\"[\215<&\014k<\354+\341\274@\032\255;\201\200=\274\244\221\037\275\235:\203\272\221\224\031\275\262\325\236<H@\211\275bN.\275\235\250\n\275AN\363\273\311i\036<\332\210\263\273w3\253<uD4\274\020\333\32598\345`\272\212\313\246;\256$\214;\277\2302<\240\352\3776\274\322\037;\313B^<H\202\235:2\332\"=\223\221\\:l\035s;\321\237\3329\001\332`\274<~\313;\232l\r;\335#\001;\030\033\246\274\277\362><I\007\300\274 \323\260\273\217\3072<O\222\201;\037\265\214\273\321c@\274\236\260%<\2211\325\273/p\234:\254|\002<\262y\236\272f\330\200\274\266\200\004\273\305\333\253<Q\234\267<\013u\200\2743\337\243<6;z\273>\320\356\273\342K\006\274\276\026\253<\342\037i\2742&\'\275Z\251\016\270\330\375\206\272MAC\274[l^<T&R8G\265\021;\224\375\247\275\230\270|\272uM\270\274s\270\255\272\334\213\360\274\2314\310<\215\2518\275\016\\&\274\24076=\3745\340<K\324\364:\022\211w\274\317\257\275<\304\243(<\350J\272<2\032\333\274V\263\2629y\n\306\273G@L<\242\354\252;\322\343\214\272\004\235\001\271\r7\024:\367\355\231<P\246\336:)\252t=#\334\325:\302*`;\210\336+\271A[\360\273O\374L=\013\331\222;*7+<\200q\203\274\201#^<S\2174\275:C\227\273y\341\244<\256S/;[V\204\273F\355\224\274\340B\372;\304\272I\274\252x\255:Vi\207<\315\217\250\272,HE=\261\321\343\273\274Hv;H\211x\273\000c\212\273\026v\352\272&\222\'\274}\222G8\303\277^9\276b\020<\205f\017<\312\243\257<\307\tr\274\276|D=\366Y\2229\006z\027\274\351\210t\274\0321@;5\342\371\273\233s\243\273\035\266\210<\034\202\202<F\0332;\310\345\272<O\027\200;_o\360\274\203L\023\273\023\201;<\010\3701;\236\370i:\2247W<\375>\232\272\272\232U=H\370#\275%n\336\274Y\231#;\217\024\351\274\245\324\242\272B\246T\275\344\235}\2738\220 \2733\027w\274=_\r\274.P~\274(\374<<\350|s\275`dz\274\374\"\r\276\201\361\327<\213\224]\273J\235\215\272\376\0366\275\200o\311<\274!\022=\225\217\004\2746\203\234=\373\307\002\275\177d\313>\261D#\274\304}\367\273\307\352\204\274\222\355\237\273\357F\020\274\035\347#\273\216\223\222<\266\334\345\275`\301\323=\212\274\n\275Z|9;\210\313\275\274\031EM\275\264`\240<<\337\267;\223\370\234=\314\267m\275\324\302$=u\177\234\274\262\336\007=\300\313\310<?\222\035>\350J\244\275\250\353d\273`\034\'\273\227\2059<\374M$=+1\203<*8\352<\273\340\036>1\214\251\274\272*\251=\233C\234<\221\034\366\274\202\212E>\340\333O<Vr\177\2752\006\304;\010\223\227=A\t\310\275\002aJ=~y\373\272N8y\275R\246\250\272\2371\211=\260I\235\273$\036O\273x\344\213\275\253\332\033\274\tl\244\2749\300\217<\361\241:<G[\325\274\212\257-=\267r\232=JU\302\272\366\t\225\274}\304\223=\366\364\361<*\356\027\274\267\022O\274\026\036x=\213A8\275cXe\275PoL=\304\n\003\274\032\211\030\275\204\266\226\273G\006b\275_\035\243\273\013\253C=V\200>\275`\375\357<\277n!\274\205u\305\275H\\\235\272HF\366<\003\271\010\272+\"\017\273\252\037\237\275\266\306\363;\206\333\353\273\030\037h;#\007!\275X3\223\274W\222a\274\026\303\'<T\215N\275\022\301\331\274\225\235\036>5\230\375<\345F\273\274\360\316Q\274\206\366\367;\307\023\023\275\331W\342<;/\200<x\214\035\274\343(\221;\345\301\235\273cU\021\275N8\020\273\005\020\330\272\232\"\035\273z\343\237;^\353L\273\211\013\232<\301Y^\273\324F\312<\314\030D\271\207\357\341\271\300\365\250<\247\222\007\272NG\n=j\306\322:\2257\220\2726~\212\273tF\376\273{bD<\310\026\3639\025FR;2\223\347\274X\253\t9\034s\362\274\211\315\234\273\311\375c<\253\322\\\273\276\n\\<\336:(\2744xl\273\370\342<<\031\006\003\273T4\256<\31761\273f\307\265\273H\270\271:\035.\t\274\373\261\213<\371\354n\274\255\373\010=z\031+<\317\010\235\273;\266E\274\263\337r<\001\232\274<\307\375`\274B\"\004;\377\261\257;e\233\256\274<\315\210\2741[\231\274vF\030\272\033\307\016\275^b\201\274en$\275\n\207\005\274791\275\004\037!<\300k\277\274a\346\026<8s\"=\336\371\n=wiJ=u\374^\274C\210\210<\022\231\"<F\333\233;o\220\026\274#\201[;(\240\004\2746^<<\260ed\273\316S\256<\215\357\342\270\"\335\005\272\374P==\245\0309;\021LC=(r\324:\010\210z\273\257\230\255\273\360\t&\273y\355\237=\271\222\253:\237\032\030<W\304\244\274M{M;\027\323Z\275-\265\274\273\003\233\023=\020\375Z\273\274\333{<\232X\224\274\350\222y:\203,L<\222G\367\272l \317<v\360:\273\263G\236<k\"S:\241\313\300\273\266\307@\274\206\030\264\272\377\362,\2735\014/;#|X9S8\356\271%\301\321<\334\016g:\312\353+<h\177\230\274\364\300\360<\342l\232\273Z&\331\273\022\356.<\n\277\377\272\354\254\236\274%\005\352;\010\255\276;\037\016\365<5\326\007\274\303\000\212<Efe\273\367\307\301\274\307\240\034\274\341\273\301;z\3670\273\'\"\350\272\227/\036=\033J\"\273\325\300\n\275`\003\271\274\234\337p\275\337\301\262;\372\267\322\271\2052\351\273\220\317\277<-\177\036\274\023\322\002\274\215\247\311;)#\025\274\274x\270\271T\231\243;2\371\327\274\272\000\007\274H\031\177<%\244\024=\264\303+\273\317;A<;\032\r\274&\360\333\274\2606\242<g\374\257\274~{\244\274>\334\253\274\024\237\221>D\"R;\326Y\n\275\302F\032\275\340C4\274k\210\342<\020\264\256\273\202\316\335=\242\023l\276\230\333d\275>\032\202=\310_\234\274\354v\201;m\237\335\275H\242\032<*\031\215\274\216T\326\275\245\010\324\275\3573-<G\r\030\274uD\205\275`\030e<l\004\215\272l\027!\274\3078\030:\360\333Q\275\025\036\205\275\204\313\323;1\033B=\275F\001=<\313\341=\255\023H;\361&\227\276\3216\322\273\246\363\371\274\027\241\336=\347\000X\274\226\331T\275/l\005\274\257<\204=\234S\265\275\252\014\364\275j3B<Q;\325\275yt\362\273\275\366\370=$\337\027\274H\251\377\273\354w\216\274J\346\325\274\246\265\211\273G\257\016<6\021\026=\2306K\274\335A\241\275\007\361:=\341k)\273\0203\310;|U\270=\007\"\007\275oI\242=\253\353\361\274\204\001,<\250\223\314\274/Y\242=R\337s=\375\230\004\275D)\037\275\360\3618\274z\026\360\274/\231\317\273\361oH=\016\223\374\274\360 \277\274*\270\013\273\337\006\207\275Q\020\330\273\374\262%=&\257\'\274>Z\350\273b\213\252\274o\234l\274\327\226\267<%\211\324\274lT\321\274W\255\037\274\r\034\312\273\235\2600=\\\214\264\274\245\313:\275\356d\200=GJ\006\275\370\346\365<]\360\006\275+\313\217\275\375k\273\274\321i2=*\310\177<\230U(\275ML\331\274\003(@\274.\236\260;)\362\247\273\225\323\000\275\352\271?\274;|\210<W\323\345\273\215\313\020<\254\026\261:*\201&<\343\225l\273~T-:.d\242\274\020\262\004\272b\016\242\274\010\034\000\273\366\375\321\273\235\306\026<\004@d\274f\023\214;\354\356p\2727\026r; \231,;\216\246\r;\302\014\014\273\212L\306:)\374\312\274\346\033\021<\210\370\321<\3316\330;\334!);\242\2419\274\346\302Q:C\351h\274\321\227\330:\215\331\347<\3471\021=r\362N\274\301I\223\274y\350\217<h\002\'\2758\375\006\270\201\365\277<l\007S<a*\372;>\355\262\274\017\306!=\354\267\250:\345\030t\274\231\241\027=\023\336\326:\352u\306<L]\336\272\351X\305=\307N\260\274\'\316\225<\036\327\245<s\021\034=\232\267\362\274<\355Y\275wQ\242\274\005\341\200\274\320\243\037\275\317\0354<\330#\252\274(Tt\274E:U\274GCs\275M~\244\274\003\207\265<O\341\240\272\020J\n=RJ\004;\241\257\241<`O\006\272\262\362\3059\361b3\275\032\033\305\273tp\030\275q\351]\273J\355\360\273k\301\303;0<\323<b(\252=\364\324\254\272\270\030\016<\334T\275\274{_);\013\254\256<\027s\337;=b\036\275^\247\026<p\335J\271x\244d<\223d7;K\340\217\274\324\322\211:\271\241\211\272^\312\275:\255w{\274M%a\274\265\311\363<@\3709<H\252\352<z\257\212\272m\253\241;qY\204\273\206&\023\272\034C\021\275 &J;}b\233\274\300\214\010\272\273_\034<\037x\t<\311\353X<3\230\3009F\236\271\272\005\233N<zU9\275e\2031;$V#\275\361\363\000<c^M\274\220\021\370;\3632h<\206\301\026\274\007\005J;\372_\202<`4\004\267\277\001$\275\263\033\316:\232g[\275#\277X=\241`\035=\320t\270;\216\232A\275\013\362\362:\226\370q\275\030\350\252:\254\000\207;\221\026G\274\002C\270<#5~\275\22345<\242\017\223\270m\325\005\275\315\316\357=\315FO\275@e\226;\236\353\373;\240\350\351\274\377\306\353<\251\300\037=\264\265\210<\374\3137:\372<\r\274E\023\370\274\341\226\207\272\335\014,=\254\271\022<\267\236\362;\321\023\307:\251\234\201;;nc=\216\207\026=Z@\303;\314:\233\275\243\003\326\274\017k\267\274\3330\003\275\2263\224<I1.\273V&\220=\034\320\344\273Hw/<\036\362\302\274\244\033c<h\342\206<d\260\001\275vL\003\274\216\332\r;\0239\314=k\251=\274L\213z<$\255\231\274\351o\220\274\221}U\275\233;S\274\252a(=\016dw\275\355\367q;+\2428>9G\001<\335#o>\205\366\217\274s\3377<Dt =\035e\"=\254\335\t<~]\351\274}\321\317:\357(\320\275\356\333\t\27398\211;\347\334\340\274\327\n\274<J\263r\275\240O\262<d\216\277\275\004\353\030\275\332\033\002=L\336 \276\324\025\333\272S\3037;re\301\275\036p\032=R,\004\276\257\201\271<I\306L\275\312U\221\274\005!\010<\233/\214\275v\306(=A\007\314<\237\004\351;\204R\210\272c\316\250;OH\234:\246\240J=+g\t=Dg9=\347\3208\275\023`\023;+.\345\274\364L\331:n\371\215;\347\003`\274\330V\032=\037~\274:C\343\023=w\034\r\276\332i\017\275\031\232\276=Dt\322\275\342\010\305<\364b\'=\323\251\363<\020}\033=\3709\254\274+\'\350<\251\343\313\274\240\327?\2749j\363<\321\204\225\275\016\350[=j!\203=!\002\367;\325Y\243<-\331f;\225\267\325\274\3536\270<\277~\337;\346\301S<fz\271<\213\333\034\274\340\356\262\274c\214V\274\302B\265\273,\354\352<\372\253\276\274f\224a=1\311\304:_S\017=\345qr\274I\020\223\275U\2025=p\304\004<\205\304\007<\336\t\352\274\"\337\033\275L\354\265<X\t\230\274\332\017C<\363\n\257\274K-R\276\200\177)\274\230\257(\275;\020\362<\331\367d\274q\374\320<\177\020\004\274:|`\275\352\261C\274j\352\377=\027\026(=\311 \233=\264\3634<j\337\201:C\027\211<\203}\271\274\350O\233\275(:\220\274\022G\302\274?\227\256\273\340\025\271\271F\316\250\273\235\004\262=\037\n\245\274\'\036\240<\346\310F\273 \326\336\275\244\314\222\274\013\371A<v~>\275\312=\215=\"-\340\272?\"1\276\236\351e>N\243\010\274\262\022\031\275\344\351,\275\006\306)=\373\263\202<\325\2767=\353L\214<\363\215\034=;\330\230<$y\234\274mH!\274\344$\t;\235\236N\274\032\201\302\273\365\330^<\3660;\275~\225\201=\327\n\t;@4\325\271o\360`\274\347#\370\275\037\367o\275\016\244\205<q\001\277<\361\227:=\254n9\275\271\3152=\"d\372\274Go#=\3665\307\274\354\234\361=\316m\352\274/\2431\275WV-=\371\201c\274%\273\344<0\276\n\274\013\363[=\357r\325<\341\312\346<\220\2153=\023\274+\275\220\333\030\274O\003k=\0373e\274\313\275\256\273E9\3759d\021\005\275\230\306$=>\267\340\274\371\343\034=\303%y\274\332<@<W\236\207=\207_\003=\001\252j\275\370\004\025;{\3306\275i\356\202=6\262\007\275\253\001\022<\311\226\274\274SQ\201=\2236\005\275\3769\\\275:\356\276\274\373\242i\274l\3335=\253\026\002\274\233\321[<te\330:GR\351\274\037\"6\273\203\211R\274\354\271]\271-@\237\274\010\310\232:`\317\250\272S\254\320\274\316&\306\273D\021\302\274vX\2178NO\016\274k}\022\272\230\337\251;y\027\230\273\242\350\261\272g\224\030;\234C\275<.\3510\274PyY<\0334\346;\212\316\245\271\354\t\303\273\016\'\361;*\223\002<\005-\263;\373#\t\274+\321\236:\212\304\036\274\017\353\337:\\~\225<SV\033\275\373\266M;\230\321\312\274\276\204o<Wn\340\274^\322~\273M;\017;g05<$\311\321\273\t\307v\274 D\273;En\3519\023\215\253\273%-\t<\027.\236\272\007\276\330<\355\372i\273e\332\217=&R\225\273\257V\355<.ya\274\030Y4=\006\346\361<1qZ=4+\237<\316A\314\274`\"\001\275\316\031\025\275\273\010\235<K>\236\274\241\334\t\274\371\342\316;\227e=<\360\225\312\274\232R\275\271\213\203\271\274\370>\217\272jH\364\273\033\334\220:0\303\211\271\306\273\177\275\306\2519\274\\_\000\275v\301\220\271P\215\n;\242\203\227\272e\037`</$i\275\351\376b\273W\261r\274\222\007o<}\302I\274\002}4=\2705\373:\211\034*\274/\204\302\273\024~\202\274\350\rN<B\020\263;\256\343\027\274W2\212:\201C}\274\246\257\342:\347O\014\275\250\224\316\272\263\035\354\274\357_\244;\020\227J\274\006\271\014;G\252\255<\\\371\221:\"\344\3629WA%\275\'\307\010\274!\357\226\271\371\"n<\321CI\275\203\257M\272\225\273\005\271Tp\244<\\\207w\271.\277\271<\330\277\252;\326WD\274vy\210\272 k\202\2722\236p\274\037\016\304\273\010s\363;\212f\333;H*\224;\203\217\\\273r\242\242:\310\301\217\271\'!\333:\277a\037\275v%\225:\240\354\272\270\276\303\237;\314\354\303\274).e;b\331\321\274\203\231w:\220\310\306:\375\222\321\274\347\262v<\000\367W\275\245d:;\010\364\200\274g\3058\274\211\253\031=\372\0276\275\252\211\026:@=\355\272\030\200\226:;j\345<\"\252\340<M\317\r<>\227\033<~m\010\273\234\3521>\245%\251\272vT\347<n\037>;\344\222\224;\025\236=\274-\276y;2!\t>5M4\274\2734\326\275\364!N\275[\255\224\273\177P\323\274\264\343\215\274!\206\271;\335\203K<\207\216\273\275\202st\275$\233\201<\271C]\274h\252O\274\357\360\326<\262\246\340\274\244\370\263\275IIK:\300\242R=m\357\003\275\371\371\013=\032\336\235\275\304<\245<\206\243$\275\267g\023\274\303i\257<\232\274\210=\031*i\274\224\2348=\264\036Y<>\202\200\275\302d\215\274\232\243u<\250y\206\274\177\230G<\024|\216;s\362\267\274\252\310t;\372\215\277\274\010\007\313\266iy\244:\311\261s\275TZ\227<\370i[\275\277\030=<`\221\004\275d\315\215\274\317\337\250=\330\374\236\275&\\\2759\023|n\274#\245\224<\260\301\010=\224\010l\274\005\\f<\265}\212\274\203)\344\273\266\231.\275\221\376\266\273\016o\362<\374f\004<xC\225;6\274M\274S\'\210;bW\210<\177\265\004\272\342r\235; VR<V\333\321\274\235|I;\233\273\222\274\220@\013;}W\216:T\260V\275\364\207\340<6X\377\273\236E\304<\353\322\014\275\336gX\274\331\005\027=)\230L\275\215F\270<\000\342\363\271\244\267}<Z\271\017=I\025\024\275P\272\211<\022xZ\274\0245p\273\304E\374<\346]\313\274\306\323 =t\030\033=z\377\220;B\036\310\274\212\305i;W\355\307;\341@B;\343\273g<\002\245*;\264\324\353;\263\0024\272\304j\261;\017~\314\272\255\r\204\271\312h\024\271D\016\234;\202\373=\274\203\321\023\273\361d\010<`#\355\272\322_\324;\323\344w:\233\330\014;\240\306|;\2760\255\272\003\353\256\271!\301\216;|.\275\272\254\314\207\273\242\222\177\273\247\356\300\273\305\231\312:\330F\211\272\221i\221<\331\272p\272\240\020\304\272\222\374\016:Ds\300\273v$d<\207\307\337\274m\217d\274\003-\013\2733\226-\274\210\261A\275n5\341;\025\227$;\261\267\250<\332\207\2338\367\220\263;\345\177\347:\357!l=\333\025K<\3720\020\273\010\331\n=\370\334|;\027\263\372<k\205\364<g\317\031<\354\351V<\350\340\255;\341\361\222<\207\371+\274\252:\005\274\021O?\275\3517\006\274?\031u\274\212\277\005\274.D\004\275\r2\272\273\354\324\037;\262\0224;7z\316<\036\n\265;!\"L<\321\033<\272\375\272\n<\352U\351\272\326\374\220\271\353e\233\273\177\021\246;\177\220\242\274\206\312\020\2732FS<\350,\224\270Q\313\327<\250\261\210:\323X];\303\342\372;\022\301\2729\352t\264:6(\014<+<*\273L\204(\274.y\'\273\330\363\232\272\227\257\022:z\303\177\271\"4\263<\252\265K\2726\344\216;rfA:\346\250\253;P\314j;\307#\253<`d\236;\3052]<\202#\014\272\333\255\250;N\000\257\272\307\036\202\271\020|\342\271\273\324 <\277\267\'\274\343\003\330\273\361j\277;f\236\356\272\263\371\\<:\362V\273\260\301M<\364\213\215\273\225nE\274\357\307\3219\254d\026\274Ks\030\273\264\331\272\271\031*\225\273\345\220\325;\306OQ;\n\303n\270\222\347.<\002\270S\272\235\331\036\274\354\370\004:}H!:\246\2176=\234\024\227\275\374O=\274\330\221h\274\250H\347;\320\200\356<Q\3062<\365v\250;?8\035\274<}\227\274h\216v;\203\r=\274\270$\246\274\371\335\240<`\356\245\273\006sY\275\315\347\017\274|\252\253\274\334\023\016<_\233\340\273J\305\000\275]$\251<\307S\357\275\264\204\014=<ep\276\036za;\010\237\003=\016v\334;\330\014\370;\302\254\234\272\026%\224:\036\264\352;&\036K>\240\376\021>\227\360%={\336\003>\353\222a<bj\277\275\270,\3008\'v\252\2741E\362\275\303\342\315;\305\270\250<w\352\274<K^.=\036\310\'\275\302\271t=0{P=;\035\255\274\204\267Z\274*,\262=\310N7\275nE>\275-j;\275\000\2645\276\356\223\'<\254\343U\276\261\203\371\274\005I\010={0\202\2736{\337\274V\336\262=\217\3314<\316i\013\276\317(\340=\362\317\300<\267>G\2741\371?=\363\240\345;\007\313\210\276\365E$<\177\356\316;\3338\334\273\000\3352\274\3750\353;e\021\234\274\\\'\360\275\301A\360<\366\210g\2746\245\326\275\000\257\217\274\254)\314\274\3772\313\275\364\307$\274rL\366\274\254\270\367<~4<\275~\2649=\235\341\261=\032\0105\275I`\370<\227\2551\2758\260\366;\365\260~=,\235\371:\254\226L\275\351`N=\3743\r\275]g\253\274\376[o=l\237\327;ADS\275=|&<\237\020\305;\034\245\216<\nq\364\274\031e\261\273\010\016\256\274\345\000x<\037\236\266<D}*\275j\247\212\275\370K\331\270\007\264S\275\255\225\037\275\000\311/\274<l?<Y3\t=M\275>\274\022d\036=c\2114\275HV\227\273\374\342\"=\177+\207;\260\342\372;0\231l<\326\270\211:\307\302\036\275E`\205;I\024\246\273\312b\021;\217>j:\241\025#:\215\325\312\274Mj\250:L\200c\267kW\341\273\326\242\242\273\244\000?\274L\020\037:;\370u:\237\010&\273\301\316\030\273,*\231;\022<\276\272\027\003\223\272\361\237\361:\311\363}\273u.\355;\301\242\227:/2\267;G\275\303\271N\214\334<u@\t<\034\377\n;H:\257\270~R\277\271\257\331\345:\014X\2778\234\262\315<+\201\035<\276\217j=\212\355\337\273\254cO\272\2658#;\354\214\033<\241\017\025\2747\312v\273$\342C\275\313j\334<\004\310\227;\311\230s\272E\343\255<\026\265\310\273\360\342\010<\032\225\200\274\364T3\273\t\026\035\274\375\302\370\273)\227\242\273\3218T\275e\256m\273\323\300!\273\231\370I<\205F\036=Q\245\342<u|\362:J\216\327\272\031\007+;\265\2319<I&\r\274R\224\235\274\035\356.<\300\260\253\273\277\332\215;\024\222\221;\323\r-:\031\256\022\274<\312\246:f\037\2237yU);\200\375\024\274\267u\t\274y\253\275:\343A4\274g\233+\273\202\326\031;\266\272/<\266\207_\273\222\373\036\274\274\366\201\272\371P\325\273\222l\224;\013,\373:&{*<<\333\031\273Zz\342;\237\325\264;E\374\003;\244\245\325:\344\355\342\271\022\3075\274F\332\3338Q\373\271\274> T;\020d-\274\214\234^;)*/;\033\225\3479xD:\273D\264\227:\356Z.8\314\002\360:nn_\274JY\331\272~\312\3459\375j4\274 \2254\273\021\234\022\274\272B<<\274\270\332\273\272\311\361;)\032\227<\246\223\325\273V\221z\273\365D\343:\037\323\003:b\016M\272\310qS:\2438\227\273\215\023\226:\353\004\024\274aI\231\271*\366\237;\276I:8"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat"
  op: "ConcatV2"
  input: "split"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "|\216\237\274B\274\342<\347h\037=\256\021\334<{\273L=4\'\205\274\277Sk\274\377\306\251\274i\375\007\274\312\2029=\271\357L;\r\334\'<\271\006\250<\306\303\036=\215\315\013\275\315<.=Xe\232=\333M)<\025\332\034=W\377 \275\220\006\271\274a\023\\:\317\024\252\274\206\300/:o\275&\275,\264\035\274\336B\r<\322_&\275\267g\257<\037Y\177\274d\206\t=d\2351\274\303)\211\272\251\276\013<\303u\004\275\016\235F\274\235[A\275\233\352\203;\030J`<>\316\356:\216\262}\2722\316\002\274\036I\230<\360#\235\274\276j\026\275\347[\205<\341O\261:\257\373\370:\221\n)=},\373<3\373\013=K\262/=\006\362/<\005M\023<\256\2218\274Bf\r\275/\346\247\273\223\266\257<O4\263<\324\t\r\274\036\313|;P\320s;\364\271u\274\357\250\254\273\271\336\222=\227\377\320<\007\245F=B\202\004=\263\035]<3\351t\274^U\231=\360U\217\274\027y\024\274\315g\342<-\3226\274\006\263\204<\265\005\330<wVj<\240\005+\275\201\001V=\302]\r=a\325\n=u\277R=\243P\222=\261\342\310\274\217\272.=\006\363\r\275\311b\317<\270a^\275\225^\273=\313\246\226<\022\3601\275\360<@=\370\364\\\274\347\246\005=\303X \274\341\313\273=\036k?=\355\274\224=\313\252q=\263\270\027=u\250\203\274\372\274\233=\334{\245\274\226\272#\274\235\247\006<\350\266\311<\001\353d=\232>\324\274\355\372y=\351\273\025\275\021w\271=\234.\274=c\td=\371\231\030<\360\261\247<\205\255\263\274\311\227m=\266Q\023\275^\365\242<\362\0358\275\017\232\301=\265\250F<S\017P\275\217\244t\274\366\270u\274m\2724=b\3345\274"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "\031(\233;\324T\034<\266\\%\275y\246\031<\271\004\363;\211\234)<lTK:\251\350\307\2746\005#\274u\361\n\273Gs\324<:zt;\037w\301\274e\372d\272\210)\331<\221\372\315\273X\253\210\275\273\231\025\276\364\362F\275J\256\301\275\377\362^<P\322\r\273\326%\010\275\261\t\206;4\272\022\275\224Jh\274\344}Z<A\024\037=\334\177N=\2261~\274t\000\'\275\225\220\013\275\373\3100\276\2147\300\275\204z\250\275\376D\324<\305\320\313=\217\026\305\275\037ry\276\001t#=\332\3468\275\003\003t\274A\027#>\021\373[>\203sl>\320=\027<\326\025\255\273\307\002L\274\201\3023\276\242\037\316<\351V<\276\253{\027\275\361\342\030\276zf\215<\031\230\326=\023\317\216>]\361&>sj\225<\313%G\276\001B\210\276z\256D\276\350\316\302\275j\020\264\275\035\203:<\207Gv\274\350\024\352\274\257\236j\275\275,@\274\227\224m<q&b\275\232\254%\275\023o\033\275v\207\251\274\274\335v\274\267s\256\274\371\321/=:\013-\275xqb;<\\\022:\273v\331\274\306\356\325\275\231S\016\276\323\277\255\275\\%\275\275\320e><LD\000\276\022|0\275\375\267b=\272*\211\275O\025(\275\361S\206<\016\374e=]S|=CFO\275\355g&\275J\326\273\275^\250\\:\251\201\003\2751\031\313\275\254\340\204\274\242\216\217\273\313f\230\275#\357\302\274vd\214\275Ug\323\275\355\234\207\275\212\013U\275\017\365\251;\032\347\240\274\200\317\017\270\377\017\214\274N\206\316\275\272\034\027\276r\177\230\275\234\002\371\275Lq\240\275\271\273\225\273\305\353\226\275\004\177\276\274\n\306\212=\213\214\330\275A\016\201\275\305\234\214\274pm\341=\026>Y\274ua\231\275\334x\356\272\276\306\010\276c\313+=\037\034\335<\246$%<&\311\013<hO!<\314\271\305<t~\213<\225\311\312<U\253[\273\224{j<C\344%=i2\255<\322\014\224<\317\346r<\007\270\274<\210\261><\273K\213<\360o\214\273\266ar<Q\013\236<,\365B<}\346P\274\225\305\223;MCo<\023\002c<\320D\377</\236g<\341\202\321:\035\357\262\272\336m&=9\037\213\2749\333\002=C)\203=>\341\207\275^\233\034\275\201\314K=E\230p<\r\343\266\275\371\227\222\275\003\223==|A\236=t\023\210=I\002E=\333\324\177\275C\\\273\275\177\223\354\274u\351e=\303 \302\275\014\313\010=\364uy=\271\260.\274\020\364\014\274/\215\354\275\220\233j\275\303lQ=|\214\335\274\267\323\007\275|\375\205=\311~#=*\302\002>\\\033\362<3\014F=`e\352=C\275U\275T\350}=P^j=k6\252<\320\357&=G2s<f\211\311=\220sB=\0365o=i\006\263\273\226\036\321<\267\0224=\351w2=P\362\300<\033\263\221<6%G=2\325 =\031;\002=\231w\002=H\205\344<\032#\005=\246-\302<\306\277\247=\261X\305<\264\252\306<*\002\371<\357Mm=\3607R=\366\262);\246G\264<\224\254\257=W\360\220<\037Z\253=[Z\260=F8f=\333\244\n=M2\342<\343b\225=\005x\204=\256`\206=\252\226\251=z\201A<\'Om=7J\243=\022\264\366<\007Rk=\3007x=F\351\344<\217\342\030=\223\270K=\304\305\036=\203\260E=\356?j=\355\3104=a \204=I\035G=\326\262\273<5\314\207=\367>\204=\006g\027=f\037\302<\253\246i=U\t\273=R\303J=\305\340\251=\317\251\226<\032\025\261\272zv <\266H \275\027\223\t<\313\277\234\275Z\032\\<\344\202\373\273\273X\244\273\344w\247\273\206a\032\274#\376Z\273\253\216\325;\241\376\276<`?7<\316\266L\274m\033z\274e\320\231\274f\332\357\274\230@\220\274Q`\240<\321\004\231\275_\233\300<\264\027\214<g\312\033<\002\342\355\274\254\034\377\273\022d\266<\320\214E\273\007\001m\275\274%W<\351\375\241\2758\372\364\274h\026\264\275\206Js;\253\232\334\275\372f\n>P\246\254\275?\373\224\274\010\210%=\014\231\240\275G}\205\275`\003,=\213w\214\275\311\205#\273\032c#\276%\213\243\275t$\331;\343\244\200=\274\277\332\275\003\257r=\r\251v\275\251\232\306\275\r(:>\311\316\034=\247NU<0[P<HK\016>W^\243=<dk=M\250\020\276V\262\264\275\001\3447\276\261\236\234\275\000\211\324<\322}\341<61(<\ro\020\275\302\002\347<\201\245\225<p\244\006= \020\241<\266\217\032\274z\364\241:z\022t<\307\221\214<\356\250\003=p\345p=\354\344\216=0c\336\270\260Y\301\274\250\211@<\356\3156\275\005\r0\274\305SJ<%\"\266\275\001\023\341<\327\255\364<\221\273^;w\265\237\274%\342\004;\232F\r=\367\037&=\353\220\246\275\217Q\347<Tq\205<dFP=\357\364\305<}\236\226\273\317\274\\\275\255\377\223=\367\206\347\274X\003e=e\246\016=\017\215\035\275\211\035\301;\234\013~;K\267\247\275\214&\225==\306\363<\217NF;K*F\275\342\341\023\275l\351U\2745\236f\275\365!\001\275\331=d=[\364\247\275\364,\022=\211S<=\nQ\2079\257T\232\274Z\336\354<{\203\177<\304\252\006;U\266\313\275^\033\360<{JW\275L\003\371<\234;\236<\2237\016=\272AQ<\342r\260<\003\334w<\'\240\035=+\202e\274Z\361\266<5z\244<?\215\254<\277\322R<\004\203\341<\305\312\t=*\007+=|\217\357<\356\273x\273_\003*=\212\305)\2742\214\356<I\3258=)\272\322:\003\275\333<>\003F=\301\220\230<\330)\013<<\370\277<\304Bl=\237\301+=X1N\275C\251\305=\364\n\214\274\220\270\367\275d\362@=\t=\227=;\322\234\275\242\037R\275\022\220\211\275EX\351\275w\375\035\276\034\340\234\275\304;\226\274X~E>\'{g\275\310X\212\275*-\026\276\270\017\242\272\260\213\253=\304m\022>\0052\333\275W\325j=\212\316\020\276v\312!\274X\331\375\274Q\277V=\210\275m\273cGY\274\251g\221=@\nd=\272\341\031>!{P\275\344Y2\275\333\036\253=Q1\007\276K\243\201=\225\337g=@\365\'=n*R=\272t\201=\017io=%k\257=f\'\026=p\310\366<\334\005\032=r\3202=\255\347I=O\241\224=o\030\220=\372t\276=\333\214X=\247\342g;\347(l=j\304W\273\243-\014=\020\375\213=\214b\233=G\246F=)\267\263=\324u\335<5@\036=\271 \243=\276\034\232=\201\253\002>5\204f\275qW\347=\202\010\211<5\237\333=Q\374\325=\321&\355<\'\312?=t\302\006>/\331\242=\254\237\002>zN\304=\343\321+=0D\305=\345\347\265=E\016K\274$!\373=\024<\240=7\272\322=\265\036\312=\356;x<\303NU=\237\314\344:@\027\016<\356\203\375=H\227\276<\316@\233=t\241\263=\3769W=\262\005\222=\314\010\362=\005\030\370=\210\241\375=#\272x\275\021\357\350=H\200\000=\3043\201=!\353\320<\200f\202<}\311\326:\335R\214<\235a\002\275\324H\310<!\316\217<\237\326v\273\253\\\006=\377\345\222=7\273\016=\n\256\034=|\375\002=\r\255\026=\026\345\013=\375\353\026;\301\352\252\275\307\252\010<,g\351\274\t\307\301<\273E\365\273\3549\204\273\237j\207<\261\231\245<[\017\231<\334\216$;\006\366\307<>\3563==$\372<\325\3350\275\264`\016\275c\253\203\275\363\206\327\274\307}`=\002\201\222=\346\355\005>\325h>>\034\214\240\275\231\265\013>\273\244\372<\374\304\302\274\333s\224\274\343\0217\275,:\271:\177\026\021\275\365\371l=\373a\212=g6-\275\332\213\253=L\207\233<R\224\346\274m\260\365\274KX\210=\351V\234<8\310\240\275\254\257\2658\361\326~\275\272$\257\275ho7>e6\010>\324\321\004\275\362r\254=9\303a>\016N\253=*\2326=\267\217\364<\201S\272<\360=j=\314\013)=\034p`=\204\026\234=\206~h;\3118j=\265\310v=Zf\227=\270=\242=\226\261r=\242Jm=\315\243\204=\227)4<\344Y\363\274=\214\216<\t\275\217\274\372\254\031=\230\273~=9b\310<\246|\006=\332\315\037=\'\2771=:i\355<9\006\025<\n\211\301=\031d|=\263|[;\231\3165<\007)\010>Z\037\242=RD\244=\257\223$=p\302\305=\2753\237<\351\373\265=\010\010\350=\267\202\275:\017G\236=\312I\371=b\232\213=}\324\371=\024\032\017>\263\303\026=f\270\246=yv\336<\337\252\373<\242g\034=\r{\232<G8\207=\320\354\221=\232B\211=\322\2679=\302O\210=Q7f=\347\315#=E\204\221=7\200\315=5\203\262==\277`=\214\334\321<\264.\366\274b@\264\273I\021\007:\030a\304;\327V\372;\343\261S;>D\0108\0233\000<\230\nd;\014V\004;L\300.\275\010\360R\273\255\3409\274\320\331\347\273Q\225\216\273\371\007\202;\241\346$\272\230\014e<!\014\007;2(\201\273o\272\005\274\207\333\207;\227\2628<lB\311:34$\273\2456\013<qO\022;4\033\262;+\267\314;\001\007\206\274\232z\317\2736\307C<\207&\002\275.?&\273\226u(\274g\027\247\274e\206\023<\017\314\263\274\373`\234\274X\0204<7KC<~\224v\27300>\273\367lt;\205g\'<\273\t\232<\236\3064;\232\331j\273\300\3439;&Q\202<\340_\016\274\252\356l<\265\034\215\274\375p\027=\241\2234\274\n\334\322<P\346Y\273$\257j\274\314\306,<\230Ps\273\215\246\242\275/\342i9\255{\237\275\004\240\337\274f\315\006\275<o\t\274/\177S\271]n\213;\334\353\321;\010\r\0138\036vJ\273\'\351\312;\344\346\224;i\245\020;?!\'\275\340~F\274\007\016z\274\016\213-\274<\343!\274\033\244\231;N4\032\273}\306\004<\215\345Z:1:\333\273\021\233\303\273\000r*\271\t\330,<\262_d\272\332\347~\273\272\237\342;\346\030\243\272G\344\317;|\267\276:F\360\007\275H\344\375\273\353J*<\205=\033\275\2245\213\274\275~\301\271*$\017<\335\275\016\274\356/{;\245>\276\273\371B\344;\345\272!<\030a\272\272\216k\037\275\314\335\352;\204\316\005\275\370\363.\274&Wg;eL;<\336\205\354\272,\363\264;\235\353\2739D\203\262\273\023<r\274\317=\016<\276\352\014<\260\250\262\273St\277\273\313\323:<ji&;\274\206\373\273v\0077<\036\013\022\275\251\030\'\274\3563\305;\250E+=*\234\024=\013\336\t\274V\247\035=\361i\200\274\342y\357<\347\376O\274\353\031\323\274\nX\334<\363j\202\273Q\305\205=\302j\273;\210\331\227<\2665a;\025\007\304<\311Y\250=\352\336\225\273\254\006\202\275\346\375\317<zS\004\275\"\306\034=\320\332_<\362o\025\275\323\244\244<\314\323\251\272\344\037b\275cR\326<\301Z5=\342\341Q=U\033\216=\250\203`\274\020\315\205\273\215\241f\275\360\037\310<\317\231\350\274\225\340b>\3354X\275\270\364\237>\033@{\275U/\254\275]\337\332\273\030\374\205<\335:\233\275\374\234\005>\222\331\341\275~^\351=2\002\025>\301X\205=Hi\352\274\033\010Y=\031u9\274\'\350)<\347\373\207=\277\342\004\276\261\2771\275P\2414\274\266\0144\275\227il\276s\0201\276\256\3738\276y\2205>\002\223\240\275\206\257\277\275U\226\016>\272\304-=Y\251\244=\310L[<\240d[=\256\312p;\377\371\265=:\253\024\274\222\303N<\0375A=\313\010\204;r\370\213=\222\224\202<\317\035i<\352Oe\274\362\366\\=\254\334\360=\373\325\033<\023Z`;\345\314.=\311\235\212\274\031l9=a#[=\032\226e\274d\230C\274R\235N;c&3\275\317\230\026=\331c\317\274\371\312\271=\306\254\333=\304\220\007=\256\336Z=5\251\270=\\\235\014>^\036\'=\345\345\357=\010\325\271\275\254\022\214=\211\245\265\273\264\237\205\275\334_H=\274\n\352<\364\377\034>\267\261\365<x\247S\275\253\'\010\275\007y\373=\312\2024>\300\262\217<\271\374\354=\335\\g=J\262\002=\013@\242=\227`\267=l]h\274\264\232?=\024qO\274\267m\034\275\235\235\253=yj\032>Fw\030\274\341A\n>\337{\214=\022<s=+\326\235;\344\002\025\273\235i>;\222z\212\273\203\363&;\243\310\254;m\231#\272\037\217\312\273\372\334=9^\263G\273\351s\352;r\314\244\273|!\013\273\036V\3558b\005\2079\021\306c\274\337\213\343\273\354\372\352;\214\232\371\273\335\257\031<\272\312W;\243I8\2743\354\027;\314J\212:\367\273r\273b9\227\273\231\274`\272+\257\233\272\305\021\007\274=\320\001\272\225\205\221<I\177\233:B-^\274N\251D<u@\262<\"\332\214<\234\306A\274\031\020\035\275\002\257\224;\200\026\231\274\323]\031\275\325\321\205\273R\0319<\224\341\311\2734\007J<,\204\201\274\'\035\217\273\240\222\211<eu5<\207\310*\275j4\014<\275r\345\274YF6\275\031\1773\274\305\327\252<2E0<6\244\263\273G\251d<\016#\245\274\350!g;~\023G;\275\000\235\272i!\237\274`H!=\031\334\363;\361\026\301\273\276\203\334:E\025\274\273g\273b\2727\3138:\"\207G\273j\260h\274w\035c\272z\320\256\273}\0310<\203\014!\274\234\347\326\273\375l\016:\376\243\005\273|\204\253\274o\0206\274a\202\010<}\355B\274\320dr<Ac\206:\010\220^\274Q#\307:\367W?\272\2458\372\273O\005\344\273\"\221\000\273\027a[\273K\305\251\274\341\010\026\273f\252\242<\306O\201\273Q\342\233;\244Mm\273\224w\016\274+(\224\274.\3541;\223?\030:\327z \273\'H\233\273\272\274\027\272\352\264\006\274\321\214%;&\207\211\274h\217\205\273I4d\274O\222T\273\004#\347\274h\332Y\274\326\316\033\272\177\305\200\274\323_S;.U\346;\177\374\277\274\353\326\227\272\227 \340\270\227\020\036\274\355\332\024\274,\334\353\273\254\364\215\273\261i2\274\224<=9\254,\211;\031u\247\27369\311<5m\270;D\352\237\271H\203/:\237r\001\274C\016R;\377w\265:\347\375\306\273\342\332\225\272|B\320\272\217c\341<\007%p:\000\217\251;j\341\024;,\215\243;Zt\264:\246}\t9\351\003L\274O;\220\272\003?U:\256+\r<\313\367j;1\366\356\273v{\';w6\367:\242\313\207\273:\010x:`e\3407M\336\262\272OR\036<6N\265;j\371B\273\375\256\242;\366\265\340\272;*&<J\341\020<-\017\275\273\307\277\026\274R\004<\273\234\376M\274Q\350G\273\200\302\301:\377\313\267<\362\2641;\226\300\003\274\277\316\331;\364\334\310;\r\233\017;o\221\331\274\337@!\273;\\\004\274\345`-\274_o\204;\006T*\275\035\002\014<}\030\036\275\2177\224\273=\325G<3R\240\274\251\224\365\273\320oX=\177\200h\272A\275\230:7\000\370\273\2559\342<\301\265\002<\024:\r8r\227<:\312E\352\273\262\217\375:\374U\037;\351\t\335\273S\334\267\272\000\370\314\272\'\004\326<\332\335\232;\274\342\362;\364\276$;\343f\r<Vf\010;\257*\235:Xt$\274~\036\365\267_\323\276:\017s\006<\034\310E;\355\345\357\273\215^\246;\007\222j;\367\013\205\273mF.;\235\007\006;;\n\226;l\273\243<! .;\342HM\273\206\366\000=\331\226J<5jK:\360\023S:h\243#\272x<O8n!\205;(F\"\274\220\320e\273\010L\210:dD\321<4%\204:\372\246S<2>\';\003\322\036<\031\371C;bD\231:\360-\220\273\004\236\3119\017\3244;\236\213f<R\016t:\372\035\355\273\332P\002<^\266`;u5\204\273\021fJ;\200\0322<\247\3150\274\310\345\275<\354Q\360;\022\240Z\272/V\340<aJ\333\273\233\370\t;\231\n\002\275\267\266\036\274R\277\177\275\r\331\364;v\356a\274\311\336>\274@\226\370\273\343\014\232<\236=\265\271\273J\214<&\324^<U\t@<\362/\033\274\372+\252\273\252\2140\2757GW\274\240\217\312\274\367J\353;KAN\275\224\350\237\272ZN_<\352\323[<\370\317\234\274\366\322I\274\252<\031<M\030K<\017\374\244\274O&\300;\034q\222\275\235dX\275\334+\344;\211\343\220\274\304\216U\274\244\231%=\207Xo=\271%_\2755.,=\020\316]\275o$\315\274\210\211\244<l\350\n\274\005/#=\023\331\215\275\000\"E<\035O\305;\300\330\223\274z\360D\275\2776\202<2\300\237\274\360qB=\337\207\227\275\273&r<\'\264\004\275\206%\273\273\3149\234\275\270\306/<\243W\003\276\024\200\330\275\3108\221\275\275\214\341\275\236=i=\002\340\002=\276F\315;#X\200;\311\003(\275\025\256\273;CX\027\275Lrk<\016~\347:\3373R\274|\255\202\273<\276%=P\360\342;\317@ =\302hC=\340\tg=\023\021\005\274O\236\017\274\333l\303\274\\\034\272\274Y!\255\274\324\020c\272\252C\210\275\036\354\026:\2744h<M\3158<z\024\243\274\352!\266\274\261\333$=\331w\277<\242`\324\274\240\331g\274-\364\265\274\214re=F2\372<\0107\371;\023{\233\274~4q<\333%\010\275\220G\010=\206\325\246\272\206F\025\275Nm\222\273.\034\277<\373\016\377\274\223\275,=\367\323\014=P\r\263<\212\247\223\274\307w\244\274\351\024\316\273\263Z\002\275 \372\301\274\375\235\014=\375$\025\275/\3041<q\217C=:\311\220\273\350\234\204\274\370t\303<\302\027\220<\3665\024\273\322\353\272\274\367*\026<\2140[\275\213@\321<%\221\326<p\301\002\275\322\013F=\336\377\016\274\251a\367\274I\304\212<j\023<=\372\3624\274P\027h8|Q\253<\240aE<\302E(=n\232\010< *.\272n\033\366<m\300\344<\275\334\017\275\313@\037=\200\376k\274\337\356\345\273\211zW=,\315\321\274!\324\200\274\231\025i<+\007r=\210\211G<T\317\250\273\335l\245<\tAQ=\251\266o\275\367\301\273<9W\271=\006c\n:\352\020\233\275\010\313x<\221\260#\275\241 .=\310\002\330<D\250\275:>\217\213=\362x*=R\036\204\275\370\335\';x \362\274R\200\255<>2`=V\340\373\274\224<\034\275\254.t=\357\263\363\274\030\274_=E\334\\=\325\200\267\273\233Z\237\275\371L\325\273\262+|\274\"\337\243\275\231E\300\274\373\271+\275#o\337=V`C=\221n\267=\247!\254=\032\320\252<\322\362,=\263\236\260\274\037\272\200=\376\267\250\273\r:>=5O\334<\022(\223=\360\030\317\273\223\2744;\021\372\253<V\265\035\274\252YE=\357YA<\310\226\036;y\366]=r\0055=R\3068\274s\374s=\216\363\'\274\351Z\337\273bd\274=\202\252M\274\213\265/\275l\352\004=\010s\226=\351\235\026<\006\264m\274p\257\r=\373\271\234=\364\004b\275\265r\223=\3215\r=3\371\005=cm\256<\354\r\234=aM\243\272<\200\007<\210\233\322<7\310c=\372u<;{\302\260<p\023S=\253\016\007=!&U=!\234u=\350\233\373:/\212:=6\037h=\272\316-<iy\257=\002\271\203<\\\264v\274\216R\307=\254\315\203;k\022*\274\233\014_=\026\241\222=\304\205\242<LA\261;\304\305\204=9\216\315=\250\347\210\274\210\327r=|\375s\275`\364$\275\t\223\226\2741\333\013\275\240\236\363\274\216\035\037\274 \253E\275\363\2416\275\361 \220\274\003\274\036\275\257\315%\2755r\r\275\227\243O\275\027\350W\275\271\225G\275w=\177\275\2564\364\274Z\343-=9\236\337\274d\360@<\232\3161\275\313\207\033\275K\344\264\274\276=[\275\325\321%\275]\365\325\274\\\247\002\275\234\312\211\275\224\211\210\275\177R!\274\273\301\035\274\002\2746;W\2769<\235\023\245=$\374\315\275u\336\026\274zPN=\177\306\"=\265F\267=b{\033=\254\005\331\274\237&Q\275E[\313\2755\3213<\326\243\342<\013\206\333=@\221\303\274xH\314=\271lt\275\243\332R=Q\300\241\275%\320\223=\034\014\322\274\253\354\317=G\364z\275F\004\217=\000\251d\275\357b4\275!\354\226\272\022\026`=\244\2700<\217\001\005\273s\017\311\274\202U\035\274\325\353\320\275\244R\316\275[(\364\274N\177\251\275&\013\235\275\326\267\235\275x\273\315\275\006C\372\275\025\023\032\275\227\016\202\275F\321\212\275\002\265\262\275\274q\322\275\216F\320\275+\004\347\275 \373\314\275.:d\275\340 \311\274\221%K\2759&\310\273\273\214\270\275\361\211\371\275P\212|\275~\224\323\2757+}\275nft\275@@\323\275\264U\251\275\003z#\276,\272;\275\366)\213\275 \354\022\275\242\3514\276\271d4\276\335u\257\275\2021\304\2755\242\"\276\037\032\274\275\253k#\276\200q*\276\225$e\275\244\231\347\275\234g;\276\362u0\275\260o*\276\275\257 \276\201\205\014\276\240R0\276\377\302\206\275+M\310\275\'8\226\275\'\366@\275\370\233\374\275\335i\352\275\2475\340\275^`\r\2769\271\346\275\013\202\260\275C\366\004\276D\226\025\276\343\245\037\276\311\252\231\275\243U\r\276\236\344\214\275\205\276*\275 \3124\274\350*\004\271z\034\024\274)T\213<\210\322\013<3\177\230\274\013\025@\274\305\2464<4\354\367\273|\244\024\275\017\n\204\274\322\256\330\274b\032\206\274\364\013\237\274\361\237\007\275\307W\220\274\256\263\024=r.s\274\313\341a<>&p\274\3448\010\275\027\205/<\352!:\274\241 \232\274j\357\213\273\261\236\241\273\n\237;\274\373i\307\274\267\262\247\274\345\200\231<\352p\200<\352!d\275\"\202M=PX\265<\252\353\"\274c\2638\274\254>\265\274\245\311V\274\252B\261;\r\226M\275\n.\372\273\236\257\344\273\310\250\370\274z=\357<\261\367\325;/\022\231\274\023\003\272=\2628q\273\213)Y\275\202\271=<\261\010n\274\222\211<\275%.0\2756\373\206\274v\241\254<7\354\334\274\262\322\263;\277\354O\275\220\320\241\275\317\371\217\273[\271F\274\305}\004\276\004\2159\275\017x_\275-d\374\274\t\326\002\274j\330\273\274\277#\207\273\236>Y\274\177\034%\275\326\377@\275_\2739<\325\007x\274%F\035\275\243\306-\275\013\356K\275\246e\366\274e\235I\275\214\3617\275\344E\004\275%L\017<f\226\335\274\005\2317<>\306\304\274l\332i\275Jr2\273\221w\353\274Tu\017\275AK\246\274\352^\275\274<\327\250\274u\226\216\275U\336\\\275\226\333\367;\272\262\r\274\243\200\255\275\346\232^\275q\364#\275Xb@\2750\344\343\274\362\263a\274\024\003_\275\223\223-\275\001\271\000<\274_%\275B\352\226\275\026B\277\274\311*\213\275:*s\275\232\342\023\275\266f\214\275\257\241)\275u,\242\274\3537+\275Q{i\274\315K\027\275&\262\202\275\333\337\254\274\212\016\034\275\271\203S\275\301\234\002\275\230\016,\275{\376\033\275\\\313\027\275\251\177z\275\223\267\r\2750\t\264\274%\362\207\274M\374\221\274\224?\340<\301EE<\2005:\275H\275\272<\354\2360\274\215\004\316<\243[\361\273\333v\001\275\022\377\210\275\200\"\257<\354\340\275;adq<N\371\006\273u\317\333\274N)\276<?\032@>H\202\034\274)\"\341=\025@\204;R\260g\274\2365\223=\232\300[\274\304!\232<\014\264\313\274f;\000=\027G\336\273\210.,\275H\277\343\274V\213S=\347u\200=k\036\202=\3321\016\275\024\211\257;\237n\002\274o\230\306=\337C\275\275\\\016S=\254\204m<\324\305\014<\215U\304\272\236\236\256\275\363 \250\276*&\275;\206L\205\276%\036\220\275X8\376\273\rj\223\274s\311\271\274\311\233\226;\276\337\201\274\347T\224\275\233\321\232=g\355\365<s@\014\276\275\246\004=\\\212\263=\315\321\343=\350\214\'>%\362\351\275\023\000\342=\234\277\243<C\227s=\335{?\274\004\262W\2740\010\010=\324a==\361\016\212\275\315\016\014<\374\024f;\366[\032=\233\264\234\274\310\255P\275\rO\016\275p\357\346;{G\352;\343\226\256;\273\360\252<0\025z\275\3228\021=\265+%>\334\300\303\272[\n\325=1}i<o\241\235=\261D\251=\356BB\275k\266\333<R\354\277\274\264uE=$Y\225\275<\202\037\273\375\004\376\273\302r\231=|\366\275=\301\326\263<\035\253\254\272z6I=\274\352\373\274|\034\314<\251!\221:_Y\330;\301\204\363=\252\254G=|\254`<\251b\245;\017\204\262\274Ee\234<v\357\217<\rl\247</al\275u8\025=\212\\\304=\035\212\214<\352\221\254=\276w\356<\315\333\243<\260\350\265=6\346~\274A\266h=xM-<\240\030\211<Zl\232\273\314\301\335\270Iu\360\274\332\251\214=\023\024\267=^\2174=\332\366\3379\262\233\207<OUB\274\235\2564\274\254w2\273)\217\344;\372\315\363\273X\264\307\273\352\r\024\274N\327:=r\343\024\273\224\323u;\"/\242;\302\316\3179\032\353\240\274\326o-\274\240\020V\271kSC\274r\264\t<\373\325\232<\347=\267\274\234n\341\270tm\361:\325\323x;\231v\206\274Z\344\306\273\025\273\030\272\300\024^\274\320\377\210\273\376\372H=\007\264\243\274\016\263\241<\372\260X<\034\227\201=,\007?<\206\262w\274\207\201\203<\302o\205\274\263\207b\275\255\261\223\275\250U\203\274\352\214\260<\224LA\274\203D\004<k\270`\275\003\276\366;\247\r4=\242\242 =%+\217\2751\202\034=\2645|\275H\252\213\272|\306\311\274~\204\233=\333_0\2756\256\205\273\004\374\325<\005\342\325\270\357\266G<\276\206*\275\321\002\225\274\353\314\316\274[$\022\274n\027\223=\274\216I<\204*\352<F#\255\274\332\316\037\2746ev<K\315\237<\3765\226\274\342\232:\274\243{\200\274\332<\216=\nf\022<\370\372I<\355\t\223<\021w\232<p\267\023\275<\017\236\274<\333\270;Un\334\274\'F\005=\236\334\362<BX\234\274h\237\257:m\374\004<\001\231\237;\022N\230\274m\021$\272\001\312)\274\364\274\265\274\264\351\264;\037t\213=\035\212\235\274\204\207\205=p\234\323<\241\243\005<\377\267^\275\032\010\305<\255\230\356;|\374\236<\264x&\273\354\035\002\274\313\201\251\273[5N=\177;\000\275\304\374\361<hSv\274p\023\331\270W\030)\275\321\352\275\274\315JG\273\3537\024\275\227\034M<\310\305[=WB[\275XU\277:\200L\260<r\256\232;\216\225\326\2746\222y\274g\022\221;\250\026\366\274d\'\335;\022@0=7\021\205\274\352\020-=\004uO=\236\225\261\274\377Z\177<\"\020\261\274\260\024\204\274q\025|;\340\337\022<7\344H<7c\177<&IR=\342X\263<\334\326\004=\330\211@<\\\345\n=\345\236w=?\0227<\010\250\217\275\206\347\324<\335\220\274\2748\315\370:J\224\003\274\352<\014\275u&\201\273\250\351\224\271k=\256\273a\024\034<{r\257<B\271\016=\2323\210=\"l+\2752c\204\274q\330R\274\315\365\200\272\3668\234\275\247\207\026>\214\354\016<n\273\373=\372\314\253\275\350\274\030>\303=b=\035I\273=\375\211\264<S\rx<\353n\020=\373\376\336\274\350l\235=\372\227\346\275\016Ib\2750;\376=J\303\251\275$A\2678\305P?\275t:\246\276\234A\241=>\267\216\274\306\351d=;\246T\275C^#\276\\*\331=\323n\366\2754\311\032=\340I\203> \001=>\336\344]=}\335\204=\226\0232\274e\235\374<\254_\212\271s,N=\214\312\204<\203?\037=\250Z\300<\351\340\311<\035U\023=\025\314\016=\221\003;=t[$<\005%\250<\213A\265=~0\302<\030`\345\274\276\221(=L\310\'\274\327t\005<n\255\024=\177\341c\274\004K\262\274W.F<\304\304\3709\366\357F<\225\214e<\014h8=!\032\275=\332]\225\2742\213\252<\226\205\256=\234\272\224=\0134\025=\307\t\220=\357I0\275\t\350\037<\251\355\343;\250]\260\274\362\271\375;\3675\227<l\227\260=\206\310\215=\210\317\200<\341\022\251=\335\245H=\234\021\201=\246\317\334<_\033\036=h\211j=\230\007$=,\232\236;d|\231=\352Ct<\330[\227<\016\265\324;\311\213\374\273K \354<\330\000\241=\265\206\352\273\375\001\005>*=\r=\017\214\250<<\037 \275\257ZS\275\374d\026=\367\001\014\275Qo\333\274\021o\305\274\033,:<\330?\035=\246(\347\274\201&\224\275\317\351\210\275\232\365\324\273-\362\311\274%`\324<r\315\333\274\353y\205\275J\267=\273\232/\r>\262\376\035\275\270\335\224=fG\233;\300d:\273\244\000\274=<\221\370\274\310\342\026=m\202\200\274\341F\033\274\332\350\r\2751\032U\275\305\231\253\275G\024^=\370\347H<\035L\324\274\3649\342=\325\234\236=\234Z\035\274Nt\323=u\257\007=\357=w\275cI\347<\205SS\275\245:\354\274\365\252\341=\364\320\204\276\370\025\020<`X\372\276Fu\037<\236\341\243=\217\332\006<q\374\315\273\314\377\212=$\352\230\275\251\350\342<\352D\252\275\2731\224=\313\2465\275\227\353\305<\022\214\360=\205D\250\273\247l\341\274qaJ\276\216\376\246\273\264\357\016=\352\243\305=\002\340\013\275\303\353C\275\354\317\016=(\227\016\275L$E\274\330\033\210\274\205t\315<\375G\374<r\023+\275\216\236\273\275\214\3434\275\231\317\337\274\347\206\234\274\210\000\371<\325\267\227:nE\237\275\0025z\274\353\373\322=\360\374f\275\227N\205=e\212\033<\344M\030\274\276y\312=\325r\317\274;9\365<m!\324\274r\255\021\274\371\225,\275\344\347\354\274}t\275\275\300\234\035=g*W<L\300^\275\t\003\200\275\300\310\377\272E<\367\275h\335\315=\313\317\273\274\217\251\010={l\354=\320\307\277\274\031\211\226\274+%\260\275\216\204\"\276\303?\360<\257uE\275\\\326\247\275\315\371\r\276\313\315\035\275>8\000<v\324\223\275>\214\024=\260=\341<5\264~\275t\224\274=\205;X\275%\323&=m\276\362;\316\246(\275\031\345\355\275\362\216J\274\341J\021\276P\311\322<\200\264\2309\332d\267=\031}F=\241<\352<8\227\007=\010]\316<us/<\301e>=\037\2537=sjj<\r\217&=\375\246\244=r\032\"=\242\030y=i\247h=]Eg=\267\t\224=,\365\024=\035yF\275\246\315\002=CG\344\273\350\231>=\221\276/=\010\232Z<m\242\\=\341IR=!R\345<%\303\000=ub\201=U\300\205=j\266(=\036o;<\200n\014;4G\302=D\034\033\276\344^\005\274>{\335=\345s6\275\"E\270<\377&\\\274\020|\004=\346Xk=\350\271\351:\232z\223=-\347\262=C\311\201=\323\315\007\276A\220)=\033\020-\275\001\337\000\275\353\266\004=i\0315=\005E0\274@\205\027=\277\030p\275\264\274\241=\303M\302<\365@\037\274\257b\237\275\332\350\255\275\325\315\007>o\317\037>\'\036U=!\304\267;\213\032\007>\274\276\r>\n\005\346=\002\201d=,O\226=\341\266\222=\303\201\221=\366\233\310=\243\031\010>\005\335\031=\373\002\224=\226\303\353=bI\310=4\017\353=\374c\342=\036\264\372=^\373\344=U\327\227=I\203\346<\331\377l=\352\220\232<\357\014\243=\232\374\373=Rim=\335d\251=\347U\277=\342\r\207=\357u\271=\023\376\251=\364\253\037>>|\301=\001\336\244=\370@\203=\365\253n>\245\2379>\237\274\305=c\003\374=\326\333\025>t;\262=\251\032$>\014\2079>\273of=f\340\001>R\216o>\213\317\231=4V6>\300_,>e\330\026>o\357B>\0332\361=^\204\363=\356\320\344=\372\254\232=\362u\367=\025\213\t>X\222\356=\205\302\364=\001\361\024>\300u\351=\205\331\007>o\235\014>\277\177\022>O|\006>\366$%>\371[\330=\310u\347\273!&\373\273\247\362G\274%\301\024\274(5\323\273Md\036\274\243\310\r\275\303\223\253;N\230\272\273\273\302a\274\033K\241<\003\016\214\2735p\037\274t\007\227\274\341\250\236\274\365\031\271\274\232G\347;\240\200\225\273\025\236\375;RF\251:\350\301\014\275\313\252%\274s,\205\274A\003\365\274\220P\002\274\331\363u\2733\013\214\274\360\341\022\275\361\007\345\274[\306s=K\201W\275c\013E<+\333\332=L\270\273=qK\260\275 \325h=`\225\224=\325\321\327\274\033\257Q\275\226\2357=K\222~=C\300\010=\244\2237\276j()=\365\232\347<d\t\t\275\367xS\274+3s\275\300\374\374\274\263\346\006>\317\013i\2759\303\014>\231\253\317\275\350\226\034\275\337\270\014=\202h\265\275&\220\n=\301\207\'=u\004\273\274\232\035w\274\333Z\277\274\210&l=7S\377=\317\203\017\275\373e\304\274\303\306\001\275\032\232\342\273e\000\000\275;\331\024\275\263\210\023\275\265|\203\2758s\335\2740\270\331\273\212,\325\274_\nN;\020.\317\274\224\206\035\275\316\326\033\275v\333d\275YA\017\275\371I\221;\354{>\274V\031\002<\305!l;\274\370^\275\243BK\2754\335\365\274\246\217]\275\\Kt\274\370\252\230\274\273\025B\275M\025:\275\033d\261\275Zx\253=O\306d\275\030\276\026\274\373wX\275\3171\204\2755\023\206\274^\366\t\275 \361\255\275\304\226N\275a\216\274\275\320\277t\275#\253~\274\332sm\2759=\002\275\256\265\264<\031\311\205\275\321\0209\275$\267x\275Ag\206\275\343N\024\2733\327\273\274\333\\<;\262\230\024<-L\271\275]\231\222\274\017\0338\275\325\301\261\2756\243\322\274\257\362\n\275\341l\252\275\315\361\241\275S\270\231\275G>\250=\\\265s\275 k\346\273\331<\030=\354\355\234<\371f\220\274\237\343X\273\'\013\237<\267|\324<\220\323\010<\005D\352:\323*S<\255\205\256<=GA=\245K\271<\\[\226<\2334\362<k\262\224;4dg=P:O\274\255\207\262\275`f&<\211\307I\275\0350?<|\350\223;\312)\312\274\236s\245<\203\266$9\037KE\274\277\'u\274D\202\034=\277nB=c\321\261<\020\364\030\275\215\217\n\275Vf\024<V9\334\275\335\003\211\275\007q\023>\016\030\346<\221\362\013=dx<\275\371w\010\275\034\270\367<\305\373\214<\345\">=j\001\370=\021}\205\273F\341\263<\277\272\356=r@\222\275<nm<\257\255V=\306\277}\275&\003e\272\022H\332\273\340h\334\274\216\236\230\275ec\177>\303\376\365;oa\203\275h:S\275VvV\276\033\243\n\276Wb\200\275\024\273\245\275\241\377i\275L\022-=\256\251.=\335Zo\274\340\036\330;\t\261?=\002\207\207=ET\255<P\253\014=#\244\277<\365\343\362<\244\346\r=\021\262\217=\326x\000=\243\226\177=\316\344\371;#\237\252=\273 \351\2739V]\275A+\261<f\033#\275\003Qb<&5\220<\n\3560\274\027\352`=\365\217y;\016\264C\273i\225\306;\323\022\231=\265\236\311=n\372\031=\327\177\231\271u\310\275\273\002\236\200=\033\355G=\375@P<D\277\232<\204<\200\274t\336\265<*rF;\031\r\356\2746\332\'\273\010\304\261<38\232=\325\346\001<\356\312|<i\r\031=g\302\020\273\302g\225=\212\016B;W\352\003=#\311\352<\353\312\302\273\317\223\206<\312\304\013=t\273\200\273\032\342\351<$\t\240\274D\202\001\275n@4<\023f\013=\323\323Y\272\005\3528=\262\030\361<\2212\214\274\246\264\306=\216\332\314<\262\261\276\272AD\203\274y\347\253\273`\262I<D\360\341:eo\240\274\374\257\3579\240\004\274\272\210o\351=?0U;\265\312\342<QDz<\372\244\'<S\273\311;\230\241\036\274}sV\275\312]\035\274\017\250y;\225\231\216<1\'\307\273p\314c\274gy`<M5\010<SP\204\274O,B\274\365\275\376\273\274\247\266\273\340\214\276<|\266\223<\264\355\265\274\244\270\242<\205\264C\274t\210Y=\372\316\022<\261c\r\275R\247w:nF_\274\375\210Y\275D\205\256\275*]\017\274!\236M=\245Ny\274\200\237\320<2b\003;\307\310\203<\253\275\355;\347\r\013=\370\356\263\275$\372\014=\276\016\267\275\214\207\214\274WbW\273\233\346\002>r2@\274\3348\017;\022\222:<,\t\351\273\007L=\274e\023@\274\233\241\024\275\340f\364\274\266\311\336\274a<\t>o\r6=\312\2021;MX\333\274\276\274\204\273zj\224<\030z\236;\257\010\021\275\302/\024;e\271\032;?\021\022>{\263\335<C\000U=\341\014\227<\350\221\345<\200%\206<\037\\u\274\253\202>\275Y\216\204\274b!\035<\317\325E=\223\346\275\274\0378\351\274\214\036\026=\361\240t<\206\333\361\274\335 \263\273l\367X\274\006,O:[{g=\257\364<=\013\200\014\275\033^\n>\002\005\215=U\221\";\276\337\005\275\3021\276<\315\332w;\275\235\220<\260\360 \275\256\'\022\273\001\025,<\213\r\t>\351\312\004<(%\230=\330\372\230<\240+\316<\325b\330\273\007\213{\274\254D\372\274\235]\250\274\335\366&<\231\334\271=x\222\365\274`@\315\274}Nr=oJ\014<\202\223Z\275\314\315~\273$[\200=\357p\023\275\277U\237=\014d9=/x\213\274\265\266*=\310\223\310;r\275\004\275UF7\273\034*\352\274\227\301*\275(\351H<\242\247C\272\024R\206:\037I\351\27300}=2\336u<\315a\375<\266$v<\314\377\013=mJ%<X\331\0108\333\276\266\275\327\020\021\274?\264B\275T\333Z:\353\220.<\233^\000\275\332\315\000<;|.<H\241\356\274\036\252\2548A2\355<\2408\307<\005\205\342<<\203\362\274\3272i\275Fp\373\275\020i\265\275\343\233\377\274X\271\276=\277\372\277=\016T\r>\255\n\014\276\246\375 >S\177!<g\333\311\274Cq3=\256\311\301=\332\366\365=C_\006=\247j\261\275\262)\233\275\242\257Y\275\003\207\263<7\353\241\275>\261b<>\215\037\276\010w\307\275ngw\275\002\350\365\275(\036\320=\235\263\305<\362\343!<>\001d\276`\3662\276\327\213\305\274c@\001\275\034 \210=\317=9=\327\2767;\004\033\374\274\273\254\307\273\013\031\025\275r\353\235\275\023\231}\270\301t\263\273\036\347\307;\214\303v\274\370\325k=\036\037\025=\373\260\001=}Zv=\'`3=\257g\":\330\273\2209\017\271\205\275\2325\225\274\322\254\'\275t\327(\273\020\004\230\275\006;\030\275\010`\332<Q\342\213<\371\215\202\275\263\340\277\274\260\270\343=$N\314<\362\214\321<.\327F\275]\202\225\275\327\235\242=\225Z@=\3203\0239\257c0=#\034\213\275\005\312\276\275\333\260\014\274\304\005y\275\262`\373\274\002\3202\275\336\213z=>S\016=.\214\223;\231&d=\211\tW=\221\362\340;\016\017\016\274\3347\235<l\375p\274\234\177\344\271\315\t\035<\335\347\366\272\310\356\223\274:\003S=?\205-\274 \252c\275\372Q\346<\363\311\253=\311?\203\275\277\212*=\374|\231<H\201\220\275\366\203N=\t]\021<\245v+;\314G\200\274\243\226f\274B\226\235\273\303g\203\272\270\340(\274C\302\255\273\"\331\034\274\017{`=!\221\036;\343\271><\027\351\t<U\206\334;\210\244&\274n\177\030\274\222m\233\274\266\365P\274\337\216\256;\t\r\261<\306!\005\274\003\006\036\274\010\357\205;0J\375:\352\224\313\274PC \2749\255m\273\333\365P\274\234\330\000<\"\304\022=\345\327\255\274~-7;x\333\356:KcC=*u\354:\215U\224\2759D\315\272$\326.\274\2109i\275~\241b\275\226\236\021<\271\353\303<\252\263*\274\364\034$\274\022\3620<\227\332\307\272\016\372\037<\324j\326<\013\325\210\275\323z\244<\342\2772\275\273\351\030\274\223\251\306\274\337/k=xB\021\274\010\222I\273\025\333)<\307\233\334\273sV8\274\3040\246\274\007\177\245\274Q&&\275\'\375\224\274\223\303\204=\300\036\215<\215\210*;\320\256\237\274r\263\223\274S\227\260\273<\357 ;\373[\267\274\300\341\002\2746FY\274\032P\203=\210*\241<o\263\255<\n\214t;\206\274\335<Z\371|\2745uL\274\346\253w\274\032q\234\2744\245.<\302\322\340<+\250`\274\213\006\217\274\330\246\241<\265R\246:Og\000\275\265bn\273\032g\362\271\340\371\\\274;\217\237<\263UC=>\000\322\274Ij}=\'\237\374<\201\331\035\274\004k\006\275\226\310\027<\177TO\274\252\233\013;\020\275\274\274]uw\274W\216\371\273\360\014O=l\306\267;\376\356\036=8\363\217\273\330\260E<\226\354\226\274\344\266\222\274\3605^\274\270\255\342\274\237\237\200:f\371Q=\345{\033\275Hv\226\274\232\021\002=\300\2549\273\003\2408\275\'\273\031\274?\343\361<\351\307c\275T\356\245<p\262\002=\261@\253\274\013\300\221\274\316\347\023\270\204\360\350\272\374\035\357\273Bb\232;9\350G\275\275y\'<b\371\365\273\316{N<Z\300|<\006\020\375\274g\335\234\272\326)(<\313\331~<\006^\310\271Oo\364<\\s\020\274}O<\275W?I\274;\376S\275\203d\371;\250$Z\274;\365\325;P\230;<\264I\370;\036\305x\274\300\r\253\273\013.%=N\333Q=wGk\275\225Sn<\306\330\231\275\261\2215\276Py\005\275/?\000=S\346`\275,m\207=5\375\024=\037\376$<\373q\230<\376jp\275\210\256\260\275&\220l=\250\300\200\275S\003/\274y\216\376\275-\023\343:\211D\201=\360\221\032=x5\311\275\225U\310<L&\235\274\365\232\317\275\3241\005>\3263\323<\227\216\006=\372\340\377;?n\314\274\325%S=7\000\245\274\275\270\321=m$P\275\312\357\263\275%\342\257\275\303\tg\274U\370\270<\362UZ\274\335!:\274lw\373<\363(\315\275w\016C<S%\262<\317\273\242<\200\331\325<[\315\005\275\031\326\307<n\242G=\305\370<=\302?\315<\276\325\377<`B\223\274O\356=\275\236D\301\274\251[\211\275;\333\270<\352\006\202\275}\214\273;\344\330\025=\020\353\010<-:\014\274xo\311:V\310@=\343\022\304=_^\300\275\301]L<\247\254\216\275[\354\351<\215]9=\215m\366:8\377\247;1\2701=\247\037N\275c\223\r=\372\265\036=\\\267\232;\027Z\277<\362\235S\273\221\353\316\274k\271\201=\344\033h=k\303\031=\\\343\325<t\005\000\275\034\360\227:\034A&\275iiP\275\306>c=\334\237\032\274\340Q\360<\317\316\223=\030\\_\274 Dk\273>\2054=\224\177\226=\277\020\177=\266\037\267\275\252\333\"=}\261\235\275\372e\355\274\302{\014;\300\234\207\274:s\021<\346\271!<\375h\004\273\356\2040\273\254\332\262;{\303\260;\237\335=<\205\355\342\274\312\"8;>\236\223\273da\"\2736I\253\273)\312*=\\\240\332;\255|\033\274\310\2714<@*\214\274x\215;\274\344-\350<z\023\322;\376\307\363\272\035\273\234\272_\177\337;\265\021:\273nb\371\272\310\332v<jA\016:\177x-\275\265\232\214;\325!\333\274\237\344A\274\221\235a\275\216\200\'\274i\223M<\315}\216\273h\214D;,O\325<\207\250n=9\362Z;G\345\3419\370B\346\274\257\306\033=\002\372\250=\354\274\243:M\347?\275(JD\274\260C\204=\275\006\355\273\241\350Z=Oh\335: \212\363<k\201\201\275x{&<\214\\\006;\3613C\275\246\334n<\320\370q\275\206y\324=}L\264\274\377\253\311<\263\306\214;,\301^\275\271L\001\273J\313\321\274`\n\205<\266L\027<~\030\245\274.I\001\274\326\374\230<\367\031R<\260\033\245<\022<S\275\372\366\232<\250\205\215\2731u\310\274\202\233\003\274\257J\221= \322P<4p\342\274\300/\312<\365\2718\275,\005\251\274\t\356\336<\255\246\027\273\030\347@<\034i_\273Ne\202;\207E\234\273\201\3236<\267NO=\335\263\334\273\371\233t\275\214<!\273\270\222/\275\357\377o\274\347v2\273\005Vv=\'x\013\275\2438{\274\365\265D\274\352\311\322\273\204\371\322;\240\346[<\357\271\006\275,A\224=\213,\210\274\373\204\242<\223\256q<\371\306\230=\026\301e<\350H\354\273;t\371<\234\355\243\274\267V9\275\035\314Z=\357\267\n\274`s\335\270\370\2313\274>\237C\272\334\023\203<\007J\314<FRn<\177!*\274\001\206\301\274;\200\016\273\230\360\232<\361\233\360:\233|\234\275\013gg<6\361\300\274\240\331r<\305\335\245\274\027\251\332<5\355\236\274&w\377\274\217l\333\273\376\364\216\274\242L\264;\r\262\212\274\253\200T\274\300\213\220<\242O}=\311\335o\274\362f{=3\265\003\274`\323\246\274M#\024=@T\004\275\304\252\020<\022\006\200:\214\025\231\274n\204\270<\244\036?\274\222\030\036\275\030m\231=\0020\232\275\313\266\343<\356\312\241=;\315\031\276\213Yd\276^T\221=\352\004\263\276\217\006D\276v\271|\274\017\361\340\275\275\264\025>\274\275j>+\230\257=\3126.=W\200\036\276\332\365\214=\245\331\232\275Us\264\276\'(w\274\2575\373=\334`!\275\217M\021=\350\321\023\273c\016p\276\222\220\277\275\311*,>`\257\360\274Lom\275\217\342\276\275\266^\235\275s\237\254<\345\2735=5\224c>F\013Y\276\257\201\266<\376\213e<\306\354\242\275\234\375\273<\377[f\275\260|/=]\006\243\274\242MY<\017V\204\2745}V\275k\372\037<\362\027i\275\020T\350\274\2110\017\275\261\374\r\274\223\030\030=o\372\262=(2N<b~\242=M\263\000<\327\376\373\274#b\200=n\307\261\274 j\272\274_\005E;zw\333\274;\243s<e/\326;qA\327\275B\005\332=[\253]\275K\237\225=\200\255\325;\303\302\372<W*~\275\333h\232=\250U\260\275-)\232<\301\213\355\274\351\207\240\275\212H8\274\207\352\"\275\302\031\300<\270\314\203\273\362t\260\275\177K\240\275\265o%=\232R\342<\002:\337=9Z0=8\201\314=_\235\206=\357qg\2754V\261=\246-\024\275\315C)\274\000;\206<\016\346g\274\"\346t=\266\357\316\274[0\324\275x_\021>h\024\201\274\230\347\230=\247\231\025=U\327\223<<\003\272<\013<\256;\302\311I<x\030\340:IY/=5\330\224;\376\356\244;\241\342\226<3\235\227<\034k\253<\230q\311<\302\362\377<US\026=\034\203\337<\006|\211;\343\371\010\274\026\347U:n\316\272:\307Y&=\215\202\t<V\223\213<\201V)=\302\225\271<\225\260\364;y\320\230<\200\230&=k\t\006=\331\323\027\275\236\333?=\302\307\247\274\251\364\320\274zO\014=\244o\337=\274\321O=\260\226\247=\243,\311=\274\361D\275e4J=\002\375\'\275\234\344\201<b4\025\275T\322\300\275\324\245j=b\201K\276\313\307\022\274F\005g=\256\020\265=\357\262m\275\204\331+==\274\264\275\337\260\256<\367\373\023\272K\361\262<\027, \276\027\r\301\273\177\007?=\363f\321\274\2155\374=\276\005\010\276\343/\202\275\214\r_\275\2505\341<\014\330a=,L4=\235L\003=\346\256\306<\010\266.=\312\0229=3\267\241=\025\335B=:\t\032<\215\211\017=`\n\010=H\360b=\266\301x=g\234\200=\211\027\254=\220\343.=\325\370Y<\236\r\254<o_\000<_\212\001<e{C=\215<\210=\037\235\035=\267}\215==\267\020=\033\211\365<0\232Y=:\272H=\312@\333=!\030\024\2750\020\\=^\216O<b\004\321=\377\334\250=&\226\027=\022\361\035=\341\264\303=0\374R=Y\355\350=\310\307\243=\301K\237<Yd\224=\016\363\253=5\035\332\273c\311\327=\314\\\207=b\230\240=\210o\233=7\241|<\266%\000=!\027\247<\323K/<\217\001\311=M]\031=\265y\201=_\030\240=\351\006y=\363\373_=\264\373\254=x\210\205=E[\270=\3109\342\274\276\254\230=\013Kt<}_\211\2754\344V\2743i\207;\315I\200<\026 \204;\252?\206\272\316q\007\273\324\3311;\264y\230;\\\242\331;\r\370\237\275\370\271\330\272\200\314j\274\321\217>\274A\310S\273XS\217\273\037\316\367:\302~$=;\212\317;\007\363\227\273\260BG\274\335-\361;7\277\212\272\004\265\036\271\351\340\374\273U\313q<\004\252N<\267\305\000<\\#\203;vI\343;\376\315\210\274\021Z\256<\216\274:\275\215\232z<\317(\322\273\313]F:c\234\244=\177_5<L%\373:\353\311\201=\025\262W=\342I\214\274\334Z\r\275.\212\232< \247\202<\'\261\217\274\334\325\265;\004\264\202<_@\r\275\235ye=\306U\002\2754\242H=a\372\241<\262\017t\274\231\234\225\275\035lH<\310\242\256\272\"B\006\275(\345i:\017\354>;\253\013l<\360\301\245<\004\341\224\273\233\245\334<\314a\337\275+\314\341\274\274R\377;\211_\262<\3522\035<\213L\323:\216\370\314\273\364@\315;\206c\033<\335X\255;o\222\327\275\216\254\331\274\212\337\000\275v\252\231\274\372\312\230\274:,!\274\013\031\0279D\306/=\245k\023<o\353\272\273\261H\363\274:\241\"<Y\351\207<tiX\274,\3651\274\247\001\344<\264\210\216;s\3601<@\244\037\273\361\004\256\274\307\260\347\274=\221\307<Os\327\275d\264 \275\324\233\030<\200O\371<\246\357\317\274\353\t\232<\260\304\\\274\257\237g<l\037\202:Fc\031\274\316\032\252\275\215}\371\273\212Eg\275oo\322\274\200\n49\2063\307;I\311\230;~M\317<\263\300i<\030\212\233\273\013p_\275\235\232\273<\010\n\223<\347)\337\274D\251\303\273\312\276^=\351\255\201</\255\001\275\357\314%=\251\232\255\274\231\326\010\275\217%\207<\010\3015\272b\211\217;%B\265\274\021\224\007<\362\233\020\273T\277\n\275jX\355\273\303\321\024=40\271\273\n\246\016;\245\321\304\272\366(\247:M\316\224<l\2010;:)M\274\326\225\\;\3149\331<i\214\202\274\306\361\242<t\311\233\273\027\245\255\274=\001`<N\216}\2734E+\274\266Y!<\216\353\220<{\0032;z\303\373\273\273jX<\023\2540=\n\351e\275\3046\271;\360jJ=\241U-\275\361\372\266\275\353\024\335\274/\275.\275\031\010*=X\204\000\275\030\264\230=Tr\275=[H\262=\260\342L\275Q\333\347<\300\222m\275\234R/=\364\241?\275SO6\276/\025\221\275`c\201=\025\026\032\275\201Is=m\302\242<\370F\357\275\336\345\001\275\367\376\313\2757\312\225=\013\214Z;z\362\'=\312N\035=\277\324\020\276\001\001\213=\2334I=\r\312\306\274\016\351n\272-\212h:\253\354\303\274\024\217\217;EuA\274j\2158\275(9b\274%\326,=\276\243\247\273*\037A\273Hx\253\272Z\013\034\274\357\013\262<\345!\257<\214\237\027\275kI=\274\300\236\020=+\305L\274\311\236\306<E\341\204\2730\254\215\274\324\242f\274\347\322+\272\247I\315\274\024\264\226<\003\033\356;\372C\360\273\030\203\245\273g\031\230\2740\371`=\225\373\177\275\032\032\344:x,\203\273a\272\266;n\363\2749<@\265<\366\025\271\274w\3068\275L\341\232\274\201\330*<NK\3479d\266D\274\302\215\r<\227\326\246:\024L\376;!A\374<0\'\254\274\261\350q\274\211\247+=\252<e<[\340\022=\024\272\370<3I\"\2752\243\360<\334\354\345;\352\233\224\274\2251\231<2w\020<\316J<\273\347d\245\274^\211\332;\004\016\223=\216\201\327\274\222\\U<\316H,;\270\225\037;\342\310\n\273\035H\340;\237\302\276\273<\255\340\272\360f\275:}Y\324;\355\241i\272\247\332\024;\362\"k;\302\037\242;}\347\225;\310\030\00791\037\020:\331f\202<t\n\306;@7$\274\252\247\004<X\332\340\273\3372\240\272\212\226\204<\227\036\273\273ql\260:\227C_;p\211\210;\366\275\216:Z\325%;\264\214/<J\340\374;\346H\240\274\310\273\256\270\226,U<\317\330\263<?\354\331\274w\232\251\274\357\235\005\274\004!\022;\377\300\235<nS9<\326\364\014=\271\352D<\036\267\026\275:\361\034<\334\327l\2744\313\031=\267\371s<\350\022`;&\\\306\274N\3252=\361\225\372\273\310.\313<\351\'\243=\377D\346\274t\372\244\274\264\352\354\274\354\254>\272 \374\217\275O\000\331\274\354\267$\274\203\263)\275\211k\344;\0330\"=\207\003\265;/\220\";\302C\250;f\320\005\272\032#\021<\347-M\273\314J\200\273\276ay;H\301j<7\312\221\271\376\332r;a\\\371\271\207\301\017<\257A\376;K}\337\272\371I\021;\355\306\253<\271\340\'<.J\366\273\247\022K<\246\2552\274y\024\261:\340\217\205<\302,\220\273\322\232\207;f\001\373;H\021\301;~\327A;\000\223\236;L\024\226<\027\250\207<,\263\303\274x\343\3247Z\241Z;I\360\n<\334:)<\374O\254<_\364\346\273\247t\355:P\177|;Kh5\273\324\337\031;*6\363;\305\016\022<\031\233\276</=\031;\334\304$<\215\362><\304\376\006=6\253J<$\331e;\253R\211<?\376\304:v\014(\273\303{\323<=M\010\273T*D;\005v%<\255D\375;\337\240\354;\240\005\034<{\2072<G-\221<!\036{\273R\257\334;\353\311E\275\213\003\371\274\361\310\232\272B\330\263\274\341\216\030<w1\240<\305<\276\274Q]\315\274\020\031\222\272\364\316\266\274\200\202t\275=\031\317\274\313C$\275\010<\032\275U\354\024\275\252\337\203\274\026\036\302\273U\261\222=\001\177,\274\277\n\030=\227\311\342\274\202#\322\274\232:\032<1:\262\274]\345\322\274` \272\274\337\314\307\273\335V@\275\253\210j\275^\035\006\275\255\033\320<\333F\023=m|p<\303Dw=\335w_\275J\344\317\275\247_@\275\201jh\276~\305\274<\240k\223\275\314\342\364\273bZ\021\274\370\260\225\274\262\023\241\275\003\230\302\274\222b:=K\021\206\275H\213\231\275\023\325\'=\321L\341:\t\t\023<\345>\201\2755\265\220=\270\320\313\274/!l=]\232\304\275\212>\217\275\251`\257<T?i\275Uf\316=\354\363\243=)\014E\275 d\370=\255\351\244\275-\337\210\275\202\\\241\275\361\336\306\274\315\370\016\275\231\225\330\274\362\007\233=\276\272#\275m_\237\275w\302\204\274\233\324.\275\3752\203\275\204\333\231\275\260\342\237\275J\037\235\275\343\206\220\2754f\035\275@i\234\274H\241\036=\252X\265\274_]\311<tEJ\275\201\005\031<\241Bm\274\274\232Z\275J\334U\275\301\3441\275(.\372\274\036\035g\275&\026\007\276=\346}\275\2422\261<:\223:=Vi\t\276\302U\323\275\373C\277\275Q\317p\275YiD\275\367N\r=\230OM\275S\004\314\275\272\266\245\273\337\210K\275\263\202\t\276\251\300B\275V\346\314\275o\031\374\275\201\231\222\275\003+\205\275\276\216\215\274\0169v\275h\003\014\275\017I\252\274\204\230\210\275$M\210\275F[\217\275\001\376$\275\026Lb\275\370\2626\275y&\033\275V\306\340\275N\331\241\275\236\245\247\275\355\\\202\275TbB<\332x\034\275\030\033f\274\367P{:\0073\207;v\260I;\304:\327;[qq\272\346\347\243;\356\216\235:.\177\t\273Q0i\2757\332\216\273\2641>\274V&6\273\025\t\002\274hi&\274\254\234\265\272\033^\373<#\177\025\272d\322,;\273\377\032\274\215\313G\273x*0<\257\217x;\351S\257\273\323\300\005\273\361\375\264;.\377\205;*\367\330\271\214\375\254\2743\347\013<`\256\026<eM\207\274\211\347\260;3\261\263;3\364\027=n4O\271\331v\356\274\316\266\211\272\246\375\001\274\030\035\264\273\377\313R;su\325\273%-U;K\310\323\272I\334_\272K]I\274\014\032{<\213V\373\273\364F\207\274\244\002\231:\3053+\273\341(\023<T\365\234\266\n\200\311\272\202u\210\273\354\377L:2y\316<%\277\357\273\312\264@\272\333\002\256\274\035\002\217;F<1\275(o\206<\253\321+\275%\003\232\274\220\215\025\272\217\203\225;\266\327\023\273u\361\014\2741\220\243\273\211,\334:\245z#9\375\017\224\273`\331J\275\014\006\016\274\022.\233\274\272\272y\273\002XF\274V\315\227\274\265\314\206\273\364z\365<Mm?\273IHf;\360b\014\274\265\332\237\273\254\341*<R\361\214;B\230\016\274\250\334s\273\320\\\261;3\373\233;h\370\367\273\347\2505\275\273{&<\220\177\014;\207\353+\275a\207\231\274\325~\277\273\030\261\0039,w\177\273\253.\311\273\036\3673\274\244\3012<\273\237\244;E\253\307\273\354u\'\275D\307\317\273\361\177\312\274\0143\005\274}7*\274\323Cf\274\250\225\241\273\303\366l<\335\216\261\273\200<V\273\227\270,\274\374(\305\273\240^\334;\373%\275\272\325\334\027\274\177\024\354\272Q=\353:\370\307 \274\216\352\233\272\316\365K\275\201.G\273\200,\201:B\027\206\272\362\313i\274\315\312\001=a\375\311\273\000\242}\273\347\357\001\274D\0166\274\255?Y:\337\031<\274\260o\037\274\244e\267\274\005\257\270\273A!\r\274\005\230\201\274\2400\307\274R\035\262\274\347s\242<\263\335\370=\265\231\002<&\256\253=\216\372\031\274u\264q\273;\364\245<|\002\376\273\352\260\353;\246s\021\273\004\211\001;OIL\275\215-\210\275\002\217\311\274\307g@=\301=\006=\305T\021>\323\262\247<r\374\222\275E\202\211<\034\255\226\275\036\373\363\275}\336\371=Y\201|\274L\277\371<\313\002\223=\026*\332\275\226\372\237\273S\207\254\275~a\266\275gm\275\274\263\342\243\275\341\373h\275\360L\251\273S\205\213\275\347\316\344<2E\322=\277\342\017;\254[\221\275\353\310\006>\320\'\312<Cj\251=\337\017\356<\241\304\276<\357\363\371=\265V\013>\005\271\304<\276\372Z=\301\027\245;\364\206S\272\3135\035=*\2729\273\355\274\356\274>\334\300<hc\313\273_\231\264\274%\211\227\274\314\226\243\274\265\335\375\272\330\2741\275\275&\277\274\006\3364\275F\nz\274\220\022@\275\001\322\026=\312\023\273=/\305\210<\273\264\234=\362\203\317\274\026\375\252<\210\307(;%L\006\275W\255^<\025@\217;\341d\226\274{\203t\275w\243\346\275\315\177\321\274W\177m<\301\315S=\203Z\221\273\007\274\214\274u\'\202<+\026C\274\333\357\320\274\224\037\310<}@\253\274\255\352\002\273^`v=qs\370;\345\270H<\226\'\023<Z/\002\275\261\313_\275\013\021\007\274l(\274<,\305\201=\321~\007=]\210\037=\210\260A=|2\370\274\336b3<\2540I\274\260m\202\275nJ<=\346\302\013=\332\350\017\275/3\360\275`\034V\275:a\024\274-\305\211\273]W\310=\357f\026\275\340\311\257\274\016\244@:n\337\222\273\270,\240\273\027(\037=\"\301\360;\236o\201\274)y%\2737c\224\274\366\3032\275\253k\204\274\236\356\004\275S\367\340\274\004w\341\274\016\013-\275\005<\201\273)\262\245=\251\031<\274\276\022\020==D\222\274\242 /\274\370Hi<\227\365%\274cK\345\274^\307,\273\250\342\311\272\277\311\373\274\014\0347\275\027w6\274\352k\266<\364f\030=W\303\020\275\363\377$>\337\254\200=\275\t\004=T\3510=\010\037\235\275\340Zi\275\007\336\340\274O\276]\2755\240\232<\257\021\376\275^\334\240\275\306Fi\275\322\323k<tU\002=\310\232.\274\022\017\207\274<\'e=\332\201\376<\252B\026;rI\001=@*\340<\244\033\201=`u2\275\247tp\275\242\"\010\275\317\243C=\032\322R=\"\360\213<\327ma\275\3709\n\275$z\346=\033\321\352\274j\205\030\275)4\367\273\262\314\311\272M\025\277\274\267\225\335;\374w\255<\221l6\275.<\264\273\303\021\232\274\275\355\334\274\002(E\275\351\301_\275\226(m\275k\235\256\274\302\024=\275\003\352\025\274\333\305k=\370\252\027\274\246\271\315<\020\352\317\274\322\342)=\255}\227<\002R\314\274U\013\"\275\034\241\000\273\025\200\023\274\234\241\t\275(\306\213\275\361uM\274E\0175<\255\211x<\256\207\270\275\025\017S\275)\030\256\274)\374\244\2745\010\325\274\033\267B=7/R\274\330\3473\2758A\010<=<\255\274E`\222\275\303\211~\274\007\356\233\275*)\263\275\202> \275\321\320/\275\030x_\274)\342\221\274\034j\222\274\005\214p\274F\213\320\274\237\252\252\274\206\\\200\274{\363\002\275\341\375\007\275}\001\2379\265\371\306\274u=\201\275\002\2254\274\212\3154\275\237\365\201\275\217p\210<\032\277\231\274\177\216 ;>Y\362:\237\004\334;\322\273.\274\261\317\004;\017~\331< N\273:ho\010<\034\245L<\312\001|\275\226+\n<>\261\020<K\ra<\234X\213<\022\255\373<O\343\350\272\257\n\221\272\214\017\037\274\202\271t\274\275\200d;s\224\300;\370\233b<\220>};\032\266\237:\0019p;\010]\033;C\373\351<\371l(=+\374L\275\275S\201<\202\3315\2740\340\273<N_\032=\221Xo=\276UV\275e\323\267=^\315H=I\344\225\274\265\340q=\014!\247\274|\327\314\274\2368\333<w\356l\274\353\222i;i\230\200\275\324\255\346<,3\224=S\361\245=)K\311;\341\375P=9F\326\274\265q\002>>*\302=\277\215O=-G\363\275\323\337\021\275\334\030m\275\021\254$<\235J\006<)\320,>\271\\T\275\231\240\255\275\356\361\203:&\233;\273\327\013o<\356\222\013\274D\226\305<N.\\<\342\307F\274i~a=Qg\030=c\253\002<\346A\274<y\2335\275sp\"=o\224%={:\005=\275\315k=#\264\014=\030~\346\273(\037\364;\017\261=\274j\372\236\274n\030\372<\255\213#=-W\330<M=\r=\233\214\201;- \240<\212\030\014=\236\342\000=\022$\336=g\313_\275\272\004\235<\305\013\035\274\343\223r<p\235\254<\311\023y;\322\017\326<\276\375O=\014I\032:\227\206c=\251\370[=~C\322;\006\027.=v%\271\274\305$\037\274\311dr=\324\315F=_\236\277<(7(==\220\223\274\200\3601<\344\023\247\274`U\360\274w\255K=\214\177\301<\302\257\"=\020\"\033=dt\367\272\302\034\272<\257\3248=\231\205]=\244F\235=&\242\253\275\317\361\310<!\003\213\274Bl\000=\250k\356<\252\rU\274\226\301h;\267\323S\274\235\246\222\273\302Vr\274\223$\024\274\344\343}<\34625<|$\236=\334|+<=H\231<\372\254\310<\316Di<\026\320\321<\225\021\030\274\366\270\247\275\334x\004<\217\326\365\274\271\210\206<\016O\n<\261P\235\274\"\345\006\273#\370\264:T,\345\271\372=\233\273\362H\243<\336\356Y=M;v=\003\314\027\274\204\375\336\274\325F\242\275\267\374x\275\020\344\366<?\313\247<\271\221\335\274\250\nG\275I\357Y\2755\232\341=Zn\365<\375\004-=\242\250S=6\371\221:H\220\225<<\366\366<U\313\231=\265\007|<\271I\350<%I\332=!\001\006\274\254\262\003\274\034\304\340<\253\240\230\275E\376P\275|H\252\274\247\036\027\274\371\n\323\275>et\275\317z\254\275gy\n>J\351\231\275\002|\362=\310\204\220=]\225\003=^w\020=\314\023\306\273\002hc\273\330\243\363;\312\200\232\274\237\262\334\274Q\350\013<\267\014\345<\205\325><}\364t=\224\375<=g\237\240<\025\335?=6\244\262:\233\327\034=\223E\215\273\031ek\275EN\247<~(\221\274.\221q<-\013\317\272\310\0227\274O\355\032;\357`q;\204\300\343\273\243\326\t<\244\311\203\273`\236\260=|\303\231=M\343f<&\376\r\275\243 ~=\250P =8\327\330<C\241F<\310\270\'\275w\330\377\274J\376\331\274\024\204\031\275\332\206\376:\306\035\211\273\245\341\225=\231\200Z<\253\3114<j-l=\207\253\177\274\337\320\307<\030<U;\024.\241<\374\204\t=/\354\356<P\207E;\017L\261<*m-;U\235\322\273\236yM\274[O0\275\374H\020\274\264\\\023=i\341\316\273AP\316=\2666E=\314V\375\274\221\245\r<\n\300\241<\223_\322<r<\217\273\242L\241:\302\016\";D\'Q;\341&\204\2741\240\262<%>\231<\376\273\032=\300(\374;\343<\003<\020\243@<\332f|=\243\000\321\272B&\031\275\3254\021=\0108`\275^}\246;{\t8<\372\375\t\275g\001\227;\376\223g<\010\347\317\273\316 \316:x\350\230:\341|s<\017%E<\237\354\014\274m\353\220=Y\356\264\274l\026\235=\353\232\202\275}M\217=k\350a=Y\000\274=\374qc<\021\244Y=\207)\203=\010\030\322\275V\251\310\275\356\256\277\275\371\275\371<\")\201=\354\271\377\274\005F\200=?\302\211\275B_\261\275\226\246\234\275(\007\260\273V\204\273<L\027}\275\251\215\200\274\237j\261=0\306\036\270R\356k=\035o\304\275H%\341\274\223\017\017\275\204oN\274\262\356\217<x\311\211\275\226\3341\274\3375\212:C..<\356E\273<C\252H\274\021D\270;\'\017\217\275\016\021\346\272\243:\247;_\346\213<&\267\327<\005\320\241<Zt\037=h\277\022=DDT=\334\207\220=E\367 \275I\271M\275\356YA:\003\353\222\275\321~\t\274\334\315h<XE\310\275\257\371^\274`C*=:z\361\273w\245\3249UtA<\347\377)<\251.\227=\2021\351\274\355\350{:\356>W\275,\353\211<\276g\013\274\223\361\006=\017\242\002\275\377\315#\274\221v\'\275\242S\237\273\344\300\204\273\033<\327;\310\213\223<\226&/<\327\324\207\274\362\356\'=\265\263\'<i\316\341<\026\215\177\274[1w\275E\016>\275\265$\252\275M\256.\275\234S\320<\373\366\202\275\217\032=\272\204w\326\273\024\376\024\275D(\211;\310\252\265\274\3402\330<\342\346\216<\013\022\034\275!\220\010<k\312q\275s\210\030=\313\271\234<\215\211\227;^</<\027\314e\274\006\372\211\273\005\206}<\224\343\366;`\314\204<\247=x<O\030`=s\344q<\325\303\266<\366\230v<D\306\321<`v\006=\264\274\016<YI9\275\303\3273<\230\033Z\274\257l\224<C@\273<H\303\033\273\242\246<<\210W`<\367\263\233:}\317\321;\"\263\240<\241\233\020=\374\007\014=\"\253u\274\321\277\372\273\236\332\371<\306\035!>\216-|=9\226\307;\226Q\214=\363\232\275=e\"G\275\251\035\024=\033P=\272k\251N\275\311\341j\275z\222\003\275\224\024\032<6yp\274\272D\272=\300,\235=\203/\307\274\"\216\312=\234\250$=\367~g;\212\322\014\276\306;\257\274\343\322\376\274f\356\253=\321\357\205\274c\\\255\275\361\017\311\275\346\347\255\272M\337\034=\252+\275\274\231\231\352\275\271Y:>c\202Z=2\251,=\345\n\\</\350\t=\275\034\013<\250\234\203\275\327y*=\353\370?=\014\357\017=\3370\002=(\033q=k)1=K\2309=\0168\376<\007Pm=i\247g=\323\203\213<G\"x\274\330\240\256<<F\005\274#\3703=\360\003^=\0277\264<O\022\314<\230\230\276<\330\376\221<\265A\000=\350\363\200<\316\032\231=j\007r=\261d\217<\220\206U\274\246\217\265=\n:\223=\363D/=\030\375M=%\275\246<\317,3\273\221?&=\364\023b=\355\010\373<!\001O=6\373\312=\022\215\000=\017D[=[D?=\276\247;=\221k\235=\n\204U<x\013?=h]\357<\236\205\307<\"\251f=\254Dw=\241V>=by\000=\003\336\334<.Q\350<R\255\025=\303lt=\010\367q=`\205\213=\030\226R=~\037\236<\270\367\230\274\211\275\233\274\3742Q;#G\227\272\306VC;*q\"\273\\\013\243\272\350cB\273\372!\223\274\264\212\312\274_\243@\275\0013\261\274#\177:\274\361\264\241\274`a\326\274S2\224\274E\306i<\"\205\227=0\007\326;\347u\005=(]\205\274\030\261-\272h\2330:\366\026\272\273\376\273\016\274}| \274>\004o<<\327\034\275\302?W\275\327F\274\274*v\376\271Z\337\260<\373\363\343=\250)\003\275\036w\002<\247i\217\275\250\275\223\275\350\247\200\273\037\225\340=\374\362\027\2760\201k\274\212\nO\272\300\372\307\275\200]\211=C\253\330\275\\\251\266<\307=\035\275\264\245\201=X\271\202=u\344\266\275\343#9=\2450\\<t\371\230\274X\354\216=\363v\265=\277uN\273\245f\222\275r\253\020\272,\301\315=8~*\275\262\231\243\275h*\270=\244O\332=\307\260\343\274J\375\337\274n\371\r\274\254\360c\272`\354R\271Pe\210\2740\260<=H\306\026:\251 \354\274|\220\336\274\327\326\016\275\222\035\367\274\256/\226\275vT\271\274\223}2\275\253\274\247\274\006z\242\274\0247\227<\241q`=\2501I;1\371\314<3o\340\274\222\320\314<i\216b\274\234\242\360\2748|u\274.`\350\273\330\240\n\274\000[8\275\315j\304\275\232]\010\275e\255\r\275\231\203B=8\031{\2755\241\\\274\355t\375\274\235Nz\274\301!_\274^u3=B\003\024\273V\357\252\274b\035q<\345},\274 Z\014\275\310qD\2754\277\033\275\334`\231\275DC\217\273\360\231T<,\373\267<\034\225\343;\317\2401:\254S\203\274:\356\230\274\371d\360:\"\2549\275]\200\000\275\243\363@\2738\\\232<O\267\256\273$\304\333\275\210\214\007\275f\350\004\275w@\211\2753pG=>\262\007=7\364\353<F\313\321\272\2068p;\004\374\240;\276OI\274vs\370:S\245\260<\035\216\270<Q\276\347<\216\234\275=[\302\017=\002\031\275<\333\243\007=\231\232o=\230\257]<d\265\005\274\312\227b\275\301\206b\274\201\343\326\274l\204O<$m\214\273T\303\216\274\353+\316\273\202,\035<\311D2\274\000\350\004\273w\231\341<\300\362\314<r\'^=\031|_\274\235\314\025\2743\255\024\276~Z3\275\237\227F\272\030X\230=z\254\026=\254\257\n\275\313mM\275\300;:>\347\372\235=Ub\237\273\266B\217\274\270\370\251\275\n\201\271=\233P\321<|1\266<\254\032\240\2758\352\376\274f\253\233=2q\230<\004\267\t=\227X\264\275l\351!=\344Mj\275\204H\344\275Zy\266=\312r\261\274\275\272\004\2768&\224=)\315\202= \303Y\275@\252\r\275!\030\240=\272s\024=\346\007\217<p&\035<\247\252\346\273#\'\377<\216\025j\2753\215\205;\275r-=\252*\347<c\2746=\270\247\206=\3427\256=\004i\030=\307\312\272=\254fP=OED<\\HJ:\255k:\275\226[\244\273\217\241\262\274e\326j<\2524m\274\305\373h\274\031\230\254<\325\034\271<\\\207\300\274\3604\366<{T6=\255\320\023=\302X\204=P\037\2636\333\321\027\275\260+g=kU\027<\302\373g=\240U\002;%\216\265\273\207\233a\2758s\245\272\353M\264;\250\337d\274N\024\204<\334\353t=\322\351\214=7\214\022=P\315\347=$iJ<\3445\312\274\367\036\335:\206\356\300\274x\031@<\017\260\355<\035\t\010\274\033H\212<\311\310s<m\335\207\274!\337\222<\236\2426\275\002J\247\274&\336\224=7a\007\2755p\247=o ?=\251\344\357\274r\020\020=;\000[\274\001\035\226\273\026\342\252;\265cH<\345\005h\274f\221\034\274\254\212\037<Z\274?\274\227\220c\274B\221\223=z6T<\036\202\033<j;b<\311{%\274\030\311\212\274\373\302\325<\3010\t;\371\226\032=X\031\263<C\227\205<\257\332=<\261/\374\274\321cM<E\022U<\374zg\274\213\021\326;@o\246;\251@\010\275\342\242\362<h\333\037\275\260\343\376;G\204\307\274\266\"D<\\>\373\274f\216\"\272z\223\247\275)_m=\217\336\271<\262,7=\310\322n=\322\351q=Ij\246\274@\002\263\275\265\246\210\2758\345!;~S\356\273\224\252^=f\353C\274\341/H=\205\261\226<\342X\3249\213\202H\275\341k\275<\327\013\212\275fv\223<(\302\0379uf\312<f\313\026\275\333o\034=N\324\276<\302<\247\274\"\336\253<Y\213\013<\272y&=\316\0107\273U\275\212<\321\332\210<\267\205C\273\321\310\001=;\0149;\270\031\2569\303\372\356\272\303\300P\274\214\241|=\364R\305\273\270t\211\274\332\354\007<\360\260\201\274\007\222c<(\267A=\252\250\005=\351Pp=\353\270\021=\000\331d;\313\242\242=\311v\221\274\337\201H\2731{\322<\343\214W\274\n\320\257<E\333~<L\301\246\275\204\200~=z@\375;^\230n<\244\273\270<\016\025%=6)\021=v\022\315<\315\3447;\236~\350<q\211\357:\313\311\"\273\261\303-\274kwM\272\023F\236=\266\274:=\301;\374\274\213\252&<L\3603<CM\252;]\034F=A\362\265<\312\266\222=u?{=\213\201\001<]1\024=\365\366\200\274\017\347@;=\032o=\\b\013\274\240\177\334;6AP<\377e\006\275\274\036\234=\211o\221;]\017N=\251\244\324;\2617b\274\355K\235\274 \356R;V~\213;k\006\003\274\262r\302\273{\300\306<\031*\212\274Ja\200\274)\357\370\273\177\302<;\003&p;\237,\002;\232=\n\275\r6\255;\307\304#=\001\332d\274B8;=\001\323\347;B\257}\273\2435\312<*]m\274p\021g8\220 \032</\352\315\272\336\007\231;\375\226\177\273\352\266\271\274\230\366\302<\037\353\205\275\276\177;<\226iU\275\367=)=\302\t\264\275:\341\257=\2224\003\276\236\360\254<\206\210(\275\026#O=\353\013\373=W\336y==WE=\346\312\355\274\213S\244\275k~A=\272\322/\2752\234\334\274\017\200\322\273\333\215 >\225\250_\274\277|\232;mo\261<\033|\333\273\353\311\003\276\234d)\273\221<\372\274\247\321u\275CP7<\0031\212\274\354]\010\276\024A[\274\274\326\215\275Y\353\325<\206\375^<a?\240:H\241\021\274\351\026i<\2241\2659\367\254`=\217s\272;r\207\224<\343\0324\274\362\t\230\274\232\177?;t\336\264\274\014_\212\274\321\243\326\273\362\277\007\275T\021\000=\020\264i=\220\317\233<Q\203\202=>\361\243<\212\341?\274\316\036\306=8\000Q;\025\002\226\274\rdo<[.\376\271\021/\031<J\351\224;\207\\\216\275\216\232\\=\303d\247;\353S\027=^{E\27461[<\003\204\261\273QX\372<\322,\232\273\230i\030=5\262\027<\263\r\206\273l\005\034\274F!#\274\250k\010<C\227\262<\022\352\007\275\376\2052\273\376!7\274\007 \223<4/\201=-\305\273<\242\266\237=\304\235H=\273-\330\2740\226f=t>\237\273\316\334\244\274\230]:=\032v9;1wB<\350\245\277\274\230L\225\274w\357\202=N&\235:\022>W=\0322\254\271pE\023\273\274\363\221\274F{L;p\217y<\227\367\301\274\304\021O<\202@\206;\343B\t\274\353\035\211;7\323&\274\376\223(<\341\035q<w\"\317<E~\214<\\P\371<m\001\230;\233~\256\275\337\371H<\006jh\275\201=\244<\356\314\'<\033=\365\273\342\014\313<\314\321\005<)Q\002;\221\031\036<\330\242T=\267#}=\214\3212\275B\341\000\275\205\3160\275\311j\032\275a\257\332=\034#\326<\241b\233;\004\300I\275\340\261\023\275\275\037h\275t\270S=v\245P=]\362\320<^\322\002>\253\3571<\006.\222;4H\213\275\007\374\004=\262\321.<\331J\323\274\007(\220=\'\373\271=[bT\275J.\032;\213\234\244\274D\200\360<\036\266\225\275%l\263\275\345\014\360=\024.\367<\\\234u\275fY\277<\004\373\344\275\344\310E\274|\313h\274V\020v<ox\345;\"\r\262\274!\002\266<\233\241Q=\312tN<\264@\023=\326W0=\314~O\273L\217.<\246y\375\273\232r?=\346>\017=\001\367s=\226\361\277<\366OL=Ea\021:r\007\025\275\013\271J<\272q/\275p\310$=\035\262\027=C;5<K\233-=\200\216\024<\024\231P<\316\2306=\2559\200=pI\366= \3459\2752\017\355<\300\356\326\274X\336\006=\315\231\010=\206\321f\274\t\275\315<&\232\225=\237\026\265;2\263\215=A\252+=\313\324[\2759\277\\<K\315\376;\312\002F\274\3552\202=\033\375\231=\007\231\023=\362\235\212<\220\3149\274\272\316\307\272\226\366Z\271-\224\235\274+\343\200=q\235\234<\257\240\316<\324\035E=\200)\236;\200\364\2528\\S\216=js\310=d\344\233=\034\221F\275\255\0072=V\3521\275\025\034\325<pT0=(\246\265\2748\242\206;\365\247K<q}\315\273\026\023K\274\375_\036\272\352Sm<\320\0257=^\344\201=\374:\362;\222\351><\301Ax<\350\33799\322\340\353<\320\025\'\274\237\256\007\276\020\327\253;a,q\2750)\2217\262\355W<E8\025\275\035\032:;\233\363\216;2\256\036:\261<Z\274w\375\212<\230\236\\=\265\272u=\261\255\'\275\356\024\004\275|\177v=\336\237\223\275|\351\232\275|\307\016=\252\363\205\275\370\031P=X\345|<+?{\274\360\361\000=rg\316\274b\227\354\273\373\002->\003l\254=\310?E>\t\322<=E\221_\275\221\310\037\275l\221\302<f\303e\275L\317d=\340yf\275`\236\340\275x\323$\274\265\306\301=\371\r\217=y\252\230\2748pn\275\325\377\251\275\022\374\340=\014N\370;\356\031\206\274\3022Q\274\220\235\2468\350\3306=\334L\252\2746\013\251\274Ce\034=\031@z\274\261\2659\275\003\\\316;:O\250<C\006A=s[\017=Ks\236<\240\346\242;R\314\000=\261\276 \275\032@\254<\343\0173\274\302\224\324\275Oi\312;\372\017Q\275\254\241\032\274-4g\275`12\275\'\220\200\273<-\336;\001\372\307\273_\250(\275g\200u<\350v\202=2\333}=^\255<\275&\300#\275i\262\323<{?\253<\374\311\271;S\030\241;u\006\230\273$\260\030\275\306p\364\274\221\374\307\274R\373\027\272B\035\302<\214\354M=\203\233\351\272\274\240\275<\301SZ=q\033[\275\240\2161=\021\237\217\273\\\001\337\274\336M\207<\032\261d\274+\227\372\274\027\325\025<\345\320\343\274\000Q\305\274o\247\027\274^\257$\275\022\200\035\275\332\357\312\274\":\311\2738\365\260=7\250s\273a\345\004\275\313\321G\273\002\272\264;\230\345B;T8g\274T\327\344;\033B>\274^\273\375\273\264\r\263\274\240;c<,\305\302<\276+.=\214\234\365;\266 \341\2738\350\340;\262\372\354<xp\214\274\231G7\275\203\327\202\275\231yL\275\223>\"\275\355\023\354\271\002\307\331\274\260\361,\274\022w\265\273xK\256\274\014rd\273\266k\034\274wD\261<\361\234\035=H5t\274\225`q<sq\021\275#\355\203\275\350\323\225\275\322\240\373<9c\214=*\221 >\223\254\251\275\273I\001\276\344\370\221=\304}\214\275\014\372\321\275\360M\245<\202\262g\274\312\352\003>\300\023H=\224\351\007=\243\312Y=#y\357\275J\022b\275\226\344,\275t\361\023\274\014z\264\275\t^\255<\006\237\256=\374\205\234\273e\344\316=r\265T\273:\306Z\274@\257\366<\222C\201=\010\272|\275\332\0221;\346i\274=\324;\200\274#v\257\274\2415\305\272&\323\007\275\026\213\030<\240\010\226\275}\031\326\274P\245\272\274\030\020,;!\261\310<\356\246\001<\354v+=\316\262\264\273\t\210\250<@nF\272{\3626\275\000\234\211\275\nB\266\275+[\224\275\273\2627\275\235\355\021:R\251\312\275\370x\372\274iq\200<,Z\007\275\226\363\227\274\270\023\000\274US\027=\261h\223=^\2757\275%t\200\274\262\364\243\275\276\313\210\274\333\023\177\275\355\341\225\274\311rA\275\350v\004\275\235\307\260\275\270\031.\275\257\261O\275\347\3539\275\362\374\313\2742\'2\275\021\241\200\273\245\305\274\273{S\205<\262\360\025\275,\276\251\275\273?\263\275\204\032\242\275\3507\266\275\300\346H\2750\256\315\274\310\022\217\275\371q\217\274\331\324}\274\354\336\206\275xxF\275\033\306d\275\333B[=:\306\302\274\220\277=\275\244\260\361\272z\305\330\275|\333\236\2732\003\277<\224/\333\274\316\217\271;ca\n\275|\312?\271\363t\004\275H$\211\275\202>\214<\020X\271\273\310sU=R:\264\274\355\010\335\274^\227\017\275\324\004\024\275\004\024q\273\023zv\274u?\245\275\006!\315\270\3775\035\275$\036\230\2747\030\207<\314P]\2752\211\n\2752\235\023\275h\031\216<h\303>\274\234\374\324\274\360\3536\274\324G\247=x\016V\275\204u|;-4\267\275\016\306i<\020<\357\275\0300~=\336\'\334\275\0060o\275\177\036\342<\233\304\365\275\340\264V<\026\rG<{y\247\275\317\301\323=\247\323\243\2742\r\374=\177\366\032=\340(Y=X{@=i\232r=\264i\261\2738\343\234=\206\000\223=n{\230\275\213\264\246\275\037x\027>\225\237\203=\355\225\332<B\365\027\275:]A\275\374J\022>\006V[\2729Z\336=\306<1<@\230\017\275\205\306\252;\216\246\n\275\234\254\266\274\251#\250\275\272\221$\275\025\211\240\275\212\024\006\276{\207\253<\321\305\260\274X\252\231<\374\231\200\275f\014\240\275\305\035\247\275*\017\246\275L\327!\274\275\226\244\274sH\230\275\\\336\340\273\001<\036\275%\336G\275\255xd\275*!\232\275\236\205\220\275\034\373n\275\202\367\023\274\010\336b\275\255\023\247\274:\021\312\275\346\361\251=\227\325\241\275\221\203\257\274\344\\[\275P5\t\275\2377\037\275\032\341\026<\343\231 \276\361NM\275\364\210\345\275\215N\031\276|\247\022<\250T\204\275\245\326\364\273D\362\374<\306\014\016\276\355\263-\275\"\322\201\274\341\3612\274\003H\n\275\\t\313\274\353\351\177\274M\316\013\274\025\375\275\275H\004\315\273\307]\252\275\030P\307\274\013+\252\275\354\277.\275{\236J\275\374\275\027\274cG\237\275\010;\345=\337a\201\275\274\211\375\274\032\'\034=e\375\017=H\213\204\272\364\246\260\272\001\367\345;\016X\014=\220\254=<b\"I<g\265\354<,\241\002=5\202z=\211\253\261<\374\216\302<\241\352\004=v\273Q<\'\377*=w|6\274\303\330x\275\315\017I;W/\004\275\363t6<\332\275\257:\234u\305:W\376$<\037\273B;\030\237T<2T\230\2730e=<\007?v=\t=>=*5\214\274\212\277X\274\r]\025\275d}\236< \030\251\274F\272\250=u1l=\254\332*\275\277\301\016\275c\262\214=\370+\273\274\354\214\232\274\037N\010\275:\200\215;E\373j<.l\267;\177\013C>\326\031\222=R\035==@t9=@\211\210\274\274r\254<\244\377\023<\256\365\254\274\260\322\024\273\035\313\300\274\262\340*<\\\225\230\275\014N\262\275/\201\237=\340X\241=.\374\032\275X\262\n\275\210g<\275\301\034D=\234\'g=\243\205\023<\355%\323;\210EE=\017\342\267;0\000\213<q\261i=q\335I=?\374]=[\351y=\256\215\212=\360\214Z=\353\021\206=\244&\356<\332J\206=\t\375\273\273\2408\330\274\323\360\206<p\266\303\274\347\235\252<qZ}<\265\001\337<\332\305\002=\222\3616<\201\246p<\2053\245<\n\177\206\274\220h\357=6\335\216=Y,0;\001\373\347;\231\232\273=e\216\233=M\004h=\350\027\007=d(\354;\357\341\322<\340\375\\<E\025\"<*\362$=\177\216P=\2611\336=W\304j<\000\007\022=**{=\343\341)<\204\341\223=\002J7<Y\025u=u3\035=\303~\215<\371\242\001=\022\321F=ov)=`rA<\262\243\030\273\377\334\234;s\307\252<\2230\372<ju\002=\024E\262=\225\330$=\335\014\006<\316\245\373\274\301D\330;\252h\002=\274x0\274\004w\231\2741\225\227;\267P\010<t\361\373\274s\020\317<:\364?<K\251\014\275\"I\005\274$\302O\274pg\202\271P\025U9\006\264\001\273y\2353\275\257\251X\272~\215G\275\362\252\204\274\3367e:\321w\367\274\311\031\253<\301\036g\274\tOd\274\230\221\364\273\232\323-\274\307%\336;\325\007\325<\177\3700\275\336\316O=\322\205\223\274\024e\026=2\303\262=P\316\273=\347F\315\275\242\356,>\250@\224=\256#\361\272\205\320\224\275j\010*\276l,\377\275\242/\231\275u@\264=\250\371_=#\307G<\231O\340=\033\273\307=\232\023\353\2731o\357\275\302t\246\274^S)\274\325\351-\275\340&H<sK#>Xs\014<U\243-<\331\315\233\275\210\nr=\250\026\300\275/\274\205>\266\323\354;\361\263\024\276\360i\206;f\345\036\275\206\231\t\274>\274u<,\324\264\274\210\361e\272Q\243_\275\276 O\273\374:\270\274y\220\243<\3264\202<m\203\'\275P\202\322;\323Z\001<\260w\004;\357<\004<\251\363\001\275U\334\220\275,6\342\274X\321\220\275{\247\013\275\243\025\'<\255\331\202\275-\345x<(\300\254:\014_\346\274,\332X\274\ry\312\2740sd\274-I\205=*\335\234\275\333p\220;\323\2107\275\016yu\274\331\t\321\274\335\021\037\274\261\2525\275D\226\254;\362\244\376\274ZX\036\274\322\017\\\273\272\347\353<\256\261\214<\214\336@\275E\276W\275\202s\263<(\304\252\273x(\221\274\274\327\253\274\350\251\262\275\343\247\251\274U\332\261\275uG\231\275\240\'\270<\007\007S\275\264\273d<\370U\302:\252\265p\275T\262\261\2748q\253\274\256\377<<\227/\316<\313\177\324\275\342\362U\274\366\275\214\275\037\2454\274\364kx\274w\311\r<\237\203\266\273B\304:;r\273\322;\306\250\252<L\372\006\274\221@\305\273\361x\021\274{\025W\275\347\261\371\2735\355\2169>\354\255;\2544P\274\310\373\300\273\240\004r<C\324C=/\r\030<~,\335<\277\243,<E\356\305\272\007\030\216<\305`\224<\341\035\264;D;\236\273bA\367;J\262\202;q\252\227\274\304Z_\2757\304\373<\261\377\241:\225\024\206\2756HX\2759C\254<\364\272\003\276\372Y\033\275\027vW<\350\005\257=\225\344\220\275\207\234\217\274\205g\027=\022\351\344=\023\t\264\275\224<\200\275\0261\330\275\220y\031\275\037\361\032\276\033\366\247=Z\342\212\275*\033\276=\247\254\240\275W2\217\275V\214V=\220\332\217<1\201\213\275a?\027\275aI\222=\212|\215=]b\355=\221?\347=\245R\r\275\345 \310\275\027{\217\274~\276\002<\375\235\320:\026\232\224;\265\013w<|u3<\260\ru=\2607X=\317\340\315;N\361\311\273\267\355I\273\274\331\247\274\026\227\206\274Z\277^<\303\024\333;>\354\240<?K\203<\035\'\256<\212\323g=\321\217\216<\361\026\364<\261\263\314<ok\235=\216}\004=u\267\324<\003a\362;\341,^<\305A\365<\230\034g;\3521g\273~\336o\275\027\0377=\314\231\016=\230\240\260\272\215\222\337<\370_\260\272Lub;\007\343w=\007\321\212=\246\366\205=\014,Q=\356T\022<\307\177\032=4wR\274\371\347!\2758\"\326<\232\365\255\273\325\334L<\344\023\230<\371\233\013=\026\330\374<\362\004\202<Vw\364\272|\016a=U\315Q<\301x\301<h\223\020=\276\204\305<p\377\373<\365\013I=\347\005\300\273o\254M=p\303\217\275h\252\331;\007S\r=\310&\255<\315\"\n<\007\352\030\274,3\r\274|\216\231\274\n\006\024<\021\026\277\274`}N\274c\342\202<\332\207\213\273\013S\261=\004\201\n9\204\336\255\274y\243\331\273\204\001x\274*\t\265\274\363\367\022<\215\373\320:\226\2472<H\375\200<\304\240c;\322\205f\273\267\266Y\274\367\221\342\274ku>\2736o\225\274\343aF\274:\353\360\274\34692\275\216,\213=\344\004\343;\365\021\022=\302\265\353<\266\030\006=a\307!\275o?_\273\025\022\255\274\363\300K=\234\351\200\275IY+>\357\327r=\314@\220=u\340\316<\035\250\027<{<\213=\363\220\035<\250#\351<\360Em\275\330w\264\274 \r\223=~\263\217<\217\'2<\037X\237;\201\365\013=z\252\014\276P\205\316=\034\263\357;cs\031=]\025\n<U\323A<\354\246\033>[\326\026\275\200\016\3046\007\033\266=\212@\226<U\3061\274@\014\364:^\234p\274\326l6\275\342t)\274\220\336\345\274\301\346\016\275\024\003\311<H9\000\274\261)q=S@L\274P\025v\275\323C\354\274qj\033\275\000g\204\274}\r\265<\361C\006;\213[\350<)x\272<Zm\250\274\245\355\273<D\361k\274\205>k\275\264\n\310:\022\021\360\2747\320\256\274\356\020\317\274\'\373\301\275\223u\275=\231\005\206<\357\337!<(A\334;\005\002\361\274\352\246\232<\tT\276\273\334\260]\275f\246F\274\341^g\275\377!A\275\233\206:<\002\031\232\274\212\221\243<LK)=\376W\206\275LF=\274Kg=\275\300J\370\274\347\007\t=\310i3\274\336\206?=\376\001P=]yJ\275\323\370\300:\314_\224\274\005A\236\275o?\213<\307\3439\275|\256H\275\230<7\275\323/\255\275v\002\305=X}@:o\020\013=\342\n~\274\2455\265\274iJW<\217~\260\273\177d\356;\374\036\275;\315\013\240<\256\r\304:\213\000\002\274H|\323\273\017\315d\275u\266\224\273.\307n\273\226\324\207;\314\357\274\273\306\030,\274Pg\202<M$\233=\373\204\313;\317\334\017=\002\371\364;\302{2\273\366T\322<\267\323\216<O\265\010<\246M\002\274\213\362\014<\301\036\362:K\371\337\274f\232\206\275\317\343\016=\207\207\233;\360+\017\274\223\331p\274n\273d=xp\337<w\030>\275wOI\275H\255J<\t\232Z\275\213c>\274\373_,<\212U\\\274\240\363\267\275\327\333A\274.1\347\275\370XM\275\004\250\234=\304[\246=\215\315I\275a\266\203=y\212\211\275\241\342\317=\256\020/=\327[\'\275\305\250\001\276F<\320\275\014\340\224\274Re6=\245\002k=\313B\224=\315\207\341\2744\307\261\275\200\277\227\275 #\323;\236e\036\274\267\331=<Y\207\204<\272\375j<+\240W=\001\237a=\265\266\244<_\314\025\274\336\336!;\034(\275\274d\370\t\274\200\366\026<vV\001<\002b\354<\266\202G<P\274\266<\373w\217=\254\275[<\215F\017=%]\261<\236\254\223=.o%=\314\247\362<\227\007y<}\220:<\003\010\n=\237am;D\262-\274\017X\220\275m\211M=S\250\007=\302\024$\274o\220\177<\202\t\n\274!$\322;\312\r\207=*f\206=\215r~=\337.\213=U\372\355;\027\371\035=\366\361\265\274\332y\323\274\275\351\301<\000\034o\273=\373\224<\030\343\361;\010\366\351<(\033\333<\251AO<ZP\261\270\327}F=(\332\025<\237\271\000= \206\r=\205[\003=\377m\032=\227\023<=\213\000n:(\341\"=\271\005\262\275\235T\367;i0\007=\227\034\271<\3319A<\216\311\253\271Ad\t\274\347\242 \274\376\263\265;\220\022\252\274\005\266^\274\321~$<\364\373D\273\240(\305=\260\325+\274\347\206\200\274\201\354?\274\352\361\375\273\371\331\325\274\265\324\210\274\344\356\223\273\354\2138\274\001>\001<\332\316\35793\022\244\274\301\322A\274\326\250\311\274V\'\334\273\031\323n\274\273OA\274\255\t\002\275\245WQ\275\351\311k=\264\177\033<Hv\275<\035\346$=\344`\000<,\207\232\275f\220k=\212En\274j\254,\275\006\276\036=g\265];O(\021\275>J\036;\362\301\252\275\204`\224<g6m\274\036\373!=w\031\212<\'\257\204\2758\314\010\275@\317h\275\245\365\236\274*6\027<\256\020\226<m\342Z=\r\rU\275\261\230\202=rZ}=q\374\201\275c\315\004=u\213\255=\332PF=+~~=\013z\000\276\271\373\224=\035;Y:R\270\203\273\312<\312;\027-\341\274\007e \275g\236\311\274\2322\\\275\010&A\275\266XC<Hy\034\274(\352y=\344\331\357\274S\2479\275\017\241\337\274S\3475\275\013\201(\275G\367\205\274\264:\242\274\304\270E\274)\272\312;\0270\273\274X\016\213\275\251\005\351\274\274tG\275\350j\031\274\2372\000\275\2177?\275-A\034\275\207\257\337\275\376\307u=\177\002\\\274\n\215^;\370D\343\270\357\020\350\274\026\354;<U\237\026\275\247\341h\275\330x\026\275\345T\222\275\300?R\275f\330%<Kh\003\275HF\345<\350]\373;u\234b\275\232\321\t\275Ed0\275\352@?\275%\0009\274\223C\227\274N$\300\273\023\335\203<L\207:\275L\225*\275\212!\024\275\000\2442\275\357\026e\274#d*\275\327\016\201\275\027\335V\275\353\365\312\275\326O\234=\\\350\236\274\223\272\345;\232\037\211\272Js\236\274\033\350\301;:\210{\273\370\000q\273\016\022\031<-\3031<.\023$:PwL\274D\237;\274$\221\002\275\231\220,\274\006\372\374\273\223=L\2744P\237\274\354\031\201\274\330\213\323<V3\225=\275\312\225<\275a8=\227~\2519mxb<&\'\366;\226t\226;d\351\000;_i(\273\211\330\221;\374\002\334\274(Gd\275v\301z\274\n\017\322<\\\373\273<V\304\344=>\224\253=\347\213Z\274i\221\257\275g\3469<\204P\007>W\202\322=\251\351\326;\307\032\326<2\265\021=\232\023.\275\240\022\235\275P\025\334\275\023\210K\274qc:\2745\322?\275X5\262=\0160\310<\247F%=\231\001\033\275\224\227\267=x<+=V\356\364\2759\245\203\274\227\252\355\275\347W\274\275\215/.=\211\327(=\323\007-=\2540/;a\027\021>\177b\316=74\035<\227\306\365\273~T\3579\244V\354;\021>Q\274\030\300f=\372\024\024=\220O\372\273\362kl\274\203\005\300\273\324B\263\273\267\326+\275\3636,\274\261\371\006\275\024p\265\272:\331\024\274-\371+=y\344\220=\375@\014=\254<==mr\203\273\336\260\257=~\247\206<\216\003\337\273\000\023;<vsY<O\031\033<N\266\244\274\370\014\251\275n1}\273S\225\017=m8Y=F\265\261\274\255\340Z<,\203r;Q\305=<\366\3660<\'\'\234=\021\273\r=\030\257\005<\336\350\232<\027\261\377<\"\277\367\272\357\373A\274\216\316l\274p\265#\275r\262\003<\211\305\023=\300U\202=\252.\223<JkI=/\356\205<ldL<\302\236\004=O\310\006\274AI\211\273\334\203\010=\202\303\n=Kk\342<\225x\216\275\016\216A:\222L\323\273&\323\273\274\301\245\222=\371\274\"\275B\260\017\275\273\001\242<G\251)\274D\000\024<7\214k<\222,\346<\230\377\030=\344\225\267\274\324d\363\274\250Q\270\275\377\254\004:7\217\317\274\014\355$\274\215\234\201\274F\247\312\274\371\273\314\271\333B\260=0\243\210\274k\311\232<|\010\\\274\016\334\213\273r1&=\357\307P\274\342\020\236;\200\370\327\272\317`\342\273M\337\346\274v\1770\275\354X\235\275_\016\000<\245\337\272<7.\213=\243s\212\275*+$=\217\356\267\275\253\304\344<uz\325\275/\363\212=\316\375\346\275\014\030L\275\037X\207\275\206~0\275\265g\030<*\275$\275Q*9\275\354\224^\274e \021>\212\273\225:\311\315\017\276\220\371\036=\227\036\336\273\324\343\323\273C8\035>\317\030\223=:4\013=\003\204w\274\243oP=\260\016x=\202\275\237<\013\362e\274M2|=\323\337\010\276u\361\275\275\350n,\275\375u\013\275\350\251s<V|>\273xN\323;\250\255\006=z\2001=vC$=\236o\364\274#w\241\274p\013\217\275\030S\217\273;\343\250\274\330H\203\274\242\212\006<\330\323\364\274\275\305(\2748*\233=\375\027\362\274~\344\276;\005\216x\274)\205:\273}\2767=,w\331;\231ym:\036wR<\226sM\274[N\313\274\315%\030\275Ww\264\275\251\322\227\2746#.=\213\320d\275+\3214\275\236\014<\274l\013\'\275\251\037\216=\017\375\343<J$\001=v\337\356=\235\023\237\273|\224\215\273\024l\242\275]\213\031\274\244\023\202\271\306\257D\275Y\265\230\274\212\007\243\274e\273\225\274#\3531<l\204!\275\227\307\'\275{a\315:\217\357\341\274?c\261<d\024\265\274_\304\335<\026<\007=\243\216@\274\372\245_\275\320\033\n<\376\301\001\276%\245M\275\262\314\237<\214\362\257\273\234s\274\272\232\n\250<\214\315\034<\2275\031<\264\346\034\273\230o\332<\004\2536<f\326k\274\231\211\367;\277\'\234\275W.\222;(K\235<aR\313;\205\306\371<\3740\223<\246`;\274^\333\371<P\311\251\274\334\024!:\255\361\315;\243}p\272\353\343\365<\225\204\324<\211r\325;\206-\201<:\356^<n\370\353<\311O\025=N\000\221\275\036\r\t=\303\216\374\274\'\356V=]\005$\275(\373\323\2747`\333\274E)\327=\316(\277\272J\327\315:\235\036\341\275q\257\213\275\337\230w\275<M\331<\212\246\266<\357\214\233=\370\220\347\274\307\222\264<\230\273l=7?\220\275\300*\303\275\276\257;\274#\2347\274\275s\357\274T\357a\275\341\212\272=\247\365\277;\324D\341\274\323\300\014\275Y\302\356=\321\321\272\273\005\327\341\275\211\257s=\346\274\340=\267\362\251\272\226\230N;U\377Z< \241q<\224w\266<_v\n=[\366\216<\333\235\026=N\315\014=Ka\322\274\254n\020<\306\341?\275\240\324\000=\315ln=\300\240\324<\233zs=\301)F;J\331\257\274P\215\223<y\367\021\275\003\315k\273\032#\323<z\222\221\274\031s\310<s\244L=\335\353\261;\250&\375<0\341\003=u\360\330<\335\215\316=\262(\265\275\004v\304;\375\014\222\273\300\354\326<\216n\361<\306`\014\274$\266Y<\253\313m=\270 o<2\377w={\216w=`\\{\273U\244\226<[\342\306\273as\303\274\323\314\227=W\330\222<#\246i=\247>\363<x\273\325\274\375\353}<\237\3713\275\330\006\n\275*.R=\237\372-;x\213\017=\244\264:=\223\302\316:ALN=\243\267T=\360\2506=~X\225=\213\025\306\275<\350\364<\217)\273\274\242\366%\274\267\223\211<\'\365\270\274\0268\227;A\250\342;J\240\021\273\277\212\274\2748e\202\2741\355F<\234\000\266;I.\001=\260}\243;\027V\205\273V\241e<(\020!\274\304\307\201<;\331\033\275\334-\002\276\276\345:\2746\337\211\275E\033/\274W\357\236\272\220\351\276\274\335\262\201;\3079\317\274\375^%;\205\304\033\274w\370\270<\021(K=\200~\327<\254K\r\275\025\235\306\274\327\246\031\275xe\254\275\235e\203\275-Q\336=WS\006=\r\224\200=\322\221\027\275D\263\r\275\245\n`\274\320\271\210\274q#\212=|]\313=\222\307\367=N}\000>d\037\307=\237AU=\236\231D\275\246\360\232<b\030l\275\250\366\362<\020\251$\2767\221\372;\2700U=\312\205\225=;\353A=\27164=d\357\027\276c\n\257\275\010\375*\275\374\251X\275\320\357\r\276\262oy<\017\347\026\275\276[\326;\362)\341\274\2415\231\274\277B\222<\275\243\033\275\\k\202\275(!\266\274\357\200g<\302\277\223\273\037e\177\273\200\033\332<\220x\224\274\260\343\t=7;Z\275\033\216\243;=]d\275w\000\332\275\364\306\321\274j\034\206\275\3221\271\274E=\240\275\314\353\027\275gI\030;=\220>\275\301\266\215\274Om\013\275}\353\315<\237|v=J\213]<d\265D\275\366\244-\275\245\226\246\274!\223\234\274:\306\361\274~\377\010\275\232\302`\275PZr\275\211\353\211\275B-\242\275%\303\257\274\277?\r\275\245W\r\274*L}\274sL\016\275\027o\312\272\213\362m\275\344x\231\274Z\204~\275\256\303~\274\305\367\377\274\315\266\003\275\013e.\275\220\031\314\274)I!\275l\205,\274s\363\262\2758Gv\275\300iW\275~\006=\273!S\n\275\321%\313<g\3011\274&\221p\275hIV<P;\277<\355\003\027\273\321 A;L\226]\273\336\310\031\2744b\202\274\030\004\310:Vj|<\262~\246<\025\221F=o\351K<_\357\360;\371\375\333;s\034\250<8*\235</\002\204\274\362\222h\275hUN\274\232\365\t\275#S\177\273\342n\354\272\017\237-\274|\364\207\274\335\313\014:=\255\210;\355\360\365\273\001\031N<\367^8=\004\350\"=M\237\306\274\271KL\274\353\004\220;\223\210\226\275/\340g\275T\302%\275\333\236\227=\221B\265\2740\324B\272\327%\200=\345\225(<\245\205\243\275\367\002I=\211U\264<\263\336c=:\376\363<\035\244\024<\317?\257\275\201\243\304\2758Nk=\022\354\237\275\001o\210=Bz\002\276\305\003#\276\243\000\035;J3\255;L>\325=\345~E\275\322\034&\274\226\236\215\275\004\312\205;\377h\275<\341\032\327\275\003Dr<`Yz\2704\3602<\026i\262;|\355\217\274\016 %\273\264\262\202\275\000\2260\275\354\350\214:#\267\220<\026\314\240<\265\320\247<\255}\026=?\225\334;?\275\222<\211LO\273XyG\270\215\263\307\274\246\214\202\275\231\341\256\274\343\250\016\275\302\242\376\273\327\230\242\275\242{\270\274\r\246+\274%\311\030:\312\215c\274\2577\241\274;\300s<\246\362_=N\347\032=3\246\037\275\020e1\275\242\360\341<\ri\207\274k\037\336<\013\211\206\273\251\361 \275{\230\233\275\005\361H\275\036r\334\274[\342i\273E\311\273\274\365\213\244<\241~\371<\344R\210;\367\272(=\261\"$\274\224\270:\274\263\335\006\275:`\355\274\204\370\271\274&@\260:\2258\037\275\264\024N\2746\351\206\271\367\374\304\274\351\026o\274\301\252\014\275\031o\"\275\010}%=\212\326\304\274;\265H=q\010\227<\000+R\275\3100B\275\333\275\353\274\353\360\247;\024\001\t\274\354\360t<\321\227\215\2740l\331\273\220\2725;L\367\242\274_\210\r\275\200\377\210\275T\204\220\273\'\201\255\273$\224-\274\203\037F<\267&\351\274\220\343\036\273`\320\310=U\376\251\273a\215\317<\314\205\312\273\355\312^\274\005K\270<\275\305\327<!|\323:]\246\013;\036\206\366;\317x\362;v\270\214\274Su\234\275\\\203}<mp\300\274\274a|\274P\325!\275\252\214\250<\34145\275X\312\312=\267\354\330\274\010\002N=\340}(=\025\220J\273\177\274\003\275\363+\275\274\361\355\010\275\006\200S=\345l\022\276e\200\224\275\371\006\361<\013\374!\274\334\353\245\275\276\361\010=\220\363\377\274\346Fw\272\004\234\360=&\201\026=\262(\272\275\33380\274\324c\023<&\371j= \375Y=p\220\t\276\242w\220\273\330\235B=\373\035\205\275\331\2069\275x\274;\275\354\020\021\272\345\270=\274\255\373\'<\034\342\225\270\'\3754\274\237\007\320\273\020\"\022\275\326\3037\275\361\027\200\275\351K\005\273\263\357\241\273y\346\341;r\226\252\272{\3123\275\366\360F\274^\016|=,\254\246\274\361\221\272<\260\232\245\273\205\333\352\274\002\211\026<fv^=\377\036\305\273\020\026\330\273\223\360Y<jW\030=\027\201\014\275\323\020\341\275\363\254\220;t\263\t\275=\357\204\275\273\3249\275\226\347\027\275\013\001\016\275\032\035\364\274V6\360\272\307\317\036;\367X6\275yV\347\274\250\302\235\275u\274\237\275\314+\036\275F\271\n\275\335d^\275\035A\274<\ra\225\275C\207\343\274i\306\033\274\017L\031\275l\033\023\274\200r\022\273\277o@\275\351\272&<X\277\331:[S\\\274\002%5;,\215\252<A\225C\274\032T\345;Z\020\000\276\205\325Q\274\322E,\275g\002\023\274\360L\341\274\202\005\031<lP\026\2744fY;\202*\021\274-f\210<\361\032\r;|\333\330\274-,K\274\2304`\275\2561\227\274\030[\013\274@\263\270\274n\354\306\273\313\030\321\2745\334\230<\033b\241=\000\263\207\273]M\021=p\256\230\273\261\232\243\274\330O\316;dV\037;\215\001\371;\340\232\006\274\034\340Y:S\253\243\274\315\363i\275\267\356R\275\n\231\204;s\032\225<\356v\321=\021\263\335\274s\340\304;\206\360&\276n\256\240<\023\252\373\275\301\013\241<\333`\273\275|q\247\274m\034\273\273\302\317\005\276\356=O\275Z.!\275\2204P=\275\333\373\275\r\313\210\275\274\254\000=j\347\244\275\034\320\265<\366\317i;,\222\211=\204\327\204<\023I2=jTJ\275\007\022\345\274\320;P=:\215\302=\004\004\240=\002*Y=<:\320=x]Q\275\261\350\331<\245\260\304\272L\307\230\274\004\314\003<\264\332\022<!l~\274%x\001=\243\274#=V\343\264\273\247\303\"\275(\276#\274\333\356\020\275\322\330]\275e\326\241\273\370\0308\275\270_\204<_V\006\275\240\337\267<\221\207\201=\305\2355\274>Q\331<9,\312:@\024\213<\304\007\177;_y\277;_Vt<J\312\006<\262\222\023;,H|<\375\345\266\275V>e\275\257o9\274\321\025+=\005\004\003\275\274\373\261\274\355\022\"\274xBM\273\367\255J=\2676\004=\r\034-=d\366Y=\316\243A\274\354\331\200<\227#.\275\004\177\231\274\270v\220<+V\005\275\025\271\001=\321\010\003\274\017\010\234<}P\274\274\225+\250\274\230\311\246\274C22<\325.(\274\016\334I\273H\036\274<h3\035=\205\'==\367\237\251<+\243\262\274\312\320d<#\262\241\275\302\272\022\275\007M\031=\313\r\220;\343~#\274h\327\300<x\372><\301\333\337\272B\361A\272uA\226<\026O\222<1X1\274\313\022[\272\250\365\007\275\2442Z;\003q\006\273\340\272]\274\013\364\002<Z\211\367\274\032\010\376<\007\021\372=\233\307\343;o/\216=\242\355\023<\"\253\201<X?\327<\274\267\372;\260j\250<\236:\327<\337N\205<\262\267\223\274b\204T\275%\330\246\274\235\216>=\223l\034=\256H\354:\261*\355=\374c\010\275L\364\243<\000\275\261=\r\250\301=\023\213x=\323\362\220=\342\330\020=E\256o=\325o\006\276\302*\313;\342\024&\2745\345\357\275\t#\274\275;$\t\276V\312\270\275,\273H=:\341\241\274\274\375a\275\005\261\364=nX\363=\306\333\003<S\215 \276=\t[=\001r\233\274I\202g=s\2105\275\211\021\376\275\021-\210=\244\360\003\276\352\034\273=\253x\021=x\271\351;}\027\n=>\303)=\311\023>\274\210<\005=\3000v=\026Q\325<\374\366L\274\267\337%<\264;\311\273\271\251,\274@\337Q<z\230\027\275oj;=$\373\324\274h$G=\237\375\306=\233\227\252</\247\217=q/\306<W\251\265=\324\312$=\244q\234<-K9=\370\315\206=n|z=\321\304t;zK \275\250R\036\274\2333x=\027X\200=\032D\227<\313\204\322;\33043=\320\343\374<\360G\220=\013IY=c\315\212=h\222\343=\201\374\361<\376\340a=\366\020\273;\307b)=\240\223I=\364\243{<\322b8=c\340V<\303\235\203=\026Q%<\010\310\031=\010\276+=T\264\035=T\306\031=\\\364R=\254\275\025;\323q\270=\336c\255=\351*-=\344\343\321;\026\317\201=\262\234V\274\362\335\346<\337\251\235=i\250\025=<\332\271<\014w\210;\236\002J\273\024\370\300\274\036G\340<R\275\336;\262ku\2743\267H<\341_/<\215ii=UE\321;\t\241\206\274\200\343t\272q\242\321\274l\360\212<\357U\240\272L\233\361\275\363\032\224;VS\335\274\221\376\021<8\246G:Xdp\2742\360\372\274\036\207\030\271\335f\272;$<\310\274\022}\365\274U\007\004\274\013\204[=\367\'*\274H\246\003=\027\234%\275N\n&>\'\021\316=\007\267\313\275\310y:\276)\373\213\275X\201\273\275\253\364s\276\031\267\335\274\216\364\022=\353\356\001\275\276\324\270=uN\006\276\035\216\037<\225D\315=\372w\217\275\025t\036<\260\n\241=\020\355\273;\337:r;>\305\205<W\243j=\350\370\257\275\033\314\343\275\372\\\200\275\367)p\276\257\250\310\273g\274\257\275I\030\362=\363\305\225<[p >%L\212\275\024}\023=\021\272\017=\222\366\017;\333?\026<\\@\341\274;\373\270<c\033@<\273\220\227\274\330\336\312<\034P\237<b#>=\371\024\210\271L\251\023\275_\"1\275\223\014\315\274\321\'H=\330+\242;[\247\200\275I/\255<\312\036\275\274\202v\030<\234\223S=\256\332\364:\005:\033\275f\262\206;{\363\240<\036Y\005\275:C9\2758G\325\273=\r\275=\310\304\027<z^6=\306\354\035=\033\030\367<\222\032\032=\364\334\377<8\025%=v\216 =e\225\274\272a\276B=4\013\242<w\237k=\321\334G=[\034\021=+%\221;vn\000<\2602:\2752\271\243=\322:&<\274\227\221<\027}\377<\020hc7\254\322\230<\177r\032=\016`\002\2748f\261:\024a\262<S[!;\244\234\262\274?\350\277\274\t\271:\274\263m\300=Q\271\264\273d\246G=i\004=\274lJ\311\274\270\252\036=\316]\003<\r\024\216<\376\014\226\274\203I\360\273\005\301H=\264\365\204:\366e\206<\027wr\275y\004\006=\2618\254</\201S\274\027\255\351\274U\203\236<\232\360\023=?\373\325=\344\334\002=c\216r=\227!\377\274\013l\316<NS.=~\230\260\272\343R\013=1\234\025=6GN<\352W\333\274\2538\206<Vzp\274O\226\214<\351&\t\274\016\360\311=\317r\204\275\253\372\235\275\013\r9\275Y\344\272;\234\216)\274\221\276^=SN\003=\302\350\226=\002\245W<\337uA\275\361\222P=\002\203\340\274SD\274\272%\016\212\274\207\'\203\274\234\211\212\275\034\356\360<\344\264x\275\333\337N=\2527\333:n\357+\275\200kY\275c\320\\\274&\034M=r\234>\273\362E\035=\332b\225<\247\324\304\273\250|\030>vd\354\274\322\233\355<QuL\274U\232!\274\215\370,=\332I\264<\010\256\264<G*\037<0\250\035<\226\212g=hY(9\272\314\220<\234\2511\275\310\003\333<\374\252/=FUP\274\'\277Z\274I\366\022<\342\325Y=c\307==>\353%=\352\211\027=\323Z\210\274\265\303\313<\004n\342<\256V\220;\232\251^=\230,R=\356\372o<~\366\270\274K\351\332<\342:x\274\212b\026\275\253\316\230<\2402\317\267\002-g\274\270\026q=\332\275\001=\345X\342<\030\312\320<\037\221\210<3\320\324=}\342\274=R\241i=\257\337\243\274\342y(=\360\356,=P\216\207;\340o\221;\361\324\313=\020\377\227=\343\212d=\257]\205=\261\361J=\322\216\354\274\265\250\202=)\245\202=62y\274\252\314\251=\"\226\321=\331%:<\005\224d\275%\002\302=\351\275\005;Ba\302<H\261L=-t\002=D\354g;=\257\007<1\315\013<l\226\365:\273\216\234;jj\375\272Y\323\356:\340)\200\274\341\247_\274\020\341%=^\257\207:\277s\271\273\363a\342\273`TY;P\007\277\274UH\244<\2747\037=\340~\256<\207*9=\021\377?<\210\353\006<\376B\n\274t\354\212\273\340gc\272\026\337\315;\026W\334;4f\010\275VA0\275P+\037=\225\\\306;>a&=\222\213\232=\177X\210=)e\342\274f\226}=\333\277\321\275\335x\301\275z\214;=\254w\\=\031\252\236=-\354\002>\226\271\220=\203\313h\272\372\364\270\2750S3\275b%\001\275\342O)\276l\014l\2759\202\224=%\254\017=\253\030x;\223\014\266<L\311\005\276\026\277\202<\003\355e\2750N\024\275\265\2366\275\3005e\275I-Z<\242\016\004\274p\215\353<{+\260=\225\332\031>i\0052=N%X<3y\007=\212\"\266<{\247r\274\371\315\223=\220\177\003<\223\204a\274x=\220\274\334*\246\274,\354Q=\303\004\244\274j)\003\275\2770\331\274\014>4:3\372~\273\002V5=R\244_=\004\3673=\306\005~=\221\355\226\273\337\235\244= \221\020\274\246\321\326\274\305}\r<.\355\203<\257\214\364;\242\013\375\274\215\022\243\275\310\266\214=\356\002\204<vN\202=\323\214\272<v\226\030<\260\247\372<\202\202\214<17\226\274\265\304`=\3378\260;\014D\344\273 \201\274;\316\345\025\273\343\3560=\005\375(=\'\200!\275\030\277V\274#\2727;\016\311\260<\016F\220=\253g\355<\317\014\221=\007\270\224=U\234;\274\312\273 =\221\241&\274\225X\030\275\347\323M=L\371\251<?\247\331\272\306fa\275\'/%\275[\207\273=\306\366\262;\237\022\272=\t#\217=\265c\005=\030\177\343;,\330\203<b\256\241\274G}\244\274\214w\026<\275m3\274\002\341R<\0260\010<\206\021\330=\214\001\374<\327\211\241<\366\350%<\263\350?=\006p\036<\034\030\206;g\t\253\273\206\236m;4\270<<\257m\255<\266\3761<\016N\245\274\362\345\252;\032,\031<\361\021\203;,\324K<\352\305\255;\215Y\260\273uu}=W\234\360\272\006\313J;3\254\024\275s\265\254=);7=*b\236=\225\261\203=\034\315\332<\253\217\310\2754\276\362=\3407R<f\346\227\273l\320\037\275\272(\301\275\332\177\223\274\",\303<\301\206\223=\315\217D=%\342R\274\302\351\312=\340/\324\274\344s\265<\365-K=\324\264\265\275\275Zh\275s\362t\275\035\204\035=\333\"\241\275\243B\002\275\312\267\352<P\242\257;\325\232\267\274^\324\237=\357M\270=\206^\251=v\'\\=\030\364\323<\375\037\002=\241\362\213\274,=\032\275H\367\360<\304\006\021<$\306\335<xN\312<\310\203\322=\357\275g=~G\364<T\335\004<\rA\273=y\343\354<\362\255\244<\321\241\206<\024~\243<\252\001\200<\372u\240<\177O]=\021H\232\273\332\361h;\231\326\312<\203\234\232<B\343\030=\302\265\036<\000\353\365<#/\274=\360X18\000\351\231\2733\224\354=\337H\204=\325V\225=v\377O=\357\277\177\272\022\374\017\273\343\300\274<\261\017\254<YQ\351<\214\010\021=P\337\t>b\033\274=E\r\t=\312\343_=\016\032\210=\27005=T\335\020=\020\2304=\247G5=\253\340 =\2709\300<\264\261i=\002\370\020<+\032\367<\327B1=\027\361\311<0\023\374<\254V\203=Q\"\006\274`\331\331=\362-\006=\273\241\333<"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "\216(\311=\222\202r=dU\025=\323\r0=\026\372\030=v\263\201<r$N=*\254m=\251\370\304<jUB=i\020\272=\323\025:=u\027\211=\272\340\210=\263 \202=.}\236=\270\\+==\026\273\274\235\301\023=w\347u;\257=Y=-\3334=\323\035\323<iO\205=\366{s=\200\312\016=xd\037=z\301\241=\001\333\212=\033^C=\371\251\274<R\216N<\263h\346;B\343\201\275/\332\007\275\271\301\205<\220,\034<@l\245;\263?\373\274:\360\274\273\342yd=Qm\372<:V\312<g\243M<\3142l\274\251\213\371\274?0\233=\204\243\224\274v|,\274\236\260\311\274\303[\201\274N\210Y;n0\355\271\025k\341;\356\'\271;\223d\335\274dbf<\245\272\333\273\244\026U\274\210u\212<(E\242<\366\010\201=\276\345\315<\206$\023<\265R >E\213\016>lM\212=\225\357\266=\263\211\265=\254\037\276=\021\"\343=;\301!>\371yW=\277\232\250=\034\033\017>\376\307\340=\277\355\002>4\253\010>\"\021\016>z\211\005>0\322\253=6\311q=g\366\210=\217\220\010=\320\267\273=\346\335\010>\325\264\235=`\360\327=\360\332\334=q]\234=@B\321=\221\316\307=xR2>Bi\330=i\360\323=31\241=\035g\211>\355\355\\>\276\251\372=\361\300\t>\347S=>x\360\337=sM>>\260H^>q%\237=\201y\020>\332\030\221>\226v\306=\343\252N>\021\335N>\370 4>\375\352g>[\001\007>\177\312 >E\272\371=\352j\307=PF\037>\016\301\031>\177\232\023>W\260\016>\032\2401>\017\254\371= \255%>\251~1>M\331.>?\225\032>\275\211I>\307\307\373="
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:1"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:2"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:3"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:4"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:5"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:6"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:7"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:8"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:9"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:10"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:11"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:12"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:13"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:14"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:15"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:16"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:17"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:18"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:19"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:20"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:21"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:22"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:23"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:24"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:25"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:26"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:27"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:28"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:29"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:30"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:31"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:32"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:33"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:34"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:35"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:36"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:37"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:38"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:39"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:40"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:41"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:42"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:43"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:44"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:45"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:46"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:47"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:48"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:49"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:50"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:51"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:52"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:53"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:54"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:55"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:56"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:57"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:58"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:59"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:60"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:61"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:62"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:63"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:64"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:65"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:66"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:67"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:68"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:69"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:70"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:71"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:72"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:73"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:74"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:75"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:76"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:77"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:78"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:79"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:80"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:81"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:82"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:83"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:84"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:85"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:86"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:87"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:88"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:89"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:90"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:91"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:92"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:93"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:94"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:95"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:96"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:97"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:98"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:99"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:100"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:101"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:102"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:103"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:104"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:105"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:106"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:107"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:108"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:109"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:110"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:111"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:112"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:113"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:114"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:115"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:116"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:117"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:118"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:119"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:120"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:121"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:122"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:123"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:124"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:125"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:126"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:127"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w_out"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 6
          }
        }
        tensor_content: "\304\331\256>\236\266\241>N\352\222\276\226\252\013\277;+\360\276\r\276\024?\350b\017?\txT\276pK\017?y6\006\277H\321E\276\236\315F\276o$2>I\324w\276\277\250B>\217\243\315=\327cu>\307\024\371\276\274\324\247\276\2208\224\276\350\364\017>\227\317\265>\337\213\373\275\361\r\025>\343@\271>\234\310\320\276\350\204\222\276\303aG\276\361S\"?x\3455\276\006\277~>\300\033\364\276\312O#>\360\023*>\216[\261\275\177\311\013=)\"\355>g\305\356>\264qu\276V\237\223\276\037\326\275\276|_\260=\275Z\341\276\234\220\306\276\301\343]>\265y\226\276fv\023?p\337,>\200%\205\276P\241_>\345\322Q>$\231\200\276\rZ#\276\374\225\222>R\271\261\276\277|\256>Ss\223>\234[\007\276.J\224\276\204l\214>\033\235\024\277\345\'x>;\203\214>_\215\031?\3264\207>\267#\'\277\275\373\240\275\374\005\034\276\305\367\266\276;:\032>v\303\r\276:\211\240>B\312\212\276b\355\221\276%\251\025\276\355\344\031>\262\0035?\242\026\300\276Z\266\206\275\3104\326\275\204\037\020\27616\252>\2263\304\276\2476\317>\021\3342>\334%\354\276[``<\352\213\305>As\221\276H\350d=\010\317\340>\342\\\266\276\241F\217\276\352U\272>%\227,>\3172\277\2768\374\025>\216\377\221>\242\250\210>\322+\254\275\220ZU\276\322d\344\276=\261\035\276v\033\036\276`\303\275>\212B\r\277z\374\276\275, \333>\232\367\021>\366\201y>\314\223\243>\362}Z\276(\201\202\275\273X\325\276\r+\217=6\032\003\276R\311k\276R\346\004\276\364\320\200\275i.\000?\004\277\263>\254\245\213>\255\312\236>\261\020\361\2769\305\277\276h\253X\275\243d\253>\207\360\203>\202\031b\276\326\244\233\276t\226@>\252\260^\276\317@\033>\345\224\264=Fh\316\276\377v\177>\240\273\325>R\017\234\276\335\203@\276\241B\021\276\201\365S\276\367`\036?\026J!\276\235W\267=q\366\201\2761\036\252\276\177\034\265\276(B\002>0Y\312>H\315\267>@\333\244\276\026\375\273>5P\032\276@\001K\274Te\214>K\210\361\275\n\215\257>M\300\264>\364\275k\276N\035\357\276\370\240\027>M\342u\275[\010<>\377 \345=c\223\215>\255eA\277T\023\377>\230\306\262\274O-\344>p3\226\276@\213\230>\3516\201<\213\001\377\276\024\245\201\274\232\317\376=\334\215\017>\035\033\360\2767\335l\276\237\270\226\274\024/\"?*\235\305\275a\333\214>\273z\207>Z\362\344\276\177\276\352\276\031.\263>\226p]>w\335\351\276\"V\016>\005T\320\275A\360\220\274\320\206_>"
      }
    }
  }
}
node {
  name: "w_out/read"
  op: "Identity"
  input: "w_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_out"
      }
    }
  }
}
node {
  name: "b_out"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\323m\200\275\260\207\232\2746\270\314\276\327a\370=|\314\214=\032\256\272="
      }
    }
  }
}
node {
  name: "b_out/read"
  op: "Identity"
  input: "b_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@b_out"
      }
    }
  }
}
node {
  name: "output/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/mul_2"
  input: "w_out/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "output"
  op: "BiasAdd"
  input: "output/MatMul"
  input: "b_out/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
