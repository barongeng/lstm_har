node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "label"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "input"
  input: "transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\t\000\000\000"
      }
    }
  }
}
node {
  name: "reshape"
  op: "Reshape"
  input: "transpose"
  input: "reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "w_in"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 9
          }
          dim {
            size: 32
          }
        }
        tensor_content: "\246\217\331\276c\203\335\270z\263I\277\262\0246\276\003@\016\277;p8\277J\364\336<J\\??>\345M\276\251\025\t\276\'\351\000@$V\274=\207?L\277\252$\032>\305v\375=\002\353\220\276\341\252S\276C\260k<\302C\232<B\310\t=\003\327L>\270j\240?A\375\327\275\205*r\277\027i\320\276j\356\266\275\376\027\312;K\3173\276\036\260\013\277\236+\306\276\333\334\330>=J\305?\177\366\233\275\250\177\326\265\312@/\276\321x\240\274\317\300 \276,\301\220\276\0352\'>\213%9\276\311\212\241\274\243U\217>\026h\010\276b,\005\276\005V\305\276\253\001\331=\275\335m=MF*=\302\272M\272\366U\224\276\333\214\005\276eW\346\275\237\0137\276\031\243\344>:w\317\275\252\345%?S}\201\275\231\367\"=n*\201\272\271=\311\275cJ\247=\370\n\374;\027\010\027\276\332\3330\277\031\320\005\276\364p\2157\372\343\007;\004\304\353=Q\217.\276\257\213\345\276k\202\255=;\276\262=\325\004\247>\200\005r>\331 _\276\227\204\211\274n4\360\273\316)\353=\220\"]\275\202\366e\274\315Mq\276\374\237\327\276\204K\275\275@\341\324=\353\223n\276\347$\341\272\265Zv\275>#\372<\234\314\005>p\356\226<BZ\321\273N|\221\274\354z\207=;\000\002<L\347\251\276\275\346\246\276\3621\326\276q\304\2149\351\264\312>\337\266\270?\330\202`\276>\253\361\276;\216\206<\265\330V>*W\217\275\262\235\250?\343c\215\275\237\262\273;\005\333\006?\236\331\361\276B\366\002?vF\306>o#\347>\352x\332=Z(\324\276\236\2654\277f\225\362=\372>\373=/\006N?\203\247\272>\027\202\177\277\"&^\276\352A\010=xSG>\301\246\022\276:~\233>\274\013~?\332\'\341\274\032;\006\277\240\206\016\271\263\002\215=\0106\027\276\342}]?\025kP\276\031\034o>\003\274??\034\003\230\2779U=?\272\3654?7\"!>\034\211&?\213\240\363=S\017\207\276L\037\331>\321m;\277\2429\270? =\256<k\245\360\276\223\n\005\276a\273\300\277M(\356<\274\342/?Y\022\315\276\207\376\327\2767\277\014<\265\337W>N\247e\275\332\265\"?;B\033?\263\270\002?\205n\274\277\213\231\313\271\345\'\027\277\361\376\343\276C\254\251\276{V\212\276\206\353\355>\226\265T\2745\n3?(\242\345>7\346\221\276\207\347\025\275\35776?\024Wa\276\231\274\200>\256s\212>C\356\265\277\"\306\246>\nJ\r=};7?w\316N\276\241\242;\2763\3551\277O\031\214=df\023\276[&\251=!2\250\273Q\327;=\034e!\276\250m\323>SQ\277\274\311\344\242=\220\343A>\302\210!\276\304M\315>+\304\255\276\212\230\270>\036&C?\3432?\276 \211??S\273\361\275\261\363B=4\354\213\2778\306\307\275K\266\201>NY:?\321\330\276\277\330\030\244\274\340@w\276\215\331d\277+9\"\276\376\340\370\276\371\205\t>\246\307\360?\332`\252=\336k\322?M\014s\277\353[1\277\354\007\r\277\364\230[\275i\265\300>\3366t\277f\332\253?@\257\001\277@pa?\336g\222\274\234\034\335\276Z;W\277\355\312\263=\224k\205\277\253\315C?\337\324\031?\200Q\235\276@\377X?\340%\002\277\325\023g?$/=\277\300\306\021?\211.m>2\036\201\277F\3645?\246/\344\276h\230\331\275S\335\023?V\004\"\277R&\376\274\274N\337\276\255\217x\277\315\353\262\276P\215\266?t\226Z>\226\227\326?\370\302W>\342`\r\277dv\201\274c\372\241\276y\306o>D$\374=\017\226\367>\252\033{?)\374\035\277+\255\016\277\216\320\020?\325\220\237?\007Q>>\241\321G\275\212\367\n>\025\303\206?/Js?\246J\030=sB\266>\334\305W?\315j\357:\201\230r\276\221\210F\277#\374\260\275\270\010\317\276t\226Y?\347\2526=\371h\207>\222\3055?\222\303\023=Z\326\014>\221r\263\277XO4?\202\357M\277(\2112?\347\264\023\277"
      }
    }
  }
}
node {
  name: "w_in/read"
  op: "Identity"
  input: "w_in"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_in"
      }
    }
  }
}
node {
  name: "b_in"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "\352\3367?\260\344v\272\332\250\332=\0028P=\303\211\017>\364\270(>\372d.?\017\330@>\r\373\243=)\202\256?\200\240d?\201\324\302=1\273\316>v\004_>\334\233\322?\243\271\210>\030\010P?\274\001X?\267,\200?\331Ow?\320\330\356>b\347\177<\371\"\332\275\210;z?\270\233\356?i\017\210?\247\262Q>\273\0366?3\335\304?}\'\314?XT\217\276f\301\004?"
      }
    }
  }
}
node {
  name: "b_in/read"
  op: "Identity"
  input: "b_in"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@b_in"
      }
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "reshape"
  input: "w_in/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "MatMul"
  input: "b_in/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "relu"
  op: "Relu"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split"
  op: "Split"
  input: "split/split_dim"
  input: "relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 128
    }
  }
}
node {
  name: "rnn/Shape"
  op: "Shape"
  input: "split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice"
  op: "StridedSlice"
  input: "rnn/Shape"
  input: "rnn/strided_slice/stack"
  input: "rnn/strided_slice/stack_1"
  input: "rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack"
  op: "Pack"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1"
  op: "Pack"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack"
  op: "Pack"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1"
  op: "Pack"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "T\260(\276\351\313\315\274\0316R<SoX\275\226\320\021\274\266*\007\275nE\203\275\262\250\373=\236\233\377\273\216\340\203=\241n\316\275g\223\266=\352\251\255:\rpC=\230\271\237=\200\032\331\274\373\017\340=\342\210\300;\367[\211\274]\t\205<T\306\265\275\317Z\270;\362#\017\275\376\207\347\274\316d\212\276C\212\231>\352\241\236<:u\225\274I}\246=<\003\344\275\343u\361\274y\227\264=\002\006\036>\224\367->\036vQ\274\362\030\032\276\340\255\000\276\\\177\'<\0302\367\274\332\266\376\275f\260\361\275\316+\341<)8_=\302\211\236=\016Z\300=\315\266\276=\031I\260\275\301\010\026\276?\205\367=?\377\230\275L(\213<U\322\257=\352\370/>\rt1\274xh,=\214\010\210=E\375\240=k(\342\275lm\277\275\224\354\335=\201I\251=\346\010?\276\275\263\035\276\035\327\326\2742\004\360=6\373p:\226&)>\211\266\213=\330/+\275\214\r,\275`\315\253\274\226\023x=\3034&\274Q\010a=\030\240\014\276\237\203r\275\222\'\322<\036\312o\275\277\367\212=m\364\251\275V\310\225\275\316\341O=\032\241\321=\226\271s\274\337\320\302<?f\214\274\001\330\357\274>\014q\274\242\260\016>\023E\027>=\236w=\3421\246\274Y\321\334=\262(\000>@_L\275n\235\231=\330-\305<\001\247\372<u\377\006>\260\364\325=\270\371\206\275\272\326\313<\362\020\252\275:rE=\362\310\345=#L\311=\2242\036\276\275\2058=\200U\020=4\236\252<\215\026q\275\211A\342\274B\222\307\275k\004k=ru\343\274\223\231~\275\341u\014\276KI0\275\263j\350\274\022K!\274-;e>\215=\257=q\330(>\344\251[\275K\236\032>/[W>td\006\275\217\214\263=\354\261,\273\036\335\0029\236\0166\273\375\205\2608Y\240\235\267\242O3:\327`\2159\254w\020\272\221\206&:\t\034\3257\364D\007;\362\020\0229<\371j\270/j\3478\037\252\3166qt\3268\226:k\271\202\304)7g\350r;K5z7[\025Y\271\201`(\270e\016y\270_\375\32092Z\224;\225G\"\270\316\242A\274\355\337`\267\265\374\357\2700\t\027\271\307:\327\273\366\035%\274\355\335\234\274\205\021\2217u\342\216:;\254I\273\365\341\320;\257<\036\274\374\342\\<\321\227\203\2757S\007;$\020\001;\242\rh\273\243U\350\267F]\216;-C\2459U\355\244\266\302\245\250\273\227\356G\273f\360F=\310\347\226\275\234\240\3408\251g\360\274\\\222\266\273e\216\032<G\3100\274\255\257\210\273<^F<\231)Z\272V\3171\273\226X)\274\007\255\020<A\336\'=5\212\007=\312\212\r\274\335)\00596\003`\274t,R9dh\214\270n\256\257:R\032S:e\305\254\273]\'\031:\317\250\3778\317\262\023;\\\021\2009R\330\201\270o-\'93\304\2566\243>\2029\216\n\001\272\020\210\2129O^\030<Yq\0068\"\261\220\273\207\353\366\267\t\253\305\270T\203+:\346\023\256;\366[\250\271E\"%<\224\254\007\267\210^\273\270\247]\236\271J\000\342\274jZ\277:\354v\270\272\347\375y\273Y\274\366\2714R\205;\267\307e\270\233\t\034<\2638\177:\217\242C\274\236\214\3279\235\336\304:\210\211?;\016\247L;\0202o\266\234\253\373\272\254\372Z\273\002\035#:S\336\217\272\311\327t8b\326\013;\346\236\327;\306^)\274\363\241\215\270\033\225:\270\211e\304:\222\320Y<k}\371\272\"fO;\304\n\334\267\326\320\037\274$\033\307:\277\353\035\274\331\310F;0\240\271\275\342\"\254\274`\326\314<\"\273\223\275\021\217\224\273\"\264`\274\216z\022\274\177>\217=II\262\274j\220\376<\207Oa<R\217\0149\026\241\240=\225\377\005\276\314>\225\274\211\205\345\274\037B\024=7\252~<\004\274\222\275@\204\321<\245\014\217\275\177\225#\274\227\257\303\274CC\260\274\007\257\232\275\337\235\277=\364\312\353<\3179\007\275\340\243\233\275\315\254\261\275\203\276\265=,\306\202<\207\324\001>x\001\275=\377S\027\276\303Y\322\275+L\240\274\264q\007<\246\314\"=\006*\300<z\202Q\274a\214!\273\033\272\331=\260\321W\276\016\036\350=\026B\217<\016M\002>\213\300\372=p\337\005\276\032c\017\274|\230\366\274c\262\231=\341\331\252\275\005\321\333=\323\304\376\274\347\356\254<\276\r\372=\004\223e\276\372|^\275\032\336b\275\227\243\030\276&\213\274\274\214\267\023\275\251y[=S\224\035\275\030~\222<f%\005=\025\353%\276\212\370\243\274\241\332O\2756\3520\275\232\336i>\231\226l=\261r\214;19\337<\342\313\275;\242\020\227=G\224\233=\354|\363=\277\212\024\275\023K;\275&A\005=2\246\352=\3561q=Y\010l\275\374\302\210\274\236\322\241\274\373P\277\274\362B\223=\371\200\352=~\330\225<\337;\027\275\335\321&\275`\324\'=\303\374S=\214\316\301=\017\307\t\2747f\247\275Ge\"=\367\r\217\275\242K\247\274\027\337\204\275\230\241\004\275\000\031\264=@J\253=\360\223\201\274\321\017\003<H\204\301\274\337\3515=\306\330_=p?\322=\375\253^\274b\022\220\275\265xJ=\303t\310=\200C\017=\007i\234=\325\352\013\275\031~\333\274\226\255/\274\210 t\274&\023\234=\351l\264\272=\300Y\275\315\322\320\274\362\010<<\004\312\254=f6n<\2524\255\275\361\027`\274\"\362S\275\330q\360;\244\253V\272\212\223Y<3\370O\273d\177\376\274\334\242\016\275\365\206%<Y\005P=\356v\303\274\0031\314<w`\374\273\302\202\230\273\364\027\270;AN><\370)$=V\"\214;}2\265<\342]\254\274oI2\275\036\255\242\274\0236L;\220<\021\275\303\203\302<\332\316\016<\231\337X\274\305*\242=\276\343\211\275\341\'\340\273\262\244\340;\021\253\323<\212P\305\275\237`f\276\354\357g<\001\341V=cZ\002\275\312R\300;ab\375\275@\253u\275\266D\327\275WwS\275\017o\004\276\227\235\204=\254\313\016=\240\242.\276\371\370*=\366J\234\275)\337E\275\317\251\036=\323\346\301\275\327\331q\276\031U\246<\223\341\205=\305\213\213\274C\r\272<\334\322\214\276\033\204O\273?\034\351\274\247\210\241<yGP\2763\250\030>\236\326\373<B\373\205\275\252\374\324\274\323Ap<\024c\350\275\0255g\273.L\212<7&S\273<\260\347\275o^\211\274\016\320y<fT\210<\306\301\250<<\373\336<\320\243\003\274\252\227_=<Q\262;\216\250 \275S\322\017=\n\3503>\037\327\205<\222\312\272\275\256\206c\275\340\025w\274C\"\335;0\202;\275j\036\007>\201S\210<\240$Q\274yd\275=\032\232U\275\2713D\275a\374\276<\276\273.\274\217\3736\275\355UW<6\377\241\275JW\275\273Z\345\223<U\252W<8\365(\276\345\300h\274\237}\"\275~\234\221<\0278\201=\210\327\304<\351\t\202=q\276\2219\034\263a;~\317\237\275\321!\001=r\2423>8zH=\003M\247\275\345\276\250\275e\\\233\274\274\311#<rp\323=\226\002\262=_~\233\273$\320\265\274/\357~;\022\262U<O\335\352;\033=\271<G\357I\275\0222\356\274\323\271I=\231M\010>\250\374\210\2757\373}\275\016%d\275*\377\'>\020I\222=\247\202\314<\312\315\262\275\r:\371\274h\037?=\356[\332\275\243\217:\274M\3653\275\251y)\275\177=\211=\007\357\313=P;\224;8R\220\275\254\230\311\272#0\001\274^\255\240\2747\352\t<T\217\363\275\263\001o=bK\247\274\263\322\204\276\0136y=\345\nT=\2413\211\275\372\027\035>W\365\006>\234\334\000\275\310<\343\275ic:\275J\031\203<j\020\267\275LA\232=\321\3532\276\"\3011=(\302\323=A)\270<\035\326q=\212 \325<\017\352\004\276\010\013\366\275\003|L>-D\010\276@\017\035\276\337\337p<\\]\357\275\266$\004\276A2\337\275T\2442=e\352?=1\177V\27654\211\275\263\252\227<\214U\177<\"K/\275L\323l=h\"*\276L\362U<xh\013\273XO\254\274\035\241\004\275\2176\223\275\260:!\275\274hl\275\257\255\306\275\241\2258\275\362\210N\275\206m$>SB\217=4\310&=\201\250\206=\333\367\005>\357\002\244\274,$6>oz\243\272\031T\264<\036i\025\275\332\310\030\275\256\013\227\274`p\372\273\264\270\257\274\037\374\236\274\"S\312=\376C\036=\244\222\362\274S0\323=\024\2215>[\177K=(\3205=X\233\361\275\247z\307=\213\035\026>\016}\022\276D-\214\275v\2107<w;\252\275\331\006\025<\232\231\035=\017v\311\275%*\206=>0\357=\006\262\023>\221\337\377<{\311\353=\223g\021\2755\"$>\330\006\267=\030\336I\275\357\270\037\2754\340U=8\241t\274b\233\323\272w\247\205\274\023Q\372==\367\271\274\313\254\240=\255+\252\274\260\304U<\275\223\337<s\275x\275\243\263\306\275\243K\031\276\276_\016\275\350\2435\276\264/I=j\022M\275\\Z\005\276e\226\230\275\212\021\301=rSB\275\336\306\334\274\235f\371\275\'P|<1\334*=\220}\215=\202\262%\274C#?\275\342{\232<\237\213]\2748\325D=\337\025\326\274\314\303\227;5\200\220\274\342\266)\275\nF\312\274\335K}\274\027\3402\276\231\226~= \317\017\275\257\2505\276\301\331\230\275U_}=a:\032\275\021O\323=\347S\370=\365\236\036=\340\242\357=\002\375:=^h\341<\224\342\017\275X\315X\275\214`\246<uy\231=\363\265\021\276{Rn=\317\325w=\005\224\252=\240=\027>\366;g=Ks\023>\343\005\016=\275\205M\276)\014\312=$M\240=\376u\036\276q;\323;\373*m\275\220\3643>\017\272&=\347_\255\275`\322+;\301b\331\275\005\'\314\275\204a%\275\025;-\276\205\351\230<\272\235\233=\262o\034>r\221V\2761\272\215\275i\035\023\276\010Q\234\275\024\327\211<0\243\200=\"Qr\275\326\337\353;k@\014\275I\256\300=\222\363\377\275\236\".>-\327\005\274\201\220.>\365\214A\275\247P\352=QY\312\275\226\360\020\276\273y\032\275\0277h\275\3014\221\274\206\352L>\335\216\\\2740:\375<\270\237Y\275\235\320P\273\336_\233;\014\315\264\275\026\225.\274\305\262\201\275\2270\234<\223\250\324=\237\005y:]]\260\275\331\315\234\275\245+\250\275\337\330>=\307\271\261\275\317\371d\276A\001\275=\367\3619\275t\344\007>\320S\232=\t\320\202=\275\376\334<]\372(\275\224\257\'=\021\013\227=\246\004D\275\306\025\364\2756s7\275\320\014\365\274\217%N\274\262\'\203=\362^S=\002z\036=evn\275\261\355\361=\017\232\227<W\027\n\274\261\330\010\276\010\277\024=Z\340J\274c\314\315<\356\215\'\275S\021\313\274>\227,<\230\353H\275<\360\203=N,\332\274\254\302\321<\232\266\371\274\316\345\334\274v{\253\274\236i\347;\213v#=\256\370\322\274qH\306<\"\234H=\367k\336<S\347\346<\330J@\275\356\240\316;^o\365\274$\227/<$r\225=\210Y-\275\371\300(\274]*a\273\253\2603\275\n\237\255=\234\241\327<\304\2707\275\377\337\203\275\246\343\025<]Z\270=\373Z\302=s\351X=\2220\236\275@_\232\275\275\002\247\275\271\017\267=\244L\326\275\231\367\303=6gS\276\237\002`\275F\300@=\257\226\014\276gh\037=\301>\244<\004\3159>H\250\025<RU\271=\000t\332\275\3575\360<\330\224\244\275\213p\254\275\355\210I\276\033@\256=\\g|\275\210\262\325<\\\244\031\275\\^\033=\3463\014\276T\210V=6\3328\276| \3659>\224\034=\037\216Q>p\3751\275L}#=T\246V\275\243\303c\275\\\325$\275\314\031$=i\024\020\275\272\304X=\377\323\321<\001\361\245;d\354O=\241\200>\275\341\003\212<|\366\201=\335e\003>L\261l=\007\351\033\2748\320C\274\020\036\344\274Ra\240;[~\233\275\335I\344;\375\352\200<z\022c\273\303\374X\272\334\261\201=ty\005>c\217\215=\373\211\025\276\027\016M\274\202\030\246=\361,\210;\376\264\020\275\364\202\024\275\301\350\211\275L\2117\275H%\020\275\254\233\023>\353(\203\274\005\314\023\274\336u\030\275\316\337\001\276\317\242\365<((\007\2756\261\035=u\213\235=\345\3577>E\035\247=\372\002\276\274\t\005\274\274\355y\367\274\277\037\270<`\254\251;\353\335\\\274-\343\212=U\354\372\274\2159\235\274\326$\365<<\253S=\030\330\226=\361\235&>\342\256\010\274l\003\341<|.\013>\222F\027\275\244r\247\274\377W\203\275\235\344\224=9A^=WQ_<\243\305\307\275\303m\201\275@B\365;\2722\273=\312\266\020\275\321\034\211\273|2\234;\277\004\215=\247\265\364=]\270\224\274pl\350<\241\0221<a\317\210\275\264:\241:\222\003\220=\222\346\327\275\353\3740=d\320\261\274\361\262\345\275\335e\366\275\371\362!=\032\237>\275\312\225\363\274\333nC>oR\245=\310/O>\201\023o\275+&\265\273J\372\224<\367\275\340=\266gR=\215\037\232\274]\337\342<\340\316\244\275\376\366\001>b&\257=\270fh\275\377K\026\275\373\200;<5\271\262\275\2404\360=\340\007[=\032\310\034>\274n\333=9^\315=\316\323\270=IZ\'\276\370fA\276]\226\240\275\001\224O\275\300\224\013\276+]\273=v\231\032\276b\353\351=\304\004\357;OvD=\242\250\226<\312\030\'\275\013-I\275\225\006A=\325\227\224\275\007G\001\276\351\275\365<\322A\245=YM\275\275\230\231\223\273\360G\330<\3233\177\275,!\001\276\240T\003=;I\225\275\321K\241=\025\025\027\275o\226\326\274\270\371\373=\312\337\360;\0243d\275\207\337\216\274i\277\337\275e1\260=\n\223I=\226\250\262\274\262\253\345=\236\014\365\275\351\275f\274\343\261,\274{\270\316=\036\272\236\275\025\244\257=4\315\317=\214\360\321\270\306dz=\247\013\215\274K6\025>\321\353\217=7\357\304\273\271,\035=\370\212\225\274\305\202\314\273\342\376\037=\021\300:=\nz\254\274Xs\270\273~\277\365=\304\325\373=\n\315\005;\016A\360<_\325[\274\235\232:\275%\242\023=\361\323.\275@t*>a\266\337\275Z\311q\275\353n8>\361\244\250<\253\227\354=[I\377=\363Z\013=\250\351\316\274\027\024\223<K\250\201\275zql\273\251\261\036\274\340#\327:\232\254\356:r\254R\275Rf\207\272V3U\274K\r\207=\024\326\304;\373\242\250<\030=\350<jm\n=\372-V=\204\2079\275f\0160\275|-\372;\366\325\013\272\357\236\310\274$9A\274By\026<w\313b=\317\377\355\273\034\n\003\273>\263\001\275\315J\017>\273y\001\276\232\023\244\274^B\207<\254\352*\275-\257\034=)I\010\276C\307o=\323\202\017\275@\305\302;\003W\231\275Lk\327\274\2255,<\240T\367<\301\016\264=\267\254\010\276\223Q\323=\033IV=\337\271\213;\330\014\024\274\273\0223\275v\000\034\275\303\346\010>\366\2335>\034|\200\276\200\246\005>\273\255n=\340\221\270\271vpy\275[=\353\275\023\371g:2Sx\275\323\315\210>\202\007t>Z\206M>s3\364\274\243\237\017>\256\244E\274\\\322`\275\300\366\036=\300\tP;\177\030\001\274\034J\320\273\277\257\205\274\021he\275\323\235\234;o&\237\275\223l!\274\224\210\243\273\250\257\213=\354\313\213\275|\005\347<\233vY\274\366\356;=\267\200M>\363\372\027<\023SK\275\202\266#\2758\016!\274z\3218<\307d\022=A\237\235\274\006\356<;G]\373\274\222!2\273Xln\276\226\230\r\275\3617\265<\241h\025>\371\2112\274\217\277\203;;O\364=\010\034\002;\320j\216\274\234HU\273p\317\342:.\372\305;\314Z\334<\215&\305\274\341B\21687D\277\273\021\223\366=\353\320h;.z\353<Y3G\275\240*\266<\3165\277=8p\352;J\331\364\274r\373G\2756\260H\274Km\367:\257\245\251=\242\033\257<j\312\007=\342\210\036\275\177\216\t\274\331\302\372\273\332\025\357\274w\303i=$CD\276XP>\275\205|+>\254\222\326\274\240)\273\275\302\262.\275n\247\226\275@\250\n>J5\326\275@\007g<\277m\357=\313#\345\275\214\025\020=g\372\223\275\3441\246<\300\005\343\275)\363s<\010\355\252=1\336\330\273\361S\305=\316\261\227=\031\223y\274^*\201\275\203\310\260\274P1\327=\023\370\246=\214\323\216\271\312\262T\275\370\201x\276\033P4>\331/\014>Y\034d\275\005\322x\274\355D\322\275\355g\034>d\224\230\275\316`\344<\212d?\274\034\220\206\274x\237\001\276\361S\t>\010\252}\275\300%I=)Q\277=\240VT\275\377\314\340=\276\337\225\275\235T\021=\027\273!>\357\254T>K\305\020>\327/\272\275\000\0269\276\346\347m=\314\317\211\274\365\034\275\275F\014\326\275\240\231\270=\306M\345\275\332\007-\275\002\223\315\2753\374\367=x3\364=\223\353\026\276\341\342\221=\2701\220\274\212a\210\275zee>\004w\365\275\305$\020=\3345\350\273=\245\271=\274\336%\2754\252\003\274*\217\317<e\251\017>\207.\212\274\354\226F\2733\031\002>w\222\010\276b\215\340=4L\220=\244\346\251\274a=t=\0059*>\030$\026\275{fb\274\311\260\226<\223t\326\275!+\001>:J\251<\352\340I\275\307\3513>\2260\346\274V\225\007>P?\215=\235\374\334\275t\321\006\276o)7>\354<\227=\376G\213\275\374\002\354\275x\215\210\274\003\267\307<,#\205=\232S\240=\216lo=#\013\361=\243\277\216;\326^7\276;\2057=XGz\275\033\031\242=3\234\255=tR\017>\360,\352=\323\374\300<n\314\217\275\334T\237\275\200\230a\275%=\245=Z\003B>\237\334\014=\244\033\234\275i\014}=\372\352\252\275\037\tO>J\235\300=\227\343[>)\265\320\273\020\366\032=\327\374\222=S\334\257\273\253\344N<]\354\030;\346\227\335<o\311i<v\325\371\273[E\232\274<\225\223\275\203 \243<S\216\032=\314 1\275A\314\350\273\264\364{\275\255\332\255=]E\223=\26676;\020\230\204\275\2427=\2740\275\360\273\275r\303<\230\"\336=ZN\256\275h\271\257;\241\017\276\273\210<\232\274{\365\3239\3628\320\275\277\r\235<\206\325\217>\330:\221;\332Ns\275\224(\350=1\310\215;\266\325|\274\200\035d<\'S\027\275\021#\242=I9F\275v\305\202\275\300K\310\275\336\371\033>\025\316\316<\177\271\231\275\177.:<\004)\330\274\301i\007\276\274?\203\276=&6=WC2\276\213\223\002\275O\013\023=\275vB\274-T\200\276VK\005\275f\177\205\273\321\216&\275\261\3019>\274\200\246>mW\033>\336\326\267=z,\203=\345\247\n\274;\352\031\275\331\247\037\276\nRo\274\010k\263<\371\232w;\315rb\274BZ\223<\265\234P\274\341\037\333=\020\270\014=\017\236\320;\360B\003=\006\370\201:\265\243^<\271\001\364<\020|\222=\032\373Q\275D\316[\275.\267\220\275\033\224\315\274\365\007X\273\232\016\341<QN\025=LV1=\337\257\347;c\003\310\273 BI\274\361HT\274\260Y\035\276\250\252\010=\261B\327=\025\347\253:\322\232\216<\276\022\304=d\362&\274\034\203\004=\233%\353;\037\347\255\274|E0<R\243r\275\354*\271=:1J=k\224\006=\026\231\347<\262Q\227\274\330\232^;\337{\254=W)\223=<i1=\246\314\237<5\247\241\275\032*\035\275O&\215\273:\2534=>\257e=\266\177g=\314c\343\275\021i\247\274uM\235\275\003DV\274j\271\003\276i\022\226=\020\361\313\275\037\010L<l%\031\273\307\324\363\273{\236\253\273\2433\331<\354vE\273D\021\246\274\360\305o<O\r\364<KVT\275w\305Y<\261\016\221\274~zc=\017_\357<\244\214\344\2745\231\340\274\2218?=cm\215=\037\332q<\032Z*\275\247\314\002\274\324%]\274\335\237\231<\301\266\256\275g\377\303\274$\230\266\274\014\026D<\214\213\263\274\010\225=\274\033\2429<\004\214\263<_\004\300\275\357\204Z>\'I\361<\315\353\305=\006\004C\274\343\212\215\275\361\225\240=Z^\215\276M\267\002=\232\370}\275\254F\007=@Y<\276\242_\276\275\303\372\376<\241\353\360\276\371o\214\276\307\362\005\275\022\376\327\275\220\'\201\275\346N\244>\310S\203=zfu=\332\277\014=\226{\216\275\276\2466\276\331\241,\276Q\241W\274ktJ\272\247\355J\276\\E\314=*\272\364\275n?\312=\301\001\307\275u=?<8\016\374<\343<J\2753\377\254\271\365S\032=\025\267Y;\2570,\275\361\310v<\320\316)=\256\323k\2755!\215<}C\233\274R\337\344<\335\270\203=\274\213\265\274q\304\215\275\177Lp=S\357\276=#\002\r=!-\257\274\273n\270\274\341\001E\274\266\352O<H(\247\2759\226\275\274\000K\310\274+q\217<\027\002\374<\303`\206\273=\236\250<\340O]<\223\323\266\275\363\234\240\275J\376y<d\321\235=\\\371\014\274\232vs=\334d\210;\241K\272\273\373h{<\210\207\374=L\366j\275\2055\324\274\271\001\272\274\320Ct\273\376a\354;#yq\275\t\367\206\275\314\377P=\302U\003>N\351]<\303\212\241\274\035\263\013\275\300uF\274|q\037=/\343\342<\331o\033\275\232\342\364<\"\002\034;[cX\274U\266\034\275\261W\004<\214\"\335;\371;\005\276C\310\247\274_\345!>\276t\214\2743\023\226\2745\327\312\275\266\336\336\274\346\305\002>i\363\321\275\025b\343<\260\220\201<\245v\016\276\033e\211<(R*\276!#l=\276`\235\274\\\275\343<\271\305\210=\322\323\347=\245\213\222=N\247\001\276\355\235\233\273\246\205\035\275\034\242h;\006\370I>\313\346\233\275t\343F=\336:#\275K\270~\276\032\350\200=D\025\004>\340\254@=\005G\027\275\236\247\227=&\335\007\276MO$\275P\311\202=X\202\251\274\315\010\036=d\020W>\014\275\230=\315\227\020>\n\020\330=ES[\276&\202\261<9\372#\275\345\256\233=\204\2713\275\223\206b=2\0222\275\251\021\256\274D>-\276Q\244\365<\246Ov\275UP\026\276pB\325<3\217\026\275\001>\261\275\267\335x\275I\270\217\275\261\0031\276\350v`>\237\207\246=O\201\366=L\357\013\276S0#\272\273\214\360;q\254\207<\362\252\025\274Z4g\273\013\211\250\274\354/M=v\037\236\275\315\t$\274\"\203\227=\215\314\210=+\340\312=\230\272\031\276 \031\311<\372\315z=\'\251\225\275#*\004=`~R=#Y\371<\323\304\331\275\r\364P\274\"=\016\275\201\275-<\233\024\3259b\204\325\272\214\275\213<Dj.\275\022\243\300\274\273\244_\275\217NM=t\347\320=P\234\262\275L\307\252\275\372\360$>\307\343\274=U(\244\274d\234\214\275\277\tg\275\370\334\006>\376\213h\274S\334\256\275\317\260\364<\300\273e<\016@\005\275\364\246T=\225\007\313\275\316I\027<\214\203\341<\026x\374=\2533\030>\344^I=\255\233\210<p\006\333\274\263[\021\275\263\255j\272\250{\021>82\263=\376\310<\275\312O\210\275\273\335H\275\346\346\034\2769\003\t>\262\365\332=\340\205D>\313\372\326\274\022\027\233\275(> >H/\037\275\346\235\t\276\340T\267\275\313z\001>\3513\336=\360\2772\275A\374\035\276\25015\275\2427\307\273\372b\203<\342(\200<s\356\250\2750\"7=\352\r\351<\201\317\222=\240L\326\273\364]\220\2759\232d<\267\315\003\275\306!u\273q\220\377\275\037\205?\276\026\355\207=|\356\353\274\217\365\367\274\335!)\275\247\262\211=;\363\013\274nNE\275\037J\017>-\267\t\276?F\215\274\310\370\207=7\2472\275\275\307\213\274\"F-\276\313k/\276\235\227C\275G\356\364\274\n\350\265\275\272\315\330\275\212!\320=t\365\313<j\270\204<\372\014\330\273\241\334\311</D\211<\345\350q=\322X\350\273\350\351\215=a\177_\275\263\003%\275\344}q\273\325\316(>\"]\254\275N=\326\274R7\317\275.\205\264\275G[*</\017\242\275\317N\256<\323\341\033\274\2014\310\274\216\344\212=\210\\9\275Y/\231\275\271\033\263\275\212\310\332=\2235\273<DZ\216\275\003\374\004<\322\361\214=\333\033\316;\222\356:\275\231\003\272=\032m\013\274\3724y\275\221\n\376:\202\315\353\275\306\037)\275\205_x=\260q*\274\344\314\032\274>;%\274\005\034@\275\375\245\236=\r\017d=,\010\006\275?^\206=\352q&\273\246\320\314\274\343\227\374<\300J\326<\3305\t\276bSK=\260F\221>h\322\352\274\233\264\354\275\202\360\307\275Z\245\306\274nw\300\274\321] \276tF\351\274\214\252!\275\020\202\215=\372\331*=\272n\001>\247\003\301\274j/\333\272d\311\201=\236ro=}\017\230\275u\037\031=-\027v\274\340]\316\274\233\214\303\274q\377K>\240\222~\274|+\'\275c\332y\275+\204\336=Q\024\274\274g\272\271\274\351\365\246:\227\n7\276x\365Y\274$\245\327<\214\332\016\275\202b\025\275Q\230\"=\013`\207\274\'\017\211<?\266\013\275\336\225\034=\330z\215=7\226\271\273x\265\341\274\2062===\342a\274\013\024\376\274w\253!=\3677f=\351\005\342\274\304\2145=\335XL\274J\331\r\275\315|\006\275\276\241\366<\371\303\204\275\347\3459>\310\355A\275)\264\224\273\022yT<a\227\000\275\217\312\211\274,F\271;\235\2511<\267Z\034>\\\317\003\275\026s\252=\212\217\241=\235\006<\275\374\021\001\275Q\262\330<\300\335\'>\007\034J\276\215\245Y>$e\202\276}\242\"\273\270#\225<\230C]\276\350\207\032\276\313\027i=+5\254=\200\027\366\275\251\245\021>\342\002@\275\177\363\245\2741\005\037\275\233?\214\274\007\337\217=\305\357E;H\276;\274\210\310\177\275c\227\324=\343\213\256<\334\304\016>s1I>\252\r \274\204)\201\274P\3077\276_\224\250\275[\2409\274\304yj=\343\210\323;\241\032:=;1\267:\354%`=\325\247\020=:-/=K\201\025\275U\200\230<\310p\010<\320\t6\275\345\244z\275\240X\253=\305\372U>$Q\243=\375Au\275idh\275l\254\323\274\372f\350<\305\034\'=\270\250m<`x\306\274\365k\027\273\001\'\020<d\277\344\274\257\224\234\275km\326;\027xT\275;g\017\276d,\222<`u\036>AT\022\275\314\310e=\3170\205\274\250\310b\275A[a<z\256\246=\027\3426==\242O=\026m^\275\236\371\300\275\327\306\236\273\364\336\034\274\224#s<E\211\206=u5D>\301\237\237=\232\"\303\275E\355\217\275\375\320\376\274\016\273R=\241\257O>F f\273H\203\276=pH\360\274]t\321\2752P\227:\306\332\372<\307\213\321=\312s\000\276N)\270\273X\222\252=xy\000=W\302X<l\262q\275\270\327\333\274S\275L=Z;c\275i\321x;\372\314\274\273\362\340\371\275\313I\034=t\034)\275\"\021\356<\242`=;\022\307\203\274!\347Y={5\211<g\232\361<\363c\213\275J\344S\274\356\223\317\274\231H\021<\017\307\254=\2369\205\275\222\354\277;\2343!\275\350T\201\275N\217*;f\232\202<n\n\331<R\311B=mg\032>\027C\364\275a;\003\276\000>/=\272\341\307;\347\312\001\275\263\241J>\237\237\203=\364x\316<r\3003>\206X/=)HV=\357T\006\275\307\252\252=o\371.<\261\1777\274\221\355b\275F\n\001=\267\001\t=u\023G=\376\016\037=\246\346\235\275\372t\207=\360\035\302\275w\301T\276\313l\352\273\375\204\211\275gj\257\2754\374\t>>\0231\275\032>\230=\313sX\275\223)\365\273\346\"\374<\2561\276=\310\300\262\272\026\343\017\275\346\030\036\274\222a\231\275l\336\222<\016\350\256<\037n\236=fb\277\274`\244U=\245\254\251<\310\207T=\303\017T=\032\251\035\275x\032*=B\224\276\275M\226\306<25\177\273\301\222\222\274\250\335\316\274\350\274Y< \007Z\275\355}\201=hq\032<\323\251(\275\244|\274=\276\216z\275\026`\216\274\2513\224=V\216\010;\221\237\233\275\360=\341=8\025\373;\334a\307;5\034\207\275G\236\'\274Lo\315;\226\'\350\274Y\027Q\273M\031\266=^L\"\275^\365y<\257&-\276kl\006=\350D\275<\035\231\245\275sK\244=\217II=\334\231\200<g\177\342\275\317\220\366\274\252&\341\274\372\313\316;\376\023\365\273W\346\371=\237!L\276\033\300z\275r~)\275\231\272\200\275\036`\203<\261\233\373={\341+\276\200\307\032\275n\330\037\276\n1\235=umC\275\313\002\177<\001\350\034\273\342H\353<\004K\203=\315\224\215<\353\302\021=D\310\354=(\361 =\365>I=>*\344\274\354\355\017\275\245<\312<\335\351\376\272\365V\360\274\206|\206<9vu\273yN\007\275jq\320\274Z\314e\274\037g\217\276eI\215>\203\216n\274%\330\245\274c\3377=H{\003\276x}\217=\3502\212<0\246\202<@\021\245=\306\347\313\275\037\316G\276\231\372\013\276`C\255\275z@\350=.\363\r\276*\237\352\275\005\227\276=\200\321\034\276>\320\317\275\265\025\024>\320\001\221=\376\345\023=3(:\275\005\t9\275\352\204\306<\014\275\350<%\322\267\275M\3171\274\027M\320\275+~\327\272A%\212\275H\216\363\274\000\225\366=|\266\240\275\227\2657=\243Y\000>W\367\226\276\375\352\275\275\2556\325=\207\232\377=0\220\n\275=\205\321\275\316h\222=\215+\240\274\251\351\001\275w\007\361\274\347\350\033>\325\307\215\273\253\323Q=X<\275\275\261\301\322\272\321\252);O\364\t=\372\241\003=\206\"\226\275\r\237(\275\2563`=\316&g>q\031\342\273s\274\251\275`zc\275;\266\302\274XEk\274\007TC>\3518\371=g\026(<,T\257\274\346\014%>\006\\\210>\305\037\322\275\312\261\224=\036\007\342\274u\273\321\275q\364\262=\0311\234<\n\372!\275#\032\252\274t\243\240<\214\316\004>\325\310g<\330WT\273\240\215\354\275,\376V;\237E\307\274]HS=\204\235\t=\020\034\372\274E\375\"\276{.E=\222\313H>\033d\237<\241\322\340\274\005\005\237\275[j\322\274\373: ;,\240R\273\032\030\010>M\214I>\332Hb\275\366\307)=\0306\033>\322\337\250<\355,)\275\260.\225\275\2018\243\274\220pR=g\245\304:\211\311U\274\204\230N\274\023<\020\273\347|\335=5N\304\273\344\304\006\273\023\324y\275-j\200\2750&;=|\010R\274\260\r\213<\371\334z\274\340\267\006\276\177O\262=\no\220=\303\\\341<\203\004Z\275\342\212\367\274Z\223\030\274$1o\271\221[W>6\355\312\275\213PV\271\2351\254\274\237Z\037\276\222$\361=\2668\277\274\350\202d\274y\345\036=\334X\021\274\275\213\201=u)\003\276\223\266\006=\277\200w<<\216\201\274\014M<=\342\355\"<-\347!\275\256\330\177<\235\3412=x!\360=\016\313\025\274\241\270\367\274d\273\351\2756|\006\276 6\203\276\360\236\037\276.\302\263\275(\353\317\275n\235\242=VGt:K\334W= \022\333\276\336\010\263\276N\246\375\270\010\002\254\275\362\346r=\335\372E>A\353w>\317\276 =u\001\233<\362\031\316\274\332P\n>\346\307\366\275\002\022\245\274\255F\26784\001?\273UJ ;\340ys:6l\027;\2623?>P;\334=y E=\026\345\005<\356q\300=+\347\005\272J*}=O+ =l9\242\275\371$\212\275\240g/\275Ap:\275_W\027\274\261%\003<\370g\371\273R\346\030=\213\263\'\271\027\201\256\274}\204\303\274\342\213h=\323\367%\275\235\345\256=\030G\031\275\200p\252<\320<\205=e\220\267\2755\304\201\2745!\277\273$\324\025\273\252\271\315=~g\374\2746\230?\275\334\371\030>Y\373\353=\016g\214=zy\000=\251\276\303=[O\267\273\351\243\020>\364J\277=%Y\222<\260\\\2559$\026\310\274Ef`\275\326\020J\274\2618\355;\317\350\313\272\377\260\323=\367.\026\276\024\000\002\275\364U\224\275Z`\212\274q\027`\275D|U=y\330\251\275\275\316*\275\212ux\275M\226->I\301x\275S\'\271\275\335\277\205\275\3353\222=\032\264\214\275\247\360\373\273\3515\200\274\262&\253\274\244\025\030<m;\310<\302\036p\275FI\224\275\310\221\301\274JE8<\311\350[\273B\003#\271\357\360\245\275\342\335\217\274\034\262\352\274.x\202\273\256\342\225\274\314\347\t\276\227\026\222=|$\022\2755\377\211\274\244\334<\275\244\364\323\272\365\3012\275\367\265K=\222\314\300\275\005b\033\275\370\231\013\274\323\374\312=\307\315\361\274R\002\244=\266\3148=\\:(\275\001\242i=\256\340\334\274\307\303\331=0%\273\275k\220\233\275*\222\303\275\210\313\027>\t\377\001;\225\303\333=qf \276=\024\n>\264k\010=\362#\353\275M;\010=B\037\303=\351\304%\275{\030\330<c\005\264\275\025\317\224=!,\'=\003e\'\276\256\017\225<\327t\r=\316\247w<\352y\014=\314\2622>\271P\274<VL\305\275\240\020\354\272\225\323\031\274XNO=\233\n\n\275\267!?=:\021\362=\251\035\014>\300,\371<X\362g\273\322\027}\275\246o\007;2\3672>@\244\005\274G\320~=A\223\220\275^\013h\275\016N\034\275\253x\327\272Q/\372\274P>\353=\211\201\334=U$\212=N5\031\275\355D=\274n\222\004=\006\332n\275A6Q;\022\240\376\275\366\255\240<\330\276I=\203\0033=8\231[\275\243\322X\274\264\373\264\275\255\212$>\250\331\274\275\355\216&\276hxx=)\346H=W\217\311<\261h%\276\034\235)>\005w4\275<\223\272=\030\271H=\320\215\234\275\211\343\343\274M\016`\275?\317\370\274\377S\267\274\232\205T\275pF\261=\004V\223=S\251\350\275\202\335\343\274\257\241b\274\231\217\326=\246T\263\275g+\252=\352\350\253\274\312\021\003\275\223T\001<Y\373\001<j\307\207\275\010r\024:\274\321-\275\023\202\331<\221>\324<Kb\370<Du\225\2750\312\017>\263\266\346\274e\262\207=.$\331=\352\004\n=Y\236\r=QnF\273\253\000\261=Vt\2439#k\023\275\014\346L\271S\232\215\274p\263\r<\330\032\352\274\2207\275\275`\367\005<k\270k\2733\302\270=\371\327\265:\224\260\206=\315}%=8\2170\275\201\206m<4\214$\2761\264&>\233\017\212<x\0146=E?\257\275\221\216\377<\034)\017\275\035\\\233=7\373\002=W \210\275\336.\366\275!Wh=\222T\\\275A\024w=\365\255B>\254\241]>^\035\001\276\316\212\214>\272\224|\275\274>\237=\371/\347\274.\225\r\275\300\007\231\275\300\367C\274\212\n\237\275.H<=\343ZC>\371\273\234\274q\320\231;\002g\233\275~\026\244\274]+\271;\344\252\267=\366.S>\335\246\355\274{\377%=$\230\010\275\032\310\331\275\031|l\275G>\210;b\322\273\275\211\230\307=\375\351\205\274q\030\033\275\013\327\236\275\014x\327<\323\264\275\272b?\315<;\021\033>pr\250<\205\273\261<\240|\335\274\245\355t\274\021H4<\240\024\316<\310\204\250\275\372?\277<8\260F\274\262\256\375:\210G\240=\273\201\260=\3263\315=\237\242&=\257\225\216\275\034\215\305;\"\350u>\271\227G\275T\276c\275\264\250I\275\216\265,>\226W6\273\005\352\214\275\371P\202\2747\262\236=>]\344\273sa\037=\245B\010\272\326\264?\275\224\3370\275Q\305[=\007\031\373=Z\016\310<1\206\236\275\3207\322\274\300Jt\274*\n\257;_\227\221=\001\341\301\275f\220\311=\n\256\360\274Z\264\325<%:\254=t\360\222<\017\360\237=\035\263y=\204\2526\275\303&\244\275\247\353\006>\201\3475\275n\225\r\275<\303 \275Ug\225=\375c\342=\'\361\276\274\257s~\273\241=\310;a\251\033=\247\264\253<\341v\351<\343\224R<\353\367\313=a\034\200\2747\300?\275\310&\240<Et\213;\026\211\236\274S\231t\274\360\303.\274\373\327T\275\231{\225\275\227Hx=?\314,\275\261\364\365\275\366\300\374\275\007\0021<\264d\220\274\2640\272=\0166\305\274\227\271\026=\001\363)=\333\237\000=F[g<6C\316<\017a\273=\226\2333\275\277p\300=\'}0\276V\251\274<\023\331;>\327Q.=\010SH>4<\346\275\2415\"\275h\354\307=\241\273\246\275\035m\"\275\243\232\341<c\337\022\276u\363<\275N\366\251=\273.\315=\337\275T;\344\010\215\275\245\273\323<V\340\004\275s\227\372\275\267\233\217;\254\330\202\275\332\020\231=\206\r\320<[\036\327=\347\222\224\275b\n+\275\260\202\351\273\373\350\363\274cl\236=\257P4\275\351S\255\2743\263D=\226<\373=+\365\006=\317I\017\275q\302_=b\026\';\376Z\271=\331\366i\274\312\274\355<\277G\005\275\005#\242;\271<\377\274\234\360\202\274\336w=\274C\254\001>\367<#>\301N&=bEV\275*\356\275=U\027:\275G\235\262\274G\020\250=\346\020\305=}:\235<\005\365\016>\344&D<lxC\275\005r\335\275\225>\022\275\016X5=\2357D<g\037%\276:\007\246=\026\263\203\274\302\326\212\275\321\225\002\276\234\027\237=\322\221?\273\365\305\026>\271\304\341<\256c\211;k\205\337\272\326S\235\275/\3134\275_f*\274\t\372\336\274\206\3077=\2066\007=\224w\213\275\026TI\275\207\357e=\177I\215=\316\004\021=ur\217=\030\274\300\273\0058\333\274\216\263\240\275?rT>\331\202\206\275\221A\360\275u\331O<Oi\r>\216\321\247\275\375\231\223<\371V\001\276\271K\222:\271\201a=\324\346\330\275xq\335\275\227n%=\2213/=\202\020J\275;~g<\354\032m\273\374\200\001>\274@\374\271!\\o\275\2155\260:\211D\210\276h\363\020=\004D6=\223K\244\275p\361z>\245~\201\276W\025\216\275&j\253=\003\337.=B\016k=\214\247\">!\361->Pw\004\276\246rN<ZAa=\3151W=\335\316\315=\002\001k=\356\255B\276X\022\002\276\321\370U<\237\267\312=\312\317]=\206\251\356=I\363\n\276\302\365\026>[F\025>U\'\342<iY\006\276h\222\3049\245C\337\275\322\304]<\223\301$>g\333\323=\017-\354\275\205\345r\275YkJ>z@\236=\372!\'\276cu3\276\262\237G>J\024Y\275\203B\243\275\345\273\215=</\013\275Jz(\276\361\031\213<(\224\204\275y\236u\274&\325Z<\2308\375\275l1\316\275\306\t\033=n\231\006\276\301\243\366\275\230\204\205\275\200+k\274-\335\314\272\006\256\007=\031\177\203;\034\177\013>kh.\275\314\236\202\274\002k\272<(\270\014\276S\332c=\364d\210=\275\242\270\275Vos>\270\344R\276+\315\255\275\210\026+>B\367J>\275\360$\276g\2248>E\322\230>Ldf\275\376\376\275\274m\t\232<Yw\240\275\236\361K\275F\324u\276\361n\233\275\234N\014\276\216\203\200\275\375V\263\274\310\261\231\275o\310\333=\003C\204=\224]g=\246\336\324\275\251\214\025\276h\324\230=\027M>;1\345 \275i5\240\2755n;=[\242\340=\010Kp<hv\000\276(\306q>j\233\276<\3537n<\023\007\212\275U^\354<Qhc\274\254\316\237\275\334\343\t=R\342\2009t\276h\274\247V\"\274NP\002;\330\213\030=E\223 \272\361\324g<\266]u\275\022\227\014=\274sq\275w=\020\275\271\222\007\274\237\226y\272\027\316\017=W\3243\275rqt<I\351\302\274\313.\031\275D\347A\274@\204\007\273RB\000\275\326\361\324\274\t\n2;\025\200\240\274\314\343\327\2747}\303\275\265\221\003\275\031\226\321;\334\327\267=\033\224{\275\261\002\016\276\007\363\225=\332\273;=x\3303\272S\245?\274\222\216\310=\322\330\270\275\223\006t;v\216;\275Ve\036\276\357\312\315=B^^;\240\321!=\273\365\270\275\004B\024\276\330^\t\276\336\211\266\275\3420B\276j\222\214\275\301\231.\275\277\r\263=\231\247\231\273\362\344\240\275\253\242D\275\273\221\214\272\203\333\001\275>\363\231>\362\026\337<\203\202\201>r\252\021=\361\026Y=y\\\307\2740c\207\274\317\221\036\275\t\313\325\273\221o\000\274\0010F\274\005\326\210\273\340HI\273\037\346\2237]\235\373;\nRP\273\3059\002=\2226\203\275\253\305\262<\010\227\177\273\301-\321<\246\003r<\246\272\347=*\326(\274v\000p\275\227r;\275\003v\024\274&\245\335\271\013\\\004>\243\005\363=\2548D;\336\272\206\274\014\226S= \367\307<,v\224\2753N\316<\n)\222=\373\332V\275\266.\013=j@\236<\264\205\244\273]od\274h\345.\274\323\227\023\275{w\016<\257w\320\275\002\241m\273\"\337\3149\250\3735=:\362\000\2755t6\274\200\253\"\274>\000U\275%G\264<0\237\025=\222\356v\274\206\236D\275D\"\214\275\34543\274\216JM\272z\214\243<\262\274;=\264-\207\275\034\023\326\274\345\373q<\244\364B=\022\373\222\274H\240\260=\006V#\275f\313\237\273\037\246\260=>\r\367=7<\227\275\"&\004\275_\030\034\276k\342\370=\227\254l=\021\215\263\2753\341D\275qW\"\276\256\0144\2759\217\033\276\013\276\277=\377N\216=\240+}=\307\264\243=\023\025\273\274\353/i\274\332\377\240\275%Y\031\275\364\242\037\275_4\271\275\372\356(>W\2541\275SZ\351=\332\205\377\275\207\372\002\276\317\305\n=u%\316<Q\263\333\275w^\236\275\232\221\201=\306h\340=\267\016\016\276\365\\o:c@\214\275-\025\035=\230<\315\275\227\360\007>8\340E>J\003\371\274z\361\364=-\\l\2750\364\352=v\266\363<\305<\203=\233\263\026\276\320\277\030\276P\013\263\274\231\204\034\276](\204=\010\363\211=\337,\022>hv\301<*\314\030\275\375\346\274=PX\010\276\032\322\235=t\326\006>\250*\265\275\205\247\214=%\307/\275)\r\030>)\201\205=@77>\2729\027>\375Q\002\276\233\325\022\275\241m?\275\311\363~\275\324O\250\275\221\001\240\275$x\246=\211\270\350=\n\372\270\274A\327\236\275\355\252\354=n\337\220=M\362\325\274\346\014?=\254\'t\275\360\177\252=\370]+\274\004\210\026\274\330t\257<U=\262\275\347J\300=\362s`>\303X\257=\346\226\325\275d\0040=\336\016 <@P\237;\005\212\352=\"\257G\275\364I\034\276\303;@>\206D\341\273\356\365\237\271\3700\326\275\323\321\005\276\035(\366=@LV\275T\022\221=:h$>\232\331\351=+\245\274\275\212^$=\334-\341=\235r\301<\245om=\302\200\022=es&=1a\347\275\r[\022>\030!\220\275\221\026p;\"\017\032\276#>\302=`\361\362\273iq\341<2b\337\275Sf\240=\032\367\326\275\376\354+=I\022\\=i\330\002\276\344\013\254\274\000I\277\271\350\005\324=\252U5\275\257E,<\316\351\321\273\355@\360<\302\357\313=}V\021=PM\334\275\256\005\r>+,\235;\345\017\374\275\247\375/>\311Z\332\274\324\3217=\237 \343;\344\310\236=\336\021\361<dA\017\276\244L1\274\265^S\274\217\0251<\262\027\244<\037~#=o\364\202=\201#\345\274\265\375\222\275d\027C\276\3771\261=\212\0064\275\r9\010>-\374(>\035Y<\276\010\tC\276l\204\236\275G\243U=\366\275\250<\340\215\301=\342vE=\276\360\021\274\236\332\313<\355\344\316\275DE\021\275\351\rj;\346\276\023\275\271\307\301\275\212:\375\275pXf=\244/\237=P\010\330=V\304Z>v\317\271\274\022K\245:{\367\215\275\021~\203\275\337H8=\250\027\226\275R/\300<\317\251b\275\315\220\354=T\021\324\274z\010\250=\355\262\267=.>\374;\237l>>\225,\365=]t}\275\376\374\263\275\266\353f\274\031\274a\275\343:\315;z\037\347<4\342\222\275g\207I\275\371k9\275_h\361\275\367\345\255=\274\2379<E\000\350\275\233\254\255;\214\200p=_\271\335<yA7\276\207\301\225\274\317=M\274\334Jc<#k8>\362\020{=\352\357?=\332\227\362\274\211\206\033=s\202\273<\001\232\203;\305Y\364=\335\241\023=\254\373\273=\336\326\371<zi\n>!\247H\275\232h\025\274e\252\327<cXo>\370\237\261<\205]\377<\035\376\205=X{$=\322x\262;\360\000\001\276\271\306\342=V%\356\274\211,%\276\224\014\222=\253h6>e\225G\275D\304k<\300d>\275}\254\n\275\235\216(\275\341\236\230>\365\2148=F\"\274\275\342o3\275\036\022\227\275\306S^=[\036*\274s\032\212=\223</\272c2\233\274\322@\203\2753\000\010\275\242a\234\273\375i9<V\r\337\274\363-\204=\346k\"<O\337!= \236\211\275\227\"\001>_\376\034\275\206\210\252=\"\217q\274\337\016\266\274\036\\\017=8\313;=\213\321#=Vv\013=\367\272\226\275\272\332%\274\250w\237\274\362\177\231<I\022\307\275W\242\335=(\215\334=\336\035\202<Yo\326=\035;\207<\341}\221=x\366\030\275\355\334\017\276\231\010\311<\034Q\320\275\351\245\004\276=p\017\276\236\360.\275\222\220j9*\2052\276\320E\217\275\006_\361\275J].>\201\252\237\275\013\345?\276{%t=m\310P\276$b\205\275\305\320\275=\261\374\344\275\177\207\374=\177\341x>\306y\203=\223\301\330\274_Z\302\274/>\014\276]X\000\276@\036\256=\214\020\204\275\350\025\213\275\377\275\266\275d\023%\275\251\306\t>\306\340\013>\347g\240<\340\234\342\273\300\016\014\275\'\210\026=\020\245\032\275}\212P=u\\L\274\320IP=\303\364\372\274;I\342<\302\016>\275\237\340\235=}U\312\274\221\270\262=VX\023= \032L\275\013\236(\275\265\352\251=\034\266\303=G\210\020=\351\026==\302\246\016\275\347\322\207\274\233!\236<\024\354\241=s\026\375\274[a\323=\373\315\201<T\325\203=\231\306@>#K|=E&\036=\"\006D\274l\274\001\276\271.\223\273j\276\254<\254R9\275Ml\237=\206\356\274\273\252\034\016>i\207\240<\201%b=F\360g8(\326\347<\177\203\024\275\326y]=\222Dv\275\326\334\354\272\241\345\016<a\264\232=\251\370\037>\306\237\236=*\374\201\275\334\036\035\275\366\312\225\274\217\276\037=\213\247\010>w\252\207\2750F\030>d\0021\274Hr\323\274I\303\307<\207\252\035=\204\233U\275|\254%\275\034\354q:\010\334\000\275\2440\020:GL\300\273e\373\205<\273\312\\:\242\231\004\273r\352\035;\320f\203:\202\356\031<\212\247\316\271\036\273\333\273z;U:\205\202?:\274\366\343\273\014\376\216:\3613s<OUH=\377\001\223\267\343\322\331\274\376\021\370\272\231\234\177\271\037\205\002<oxR=\226\212\360\270\232\001%<\350\th7er\241\274hX\213\273\025\300\347\274\231j\220<\262\230\334\275\022\212\3479\305r\346\275\352$\335;\217\241\212<3\273\340:F\350\370<\241\340\200\275\031\330\255<\272\306\367\275;\242m\274\363\230]\274\324\021\243<bW/\273K\005\0049X\234\235\272\344\374x\274\355\036\203=\023\002T\276\204\237\234\271\031\233\202\275\206\305\200\275\237/\204\270\325[\205\275\365>\271=A\232p<\177\272\216\273\233\020\313\272R\236%\275\240\220\t=\324M\235=\375F\241=\244\tO\275t\2178:+y\023\275s\024\005;\327\201\317\273\201\256\261<%yl;8\000\202\274\355\304\265:\0034\226;9\013\033<\206\022\026\272\345I\352\273\362T\264\272i4\243:/\321\026\274\351\303l\2726@\375<\333\274\r=\007\241\2338Mg\022\275\333\324\000\2746\032\224\271y;C<\357\364:=\353%F:&\212\204\273\023\375(8?\277\006\275,@\235\273\262\304\250\275\326\216\215\273\222w\035\275u\272+\275\312P?\274\253{\303<E\337\346\273\0232\r=\336#\224;\2471w\275\346\234\202:CY\031=\367\311\214<qgI;^\240J\274/m?\275\360\373\023\275\016B\203\274\177\013\335;\003\317\354<\2572e=\364\233\212<M\261\212\275D\035~\274z\'f\271\213\310\320<U\362X=\033\337P\274i&\246<{N\016\274\330\027\203\275\304w\335\273\340\026R\275\223\031\325<\351\206^\275t\030l\275\236V%\275/\251Z=\350\305\321\275\310cB<\'\223\200\275\264M\244=\325`\227\274\301K\r=\222\'\013>\2432F>\253\274o\273\305%\301<~[\315\274\350\366<\275\370\023\001>6\244F=e\377#=o\003\014=x(\250=0\366\242:\037u\035\274\344YZ\274;\264\365\274\034\300\014>\253\336\302<&\256\016\274\r\245\356\275jN\030>wa\303\274^n\221\275\224\253\354=`\324N\276\236\236\020=\314\226\261\275\301N\276\275\203\232!\274m\331%\275\037\270F\276\206\223v<\\I\210\275\377\377\212\275\373>5>\006\333I\276\203\252\021=\031\360\031=\022}\024\276\022\033*>\3003\274=\t\223\240=\352\003\302=\231\201b=\363i$\276=\240\250\275\306~+\276\275\337\305<\r\224\244=\007\232\320\275\336[>\275\246*\024\2769\316\244;\347\237$>x\225><\315\335\001\276\210K\223\273H{V<\016\203\260\275\231\266P\275Z\330\003=;=V\275\201\252\335=,0H\275\277\224\310<#U\347=t\027\243>\240T\322\274\215\370\001\275s\221\252=\266%\321\275\023\014k>!\\y=\273\255\027=\301C\255=\300\364\263=%\234\337\274\370\245\000\274\226q\205\274\254\351t\275+T\221=\016\014\310=\253\024\235\274\016\253H=\201\216 >\200\244t\275sm\023\275\374f;\275n\305\307\275\250;x=\"Zc=\347\t\316\275\361\315\027\275\030\370?\275h?\322=\000\310\227;\031\004\230\275\023G&>\325\304\021>Le\376\274{\205\262<\207+\213\275)\007\235\275\030*?>\340\266\307=\210\204\245<4\255m=*\272\377\274~q\374\274#9\240\273\001a\004\274cX\004>\266\312\250\275\206\201\341=`\002*\275\340\300\330\273c\323X>\022o1\272\2334\337\275-\374\213\275\025\242\010\274\"j\310=\374\321\032>N\302\311\275\356\361\"\276\005y\033\275-\315\235=\314\300\222\275LN\320=UK\006\274\"\321\211\275\255Q\207\275\256\354\256=2(\310=\033\225\236\275\361\032A=\335\366\221=\203\243]=\013\326\020=\357\037\366\275\213B\371\274\006Au\275\026\325g;k\302\233\275\321\030\250\273mK\327\273\270\361\367\273\261$\003\276\310\304\251;\307^\263=\223\327\200\275\037\377\033\2769\377\302=\006\252B<kwZ\275\2719\013\276\020\337\350\275P%\317<.\247\331<&\377*\2766\001\n>\206\337\227\274\336\337\277\274\034\214\241=\263T\212\275S\013\031\276D\033\274\273\307\361\306\275\333\226\211\275+\377%=\2406$>\014\314\372=\036l\232=S\340\021>\022\376\266\274\376\315\214=.\224\373\275C\257\007\276\252\221\240\2750\301\203\275\362\r\206\275os\362=\240\323-\276\267\343\373\275\014\"\267=X\010\342\274\353\022\231\275(\203\277\274\013\301}=j\304\304\275\001\t\353=\371&Q\275\352\216\376=9\224\';\375\2677>2\340\203=3k\204=K\336\257=\025\032z\275\366\201\236\275\034dn<\034\313\256=\306\243g\275+G\224=\317\344T\275M\354\356\275?\305\344\274.\006*>\375\262\021\274\2367p=$\245\223\275\224f\200=\367\3557;\332\325\'\275\310\010D>\377\350\354\275r\362\\\273K\253\037>\212U<\275\213\242\327\275\017B\221\2751\231\032\274\234\333\315;_\271\370=\321\244\362\275\354O\362\275\2455A\274=<\273\275\200\275$\276\222\020o\275\357\025\262\275?\244\273\275\306\271\026=\302\344\237<.\025\341\275\325y!\276\241\377\220\275\276\277%\2751>e\273o\240\372=6\034G\275\001\327\003>\266.\263\275<n\375\273\341H\200\274\360\3762>\305\014Q=P\227j\276\263GU\275\374\370\312=N\312\223\274\323|\253\275P\007\010\274\327\334z\275V\332\037>\335\321\243\275C{\003\273l\236\021>!\2445=\031\333\222=<G\036\276\326&\372<\270;\251\275}\245\r=\366\210\207=D8\347\274+\210R=\235a\272\275@\357\320\274\035\305\321\274\014-\214\273y<\024>V\265N\273ym\252=L\3034\275\236A[\276x\0230>k\201\336<Vm1\275\257V\314\275K-\000=\311\177\026\276M\342,\275M\327g<\230\030\'\275\375\270C=\236\213\033>\315 b<\323\326#=7\017\000> \314\266\274\036C\350=\276\250\343\275\202\036->\345\376N<4OV>I<:>&\240\224\274P\336\256\275\225\030\354<\337\221\301;5\240\004\276\326\230\326<\005\335\347\275\206j\354\275\n\240\261\275\332d\306:\244\254 <\036\315\243\275t\241\247=\267\234\001>\324<\025=\366\325\305\274G\206\375=#\005[=%j\215\275\317\315\n=R\374\"\275\213L\273\274\312v\245=6\305\253=R\3015>Kjx>E\226\251=tE,\276\301\357(=\023\231\227;M\204\036>t\235.=\226\355\257\275|+A;K!\210=\223\337C\275f\267\035\275v\341\211\274\320\265w=z\375\351=caW=\026\3408\275\364\264F=\253-y>\337\244\210\274\341\341\327=\245\334\251\275\314\345\365;o\035\375=\013\351\376\275\314\271\224\275\007\337\222<\326\014\256\275\351\374\014>Tn\206=\350f\312\275\360\347\374=-\037\021>\021\"\020\275\336\373\002\276\210\0201\275\321\310d\273A\353U>\204U\356=\003\267\021=\243\267\333<6\266\316\274\236\221]\275tzN\2749\215\222<\232U\322<\3368\320<f\356\351\275g\204p\275\323\314\327\275\370\270\023\274\2042\327=;\307\324=`\322\210=i\364\005\275q\221\013>\267DD>;\324\314\274\321h\022\276\215\246A\274\'!\036=\321\206\002\2758.\017\275\360\001\243<\024\223?\275\264\202\271=\357fn\275\2514\336\275\231\014&=\202\330\264<\320\361\263=\233\276\232\275\364\003\026=\210\334\316=r\322\356:\201\361\246\275\002\262v\275\350<\023>*MA\275w\213\330<\3376I\275\002I\240\275\350(5=\224e\307\273,\231\036\275\240\261\322=\307\301\263;\251O]>\351B\240=\016\331\207\275f\341O<\003\331Q=2x?\275\337\324(>\277$\037>\211\017\230\275d\232\313=\255\327\277=E\225\233\274\031\002\"\275\373*5\275\314l\346\274\026\314\026\275\223\247N\275\2369\367=\302\020\031\276\'\375\203=@\234\005\276\267\361\202=o\'\247\275\241\356k=\034)\237\275\024\266\321\275\271\305\272\274\341b\204;r(z\275\340\331\266\2756\213&>\007#R=\\\004\224<B3W\276\264\207\2659)\013\212<rxY\274\022\0019=3\036\026>\275\017\016\275\247<\207\275\202\013\341=n\232t=C\355\225;\365\361\024=\364\037*<\222\006\251=E\\\272<\270Y\231\275B\235\267=\270]\230=\276\364\343\274\211z3\274\243\306d\275\357\230\276\275j2U>\243\317\200=\322\263\\\275\363\322C\273\324\177\207\274\002X\235=VQa=\210&R>\377o[=\252\223\302=\302\301\362=O\335\263\273i\333\225\275\343/\241\275c\016\326=\2522\375<}^\374\275\344\372\227\275c|\304\275\225\224\221\275\252.&\275\"_\300;\260\203\022\274\315\230\225=\001\237\r>\207J\032\275\362\345\213\274\367\227\330=\212j3\2753\215z\275\302\357\367\274\337E\264<\250\303\024>Mh\366\275\006\245\220\275Y\260+>\341h\030\276\321\031A=\300y\000>\342O\203>\366\223\021\275F\037\240\274\267s\006>?K\005\275\247N\004\275@m\r\274\300<g<&\3644<|\377\251\274\324\0256\275jd\300\273\257\3439=\376a\245=\304>1=q\330\001\27334\232\275(\272\225=\312\377\307=*4\025\274|\367\234\274\275\010\235\274\"\376d\273\245\254H<<,7>h\032\205\276\030g\370<|\235n\274\313\355\274\275\215y\031<\002\334\261\275\366\003\247\274u\317\357<\332\033P\275\366\0304>\332\037{>Q\202\206\274\277#\036=kZB=?\031\230\275\220\331\264=X\002\347\274\346\264&\276\277\302J>\260z\250=h\334\267\272m\273_>\367\233\323\272\226\363\270=\215\373\217\276%\365\"=,62>qO\000\276\t\355\030\271PAs\272\357\273\031=\227\253I\276,xr\275\233g\034\275\342\016\"\275\031\252B><U\270\275\371S\334\274\326\322\021<\355\222\007>l\264\355\274\321\272!=\212m\243\276\337\n1\275ew\260\274\"\241\266\273\326\232\204\276\337RD=yy\000\275k\251\336=\205v\271=\254~\037=_\256(\275\326?\204=pcT=\346U%>\272\212\'<\324)o\275\364\250\270\275\376u\200\275\364v\321\274\317Yf\273\201\3771<\373E\014\275\022\374\335;=\201a<q5\245\274RY\362<\310d \276\006\034\351\275\363\202M=\037\230\003>\003F:\275W\214$=\352B*>\350P\'\275\345\330\033\275\353\016\372\272\036\254\305<\214%\"\275\200R)\276\321\262\306=\325p\252=\254\214\'=\362\336\304=\210<\304=\364\375\267<\307\264\316=\244\022\215=\224\320\331:Y\n\202\275\3708N\275\270n\023\275M\r]\273\2069d<\035\254\332<R\351[<$\306\355\275\262\236\237\274\350\3673<\303\270\366\273\005_\013\276&\342z\275\231\275j=b\r\035\273\374\347\242;\343\325@\272\337;\244\274\255\234_\274\033j\240\272F\237\352<\275|A\274\\*\200\274\266\251\005\275#\"\026>e\344\005=\343\260c;l\316\323\274\3261\222\272\373\3735<\232\373\225\274\014q\215\275\276\177m<\037+3=\3618\275;\233:4<\303\352\361\273a\307\330<b\362\365=\364\035/;{c\000<\247\313\301\275\357s <\355@\017\275\365m\277;@\260\016>\3647\336\275\323\010\014\275\033\355\233>\273\320F\275\272U\336<\2413U\274\233\346\246\275\253\320\352<\372\022\026\2754\250[\275\275\035\r\276\033\005\320\274\263M\024\274\030\"\211\275\330%\346<\363Y\273<\216\215\032\275\302\355\254<v6\036\276\030)\223\275\326\372\274\275^&\213\272`E\r=\314\377\355\275\231\256\205\276\236G\217\273\007\235\307\274bju;E\340\201=\\\"\322=*EO=\222\207H>8=8\274d\225\261<\302\023\237=re\221\274\270nQ\274D\215\001;@!\021>3\033;;\266X\300\274\370\346\006\275\352\357\307=m\203==$\252\335<>\277i=]#!<|\023\371<v\345\357\274I\343\373\275{\342\304<\326\227\262\272\310\3116<\031QB<\310F\007\274U.\260=\342\271\010>\200\340\3029\025#\242;\205\021\372\274\27160>&\220\222\275?\314\243<kT\317=\346\270\3478m\004\345\274\202*\335=\215;\252\274t\342g\274\033\344Z:G\245\367=\032\004#\272f\256\r\2755\275\303\2740\271\367=(\303z=\350N\026=\206\202\243=\324\334X;\206\324P=\276\014\321\274fZ\244\275\202\313}=\231\356\345<\222\304\205<\"H\013<\302\001%\274\323uP<D\343\254<\272\022z\274\346\256\212<\r\330V\275\235\177j=\202\324k\275#\340\234\274\376{w\275\340\347\247\273\217\355\261\274\354\207\020=\017G\343\274\222b\245\274\246\276\253\274\245\213W=S\254\237\274\201\005\226\273\332gp\2751\322\247\273\241BD<\005\232\204\274)\376\\<\375\345\030\274\t\277\331\271\375\261\010\274\325\371\215<\205B\215:\364D\346\274\347\004o;\257\226\276\273\362\303\342\272\361\274\230<\224\3102<\211<\202<\341\244`\274\323\256\267\274\356UW\274+\000\370\274\3722@<t\311\020>@<\251<\236\321\362\275D\033\242=S4\036\275\265\370D<\221B\000\275+\344\230<\275\217\270\275\247\223\003<\362&@\275%\260\244\275\262H\265=\342\204\323<\360\023\025\275\250\311\342\274bE\202\274p\222\327\2757\350\'\276\035rs\275V\013\262=\315\332\002\275P\002 =\224q\264\275\224*\347\275STC=kb\256\2742\377d;*5\320\275\242\361\221\275JD\236\275|}V=\326\343\332;q\225\354\273\272\n\216=\323\346\310=\323:\332\274V<\033\274\310\371\222\274y\024\006>9\304\033\275\023\256#\274\321\202\316\274*B&=\355\260\250<\366Ud\275>&\365=\303#}\274=[\374\274\251!\331;`\010z=\260\207Q\274\253\251\032\275\030%2\2706\235\321\27341\233\272\225\227s<\266\312w=\201#}<\n\331\204\274v`\210=\314C?=\201\340\303\275a\026\242<\001Op\275\233\327\030\275\236%p=\303\342\010\275\210.\365\274\310i\260\274$\343\277\2747}#>\274\313\337\274\242\364j\275F\034\026\275\265a~<\021\260\273\272\370F\014\2742\231\001>G\366\032\274LIA\275\013\037\264<\352\326\001=?\272\033\275\334\356\224\275S\356\240\2735mk\273f74\271\030`\250=\363\266\336=\227&O;\274\t\324\274\177\t\365<^h\213<\301\255\271\274\002G\357<\212\246\240\276\223\233\275<\030|\253\275QW$>#7\223\273\006\300o\274\364Ad\275u\024t=\013\375\215:\244\361(\273yji\275\273C\303\274\203\211\364<\236\260\313\275\200\261\244=O\252&\275\235*\226<\333v\353<\211,T>Q\211\n=\340\245A\275\222,\213=7\233\222\274\305\340\311;\312\335\022\275\3335\335\275\357\177%=\206\021$<\337\261\367\275\213<\342=\225\010\251=\004e\272\274\302[\013\275\260w\365\275\253)\030=\260\323J>\031\005A\274 \244\210;f\245\361\275j\235\020>\321\345\324\275\207\305}=\345y\264\274\006:L>^M\271\274J\355!\275\t\342\205\275\356q\356\275\310\002\321\275P]\273=X\300D=\\\033\306\275\021\231 \276\352\231\272=\222\317\277<\022+[\274\304L\005\273\232\310\331=\303\256X\275\315D\030\275\366\035T\276\366mj=\360\030\234<\0018\201\275Z\2724=\200\243C=\210i\305\275P\253f>3\320\230\274\326\316k\274veG\275/=\250\275\254y\232<\375&\255\274\251\330\256\275\263\365H\275\030\\\251;\314g\300\275%\267,= \024P\275Hk\316\271;l\351=\335\275:\275\362\343\200\275\343\016\014>\345:\214=DG\230\274\235L&;\216\272\202>R\027h>\210\343\022=\204\265\016<5\333*>\245\366F=(\246\235\272\252\253\237\274\313b\020\276\3014Y\274\214\254\243\274\241e\001>G\352\232\274\205\312[<\010x2\275K\313\236\2750y\315=j-\301\275\341F\351\275\032\366\314\274\013B\002=\226\243g\275\006\215\222\275&\264i\275\217@g=\'\222X=\257\367.>\223\'h\274\177\231\332=s3\213=\276\350\\\274\347-G\274\014\343\315=\375\372\251={\334\200\275\037\362\362<\325\274\245=\036\200\025\276@\321\267=AF\230\275$Y-\274\271\270\000<q\273\246\272uv#\275\252\313n=\033N<<:B\177<\000j&\274\273\370\324\273\314\242\205<S\251\215\275\255@k=\0204\001;\205\257\203=\260\366\245=\367}`<\243\256\004\276\342\223\253\274\370\226l==\220`\274\343\3554<\t\302\307\274\302Y\225<\016\345\014<M\231\024>0\227z=\340~*\275\305\317\350;\3568\005\275c\363n=\214\211\021\274p/\200\273-\\\213>\003\232\025\275\342\037\354\275\317x\210>?\234\206\275\225\n\232\274\274\244S\275\014\214L\275\253E\350=o\302\022;\341\232p=\3320!\274ogu=\375\340n=\177\303\221={c\242\275\316n$>Oo\266;\342x5>\276\324:\275\256\363\206<Vx5==\2022=\357\266\035\275\002k\234\275.O\261\275WJY=\240#\263\273\302\007\303\275\320\343(>\326Ns>{\375\035\275\220\227d>\345\327\244\274 \025;\276n9a=\356\266m=\031\262&=\240\0314<\377\3102\275X\037\224=\310Qo\274\314\305\202\275D],\275\356X\235;vk3<\340A\205\275}\316\030=\013\212\377\275 \220\331\273\214\361\270\273\303\312\340\275\224*\031\275\205\273@\274(\223\214<GQ^<\017T\013>\006\377R\276=\241\037\275\325\362B<_[\365\275\0364`\274\314vY<\366k\032\274\216\371\033>r\006;==\212\217\275G\234\236:u\373q=\"\343e\275\341\035\272;rPX=\311\225\261<\\\216t=X\235\022\273\252\n+<\024\273,\275\330\214M>\035\373\227=\017\273\016=?\017r\275\323\352I\275\001\372B\275\216V\241<\373\037\215\274\326\246,\274\005\307[<\031C\006<\230\272{\274\014&\277\275y\214\2669\3370\025=h*\227\275\244F\303<\251\321\223\275\371Z\023\275G\222\251\274\264&C\273\226\316]\274\307L\352<^\2608\274\214\362*:\331r\200\273\247\314h<W\032\326;\260\211\227\273\356_\303<\\\017\025=+\255\033<[\312\231\274\016\224\241\274\336\231\333:\352\276\002=\221a\227\274\341\361\232<\305\266\335:3\262\230\274\226\024\362:\0004M;\\\222\346\273\324G\233=)\201\236;\312\202\330;\345n09$\013\205\275#\360\002=ip\330\272\364\005\212\274\\\177\360=\'\031\326\274\321rE=\251\206\276\275\215\000.\275\330\014B:S\353\326<7\016\260\274s.\013\275\316\257\362\273\361\021\246<\031\204\304=\t\210\207\275\256\304\262\274\334m\247\273/\315\303=\330\310\204<&\217t=\361\243\350\275\234\303\203<\360T5\275Z\006\340\274C2\214=\306\274N\275\313\272\376\272b#\313\274\317\377\210\273\304\322\246\274y\322\177\275|\034\007\275=c\r<\242\257\256<\033k\027\275\016I=\273s\\\340;t\351\363\274\014\225%\274\005!\225\272\337\010\347\272\022]:=P\254\310;Er\031\274)\2558=olH=\226tJ<\"\323G\274\304d\225\273xe\253;W+\242=\027\355=\275\204\302w\274Na(;\221\2555\274\324\016\033<bN\335:\326O\313\273\227\002\205=}O_\274\222F\257;1\337,\271\302M9\275\021\376\244<\2172y<EvO\274\3378D\275N)%<M/\207\274D\375\257\273\227\324;\274\331\361r\273\007uB\273bU\376<\002\007\324:\347\224d\275\302\003#=\324\246\224=wg\204<\354G\2258\374\334\246;\300f%;\201\275\247=\251\3238\274\235|\240;F7\215<\256\243\343\272:*\202<I\322\032;!.\307\273\326\033\347<\365\224Y;\317\201\017=\304\266M90\013\200\273C\r\231\274F\202w<\306-Y\275h\301#=\223a\2009\014\275\014<\264=\277:F\362\333;Mi\034\272\346\234\340;\256n\032\274m\335n\273y\337\270\273\025i\275\274X\227\217\273kN=;\264Dl<\233\277\223\271\010\252\033<\206\363t\274\320\033\241\273\350\010\023\275\321\266\002\273\273\036\220<\334\355\017\271g\217+;\031A\210\273\340\\\220<h\300\224\273\374\032\260\273\320\300\2309V\262q<\014\322I<R<0;a\'\016\274D\210\304<\3339\275<\231*\271<,\r\200=P\256\200<{i\372;f\236\t;\020\350\253=_\324\265\274\257\216\334<[\367\203\275&#\207<\246\025\013\275F\332\010:\367qj<\362\320\272\274\220\341\345;\215\'\373\275\177\202\\=\005\263=\273\006\006E\273\314L\023=c79\275\034\273\374<\220\207\375\275\240\361\330;\006I\370:\307\357&\274\345\232\027>\266\3030\274\252\220\255\274\016V\026\275\016\3740=s\000B;\034\2737=\25385<u\275\331;!\017\321\273\363\336\306;v \240\275\214\200\211\2718\n\027\274b\014\307\274\365Tj\274\272\0003;=\307\035<a\3441\273\327\204_<\"\364\023\274r\026\232\274\363\361=\275\236\372/\274d\300m<V\262\306;\212\234V;\327\354\231\273~\353:\274\225qR\274\371\244\307\273\273{\3249D\254\212\274\205\030\010\275 \311\353<\216\325\252\274\022\010/=\221\013==\312\257G\274\"\022\267\275\253\261\365;\264\376\217\273\004\234\366;\\\010\346;\257\272\333\272\270\210\371\274\270\306\363\274if-;\362e\356;\266\021\023=#\020\361\272\200\315\216<\001\350\236\274\345s\366\274\34173\275\232\330\216;\262\031?=R\355\024<{@\345:\r1J\274]\320\036\275/<\250\273\244\331]\272/.E<\226Z\002=\247\"\211<\320\305w<\002\004\202\274\363\372%\274\247~\2509]\231\324\274g\255\264;e\210\236;S\263\3408\364\207\243\273\304\201\377\267Ft\025<\317\216\300;bV\203\274\256\355\356\274\211\370\352\272\357L_<Fg\301\273\340T<\274_\000\370\273-:-<\274s+<p\303\033\273\320g.\272{\236\226\273*9\253\273J\264\037<\306\342\262\274\347\321\n<\2176\327:\020H\014\273?\266\374;\023\357\371\273\233#\020\275\304\020U<?\364\320=a\227\210<\244\2254=\367\256\223=\017N\375;\311<\267\273\025z\320\274\006x==\342\006#=1|F<\010`)\275\"I7={\031\273<A\3454<Z\376\244\275\362\315e\275\021]\350\275\320\370#<gY]=\306Z$<\370c\014\274\017\277\364\2748\260\273\273\340l\013\275\263$\245<\022\314\232=:\265R:\357\207\270;M\217\320;J\312P\275\025\213\302\275\023\214\365;\253\004\356\274\0028\214\272r,\006\275X\312\263\275GW\204;h\3157; \261\325\273I\210\016\274\210Lu\273U\340E<\345\314!\274\254-\301\274U\277\2339\255z\231\274\030\370\365;7Xf\274e\364\025\274hkP<\324\242%=\226}\005\274\273\006\270\274\322\270\200\274\357o\212\273LVQ<\310\363\341\274[\205\024<\345\303\315:N\266T\272\016\314\266<\353\315\027\275\335\351\267\275\230]\207<\\\000C\274\002\3055\275rR#<V\237\320<p\336\217;\316\016\002;e\026\314\273s\225\025\275\000\270\350\273\233,\000<\203;&\274\212\376\'\275\0040\225\273G\210\344\274\023\231:9T\312\222\274\357\340\025\275\247\354\352;\034\342o<\240\255\005\275,\205\"\275]#\303\274g\027\216\273\215\360\207<D<K=\363\262\242<\001\231+\275\315\343\371\272\301\016\224\274f\376S<\013\2329\275W\322`<1j\330\275\366\261\370<\'f\304\275\037@+>\312\244\200=_[\010=\267\232\021=\256\216\233\273\'\233^\275\310\362\257\274\317\352\225\274\334\355\035\276\014\225\030\275\016\322\307\275\2039\265;\326\034\275<]\013M\275@J\263\2757\'\255;>E\320<\210F2\274/\261\237:\362\325:\274\"\355\253;\236\344b=Xw\001<\356\005\033\275\314K@\275v_e<L\327\236=\\\257\300\274\237\206>\274%\357Y\276\314i\022>\327\333\312\275\250\220\313<C\245\354=\371\375>\275\2461\220<\327\326U>#2\226\274O\263 =MD\340;\302{\330\275\303d\357=V\345f\275\342\345\355=\027\233\006;\376N\233<r->>3\272X\275\301b\004\276,+c=\202\275\032\276\2525\335=\365; \275dAk=R\253)>\204oH=t\305\215\275jA\251=\240\260.>\2365\026>0\221\201\275\342^/\276\361\246`<Qn\323<\343\373\243\275\314P\203=\352j\227<\353`\010=4`\003=\272\320&\275\312t\354\274\200\326M\275\\\250-\276Kg\002\275\255\232\315\274\336\322\365<B\241\341<1~\216\275\367\311\t\276\321Y\360\274m\213\037\274\210{\200\275-\232%<;\245Y\2744\017\016<\365\013\350\272N\340,\276\014q\017\275w\004#\275\222 R\275\250?\207\276`J =\214_\311\274\27362\275^\273\257=J;\022\275O\366\005=\265\317\202=\t\343\227\273L\001\017=\003\013\003=1\024\033\275\311\002\236\275$\030\357\274\177\344\270\275\354Z\236\274US\205\275\0012\247<\362\243C=1v+\275ec\255\275Po#\275CH^<\035\314\033=/^2<}1E\274\3076\330\273\034\331;\274\246\203\315=\322\000X\275\325\357\223\274{t\273=\376}\027\276\214\"\003\274\rs<\274\253\032+=\254\n\022\274\20707<i\240\021=G\215\255<\246\356\001\273`\257\033\274\370\332\277;zM\202<L\204\243<m\r\273<\000.\026\2751\r\234\274\\\3529=\307\000J\274}\341+\2743a\204\273\203\216\351:\336\360_=\013\205\323<\310\360\201<c\366C<E\316\337\273\211S\3079\275bJ<\\\315\000<J\367\2347q\273\262<\372S:\274Z\250G=\345\302r;L\324L<\341B\275\275\203\351\341\274\263\314\023\275L\320\027>\373\312\267< \032\206:\177\225\016\275/\335a=r1+=\277\215\226;\206ye\275m\377!=\334V\352\275F $<\212{\250<\346\224\244=\007\006O=S\207\034>\276\206\237=\222\252\341<d\302\354\275\302\324\352\274\036D\300\274\371W!=]3\277=v\242\360\274D/\0259\257\035x=$k\203\275E\366\352=hN\r=^\270\362\274\034J\242\274S\303\220\273\235E\246<\034\261\240=\254\"}<O|)\273\356\025%\274\323:\000>\027\373\222\274\246?\360<\027\307\273<\376\2520;r@\000\275\030#\007\274O\374e\275\377(A\274W7.=\326]\010\274\365\0165=\314\3030=%R\023=\224\361\361;S\006\370\273\261a\351:\255\210\205\275\363\372\314<\001\005G:7\347\240<\330\016(\275\364K_=\377{+\275\354P\256<\304\255&\273\243\202\"\275\345\241\026<\300\305\035=\340W\253<y\256y<\251m\027\274\213/\252\273\252\361\363\273\036\n\231<<e5=#O\276\274\002\373#\275f\333\001=\3450\037\275\355p\323\274l\330\270\274\226G\013\273\352\224E=\214\236y<\243\361\277<\354\221u;\215s\275\273\r\027O<\351\367\021=\220\237\206<(\247Y\274\363Q\325<z\273\031\275\354,\036<\354Nm<B\357!\275/\370\364;\301@^\274\216\322\246=\344Y\206\274fv\331\274\350\365`\275\261l#\275\241.C=\330qd\272C\3048\273\2017I=6\275\"=\305M!=\032\202\227\274lD\201<-\200\020<y\263\200=\\)Y\275\340*\212\275\236\203\222:\313)\224;\376O\352;VS\340:.V?\275O\327\270\275p\026\361<\356\034\222<\235\360|\274o\256Y\275\216\265\000\275\245s\304=#7\362\273\224~\274\275\004 )\275X\313\334\275#\t!\276\023td\275\032Ic=\365\204b\274\213RI;\374\033\245\274<\343\022=\357k\023\275\232\206\024\274\366\345\330\275X\223\236\274\0054#\274\275`&=x+\014>\n\267\221\275![\025>\034m\224\275\003T\355\274G\210\246=I[J\275\037\014\006\272\367\262\n>\230~K\275\007\366\276\274~\345\376<u\000\316<\007\216\035=\262K\227\274@\270T<\225\253\321<\341\\ \274\272/\220=\211=\353\274\264l\311\274n5l\275I\261\027\275V\2638=|w\203\274|=-\274\"Ls<hq\246=\034<\327<WP\020<\332Z\221;\325\354\214\273{T\275;\340z$\275\210^\267\274T\323\037<\222\206D=\275\373_<\241\352\2019\260}u\275\242H\261\274P\302\366<\344\320:<B\376\221\274\226)h\274\374;m<\301\325A>X\362\276<\3406=<\300\356\344<Du\222=d\300\261=Qv\323\274(R\267\275\3114,\275\260|\241=\256\237\240\272\302\007\005\2769~<<\350\253\362<&\364*=k\223\205\275^N\210=V \212<\226%\"=\264\364A\273c\332\376\274\320\252\202\275\022u\245=\277\177\212<i\374\014;WE\215\275]}\377\274\020J1=\347\246C\275\257:\372\274\316\010\262=x\253_\275\234)\363=x\352\177<\021\213D<@V\303\273%\341m=\367s}\275A\377\201<\021\215\332<\314\003z;\3525\016=\203\206\000=\345n\231<\334}\266=\370\322\036\276\361\365*\275fg\213\273\220\255\365\274q\332U<\273\220\t=1\236\r\275\030\240)=JG\372\272\375\020z\275\356\"w\273\230\242\271\272nB\317\273PC6\275R\222\300\275\226\200=\273\326hf\273\021\007[\273\254N\342\274\335\330\207\272\230\355\246:\340\352\263=\344\207\230=PYT\276\275\266\\\276\007\345><\375}\340\274l\205\205\274\265y\212\275\350\"\002=}\244C\275\375\025\330=(\246P\275\036\243\367\273|\2377<]w\226\275k\303\222<\002,->V\251\340=\017\024C>\006_]<k\272\036=\273\321\201<B\035\254<\274\367[\275>\356\247\275E`\t\275\220\373k;\203\375G<\2568\323=4\0354>\335\324\030\275-\223\230=\233\312\350\275\210{\251\273\200\030(>0-\224\275\321\002T<2\220\343<\020\270v;\357\223L>\177R\t=\273p\n=\347\205\003>\276u\312:\346\245\035\275q\254\345;\367J#=\200\376\332:\352\2075=\326\206\215\275\200\251G\2754\310\265=x`\353\274\224\232\360\273\234\360\023\272|;\000\2727\212E\276$\371\002\276\336ON\273\345th\272S\253\273\275\217\207t\275-\250\351\272\363\360\244:\022\366\265\274\356\304Q\275M1\005=\204E\n\276\027\330\214<f\035\017=\'7\217;Z\366\274=\226\264\323<\351\303$>\255\371\361=\226\255\212<\273\262J\275N\177\230\27415\373\273Dv\313\271\344\302\313<`\340\026<\203\340@;\343\2240=\034@e\275\374e\221\273\310<\331\272\000z|\271\234\\\254\274\311C\004\275Q;\002=\274\265(\274\234\355\t\276Y(\204\275?_%=e\321z=\007\244s\275M\272\355;\2155q\275\303\376[=\026\272\225\274Xh\243\274\2739f;\237\270\':\203\256\304;\025D\276\274~iN\274\036Pc=y\2151=\327f*\275:U4\275\274\216\226<\2312s=\227a\016\2756\350P=\251\376\360<\023\227r\274\027\026\242\274\203\305\210;E\302\373\274S\336\033=\212 \263\275$>\245;\331\275V\273b\\\204\275\357\236>;\017\312\010<666\275\177\000\360\275\343\336e\275\320\367\004\276D\272\335=\353(\333\274\016\014.=\353\303><fe\021>\217\366\240\275H\037\253=_\335|\275\001\303\215=\3029\370\275\361*J\275(\366V=P\023\237=\177\361O>i*\300\274\222+\004>J\364\221=\216\322G\273l_:=P\321\304\274`\224\207<\002\226\255=\216\231\007>\221\331\307\273\367\200\201\275b\275h\273\005B\n\276\006\266\323\275\251\277\213<\357\000\'\275\3255\014<\305J\322\274_n\262=Q\t\222\274\241E\305\274\335\206\220;3\370\306\275\317R\004<E=\031\275\231gC\274\254<D<\n\213{=%M\347\274o\270]\275\365\321\273<pR\303=g\007\343<\320l%\275]d\342\273\\\201G<\004\232h\274\376T\';\217\226\247\274\0006\312\272\3272\021\275\332\037e;\206\211\310\272\221\331\201<\335\266O=P9R=T\\0\275\272\353c\275\221\023\216=\251Pv\275\023\317\325\274#\345\217\274AV\013\275\023i\315:a\324<\275\367f\250;\344\253\362\275\301\254\222\273\'z\207=J\375T=\336Rt\273\026\370\345\274R\006\030=J\267\303=\365I\304\274\250fo\274G>y=\271\227\372<\346s@\274\360\265\022;|\3261\275\013k\321\274\371\225\316\275\367#\273<l\305C<\020\356\343<J\r\313\270^\316\314<\n\237\211\275K|Q<\276<&<H;\177\275GT0=b<d:\035\326F;\340\014\277\270~\251\001:V\365\344;\274q.\273N\344\247\275\026\252R<@s\367<\211\230\200\273\017\242\35393\311J\274c\013\326\274=\252\340\274\264|\374\274\302\355\023<z4\325<\230\367H8\246\372\026\273\357\303\016\274\314mh=\027\366\372<\326X\261\270\250L\326:Z\200\303\274\222\3451\275\214\222\002\275:\271\355\271H\002\276=\354q\023<\212\301w\275\251b\264<\216\260!=P\256\337\274\022p\213\273%H\204\274v2\333\273\211\362\307<\373\307\221\275\010\3427\275#D\335\273$\327\223\273\013\364L>.\224b\275\220!:\276b\220\310;^\325\305\275\353\207\364\274,\375\200<\316?\r\275!\370\260;H\351\314\270\'X(=\230\324\031\276\022\232\201\271\213c\200\274Ip\207=\235\321\">\212\005\305<\365Pd:\212]P=\030\313\222\272\274<2=F\322\035=\007_\326:m\267\3759\177\230H\272\332\265\262<\350m\247<!\360\236\273\274R/\275\351l\030=[:==\'\333\r\274\n\221\013=/d\225\273\'\224|<\276\026\254\274:p#=\2155\355;\\\343I\273\354\267\010;\217B\017\273\314\202)\274\201#\231=\342\032h=q\314\036\272\344[\372:|\373\267\273\264\362r\275 \346\366\274:k\243;\016-9=\320\361\"<Za\213;%4\253=\311{\221:*\035\333\272yE\324\271\250\327h;J\037=<\022^\023\275\246q\002\275]=\202<N\227\007=2\333\215;t\253\363<_\304\r\274!R\n=\370aH\274\350\241u\273\\\r\001\2759\355\313<l\237\004\274\301\355\321\272\002\227:\274\304qD\274h\365\317=\n\037\023<\351_\366:\325\377\373<\3009=\274\322&\304\274\002qN\273\327\021U<\3133(\274\036\237\211\274;\r\220<\022_\256\2749l\203\274\006r\225\274\"s\374<\350\372#\274\232\246O;\r\026\320:+\377$=\377A\244<\327\315\025=6q\204<<\353Y\274\374.\n=\345U6\273\261Wz<\257}?\273\3604\331\274F\205\024:\270;\221\273\210l5\273\324\005\010\275\317\265\013\275~\037\213<\317N\017\274\315\2473\274\251\334k\275\304\377\275\273\024t\373;\351\024S=\261\245>=+B\354\275`\364\024>PG\367\274\261P<<\210\177\t<f\253\277\275\206\312(\275\'\261A=g\031\200=nA\367;<\317\263\275\374\253j\274\244\347\370<2\024\017\27611?=\342\336\3159\262\2329\275O\014\265=\023\253\320<\375\356g=Ym\242\272t\200J\275\314\364\362\275s\374\340\275\360>\246\274\3409\213\274\n\367$>l\232\177\274/\361\366\274\030r\267;\322\340\034<\305\267\363\273}\376;\275\242\240D\275\nd\265\274\303\311=\2749\321\225\274\026\214\212=v$\'\274U\"\206;\302\370y;\224\274\034=\216=I<\027O\221\275\245,\014\275\336_\252\273W@\001=\2740~<\272\322\305<cm\224\273\340*\034\275\004\267\000\274\205\255\225\273\nlc\273\265\344\336;\027\241\214;\210\"y<?\2253\274\264\202\237=c\202\316<M\305<<\376\373\005=]H\312;\215{\t\275\342\376 =\336OH=\325\255\275\274\265\220\257\273\r$~\274\002\255\301=#\370m\274\023W\376\274}b\002;\374;\326<!\243\200<\223r\257<\035\324\270\274v\201\206\274Y\211\257<.I\342<9\374\233<\324\243\312\274Sb\220\274\002\233V\274Ra1\273\3026z\2727\357\337<T\366\310\273\321<\353<\354%\303\274D\031\254:U[\261;\264\241*\274Oe\341<\263YT\275\267\205s\273\'Y\204\275\035\322\313=\330cc\274\357\023\003\2732}p<;\257\303\273dm-\275H\246 \275\026c\362\274\332Cv=z\002.=\272\177\334<\314\214\214;ar\210\273x\031\370;\206D\204\275P\003\336\275\334\263\007:\277=\225=/2\353\273\014\211\324\270\227m\243\274\0243\017>\211~|=h\215*\273\354y=\275|\177\213\273\267c\211=\374\r\006\276\253\370x\274<L\032>)\376\245=j\311d\274\211\003\036=t\347\215<\251\312\r\275\"\375\215=\325\013\330=u3\341<+@\022=\201D3\274f\254\321\274\225?\243=\255,\370\274\230]\274=\257\354Q=<vb\276\354\007\335<s}#\276\265\036\344<\327\013\260=\233\217\220\275\334M\231\274\312\204\210\275\247\3363=\360\234\013=\361P\t;]\205\264\275\t=\333\274y\204s\275IT\024\276\177\351\370\273\231\024\333<\270\357\221\274\211\004/\275\342\350\270=\252\213\350\273!\2059\273\200\264\212<\036\202\316\271\374\236.\275}:\206\275\353!\037\275\337\334\244<*=\200=\027\271\361\274E-b=O\363j<\274[9<\350\032\251\274T\263\261\275\221\371\030\275!\212#=+\222\257\271\320R\221:S\214`\274R\330x=\rRG=e9\251\273\251\251;\275_\220\375\273\375\035\010\276\316\002O\276\006R\230\274O\2260=\266\231x=\235|\306\273\377\013\214\274B\365Y\274Vm\261\274\010&\223<[\303.=\202\005%\275\313\267\024\276\301\204\275\274DM\016=l\346O=\315|}:\273<\023;=F\213<\252\021\206:\256\032G\275\206\t\036\276\206&\365<\377\312\201=\320Ec:\363\252\035\273H\274\315\274\023p\016\2730\364\221=\316Dy=\324S#\275\0053$=)\264\225=\361\356\276\275\351Z\244\274\234Pt=\263\305\024\274\326s\206<<\353?=\257\330\301:T\030}\272@+\253;\321N\333\273f\273Y\274\262\323\026\274V\226\247<\310\002x;\010\213\200;>Q\215\274L\337\270;R\323\301<8\004+<\260Y\306\274\316\375.\275\321\235V\273_$\231<E;\216;\237\335\3679\200\350\340\273:q\245=\000\212K\275\332\003\304\272\013Z,\272\331\247T<\344\376\246\274\307\230|;z\344\276\273\204\316@\275\323\265\n=\202\024\344\274W\303\240=\215\031\336\274\021\335\305:\245\004\270<\231\226I=\016\014B<\276\025\013=\266\302u\274f?\227\274`\271.\275\363\335\010\274\014p\023\275\316M\272\275\351\215\r\275\245\006\213\275\211\303\216=Q\277G:\362ah:j\344=<\257\3150\275Z\2471\273B+\023>\221\334\336=\205h\245:\347\254W\274\223\206\241=\003\335\236=?\014e=o\251\254\274\252}\252=\356\206\271\273\2671\212=\250\n\303=\004\352\325:\252\"\213\273a\017\236;\337O\264;q\335\215\274_a\220\274\304\324\320<\335\210\023<\334p\311\273\r\265\260\273\233\373\234\274\017\210\315<K\024{<\016\242s\275\314_\003\275\214\231\322\271E\204\272<\331\250t<D\274\322\270\257D-\274\261\023\303\274\332\301V\274\372\372$\274\227\365\036\271\257\350\010\275\314\002\017\275\"\001\006\2741a\304\274\255\322\222=\313G\006=(\331~<\033W%=\006\257\362:\364Q\003\274\304\200\237;R\276\211<\247$G\274\265\315y\275\277#\315<\236\032\303<\036u\025\272\202\350\260<\352\245\356<\325\267\023=\272\361\324;\352\253\352\274\246\276\203\275\022\332\215<\355+\323<\004\342\255<)\300\235\271\014\214\224\274\245U\355\274\030\014\017=\346R\355\273\243\333O\272T&\003=$jw<`~\273<\373\361\313\273k\276(=\304t\361\274\252z\213\274\316\257i\275\227*\340\274\322\243\177<\376!\205;\236\026\025=B\017\377<\312t\235;\310W\275=h\023\306\2741p\233;\016;\270\274\223\2049\274\245f\216<\366\021\362<\220\013\202\275\n\365\233=PH\254\274\333\001\203\275T5\205\274\376\273\200<D\335\003\275\254F\217\274\322\334\257\275\273\207\024<\371\2201<\254 \205=k\000\303\274\374\217\233<\3218\252\274/K\223;\355\361\351\275F&W\275k\305\310\273\370\236\315\275\350`\177;\3427I=HCu\2746?\227;\333^\315\275\013_\201<\206\216C>\364L-\275\022\341\357\274\347n\032\276-\207n\275U=\222=\"\222\344=A\347?>?\361\363=\240\351-=_b\325=r\014\263\274\224\251(\275<\347\357=Df\324=\202\0350\274\322@E\274\001Q\372=\nw|\276\316~\265=\177M\025\275\3665\357\275d\273\314\274Y\220\023=\221\330P\274_D\354\274\267\351\220<\227\255\325;\256\314\023>6\234\317<\036\030\316;\242\016\t>\321\'2=\023\300!<\233[\245\274R\235\215=\316@\036<\303v\254=u\377\232\275\351kF<4\355\215<\210$\017\275\353\260\325\274\252\233`<\0133\222\274\246\026\370\275~1Q\276\206\333\373;\360#!<\014\213\224\273eG\021=\314h\331<DX%\273\027\030\200\272\'h\307\275\336$\325\274:\353\261\274&\305\347\274aq\267<WO\357;\024U\253=\013\246\306<x\343M=\210\023\320=\307\216\233=\010\250\020<\031r0\273\272\r\014\274\264\333-<\364\213\315=\246\343\023\275z67=.*1=#\220\237\275GKe\274\004\301K<\243L\334\274\326\300\016<\007\213a\276\301\300j=FI\034<\277\026\366\275\033\206\003\275\272\007C=%\200\037\275\310M\347\274\375\234\324\274\237&\202>\3528\220\275\031\222\031\274\366\271\366<\274E\204\274\356I\241\275T\020\204\271:\376\027=M\002\213>\016\230i\275C\375\000\275 \270\356;:\222\331\274\030\251\310<\242\232b=\276\210\204<\277\307\211\275`)\247\274P\230->7\303\004\275P6&\273\000L@\274n5F\276j&t=^\320\230\273\354\377H<!\336\365=\2751\022\276\267\343\343=!\335\274<y-\344\275\302\252\326\274qW\371\275\371\303,\274\217\"8=\251\246E\275\017\354\323\275?G\346\274\262\366{\274\263\262P\274\210\0176>vXq=\214\202k=\'\001\031=\362\241V:W\346\257=\242(!=\353\225$\275\310\334\264>\260\023.\275\251\034\316\274\373\nJ\275\014a\004=\206!3=\020\255:>o\367\231>\274t\360:\232\002\261=\010^\002\275u\r\227=\347\333\371<\322\0075\275dt~:\3744\200\274 \346\217\274\t/:\275k\352\3519\222\256\002=.)\250\274$\375\357\274;\327\017\275\001\262~=\260\017\034>\202\333\205<\013\357\201\2752p{;\301W\276\275 \206\376;\330%:= \013\333\275\201N\033>\023\024w=\210\\)>I\0220\275\264_\277\273\217\367\207\274i\377\210\276A\212\256\273\302\005%\274\243u\237<L\256\205\275.\2269\276\371\371\020>Q\265\240<\224\231\340;\274P\227\275bR\233=\323\007\325\275Z\362\371\273\\X&=#\340\244\274)\361\327\275?\207\330\274\351[F>\246\0337>!w\030\275:\302\267\275b\373\206\274\004UR=\203\265)<\244\341\337<\334\351\276\274\361\236\242=P\005q\275\324?\362=\254NF\275\204\177\324\2730\033P\273\276ky\275%G\373\275\356%><I_\356\273d\241\260\275\255t6\276\' \033>\231\273\350=\334\271\014\276\327\364\216<t\2537>\262C\350\275;\306y\274]j\302\274\335E\345\274\354\017\035\274\353|\2739?\272\245\272\243 \346<S\202\031\275\030]$=\355\377G\275Ds\201=J|1=\257\352\211=\363E\333\274\334\177\321<\231\217\306\274B\207\325<d\200\003=\210,\355;H\206\336\274\246i\016=:cG\276\3057\210<\350\031;<\230%B=\211B\024\274\2609\347=}\236\235\274U\200\303=(\200\024>p\224\256<\266\246\340\275Z4\303\274\273%\353<\220\r\331\274\372%5\274e\276\303\275\2572A\275\256O\212=&5\001\276\316\'\314\275\364n\342\273\260\235\344=#\352\301\275\202\350\251=t!\222\276U^a=\010K\316=q\226\246\275\350\213&>\236b\340\275\327\177\372=\361\371\272=\321\267\'\276\262\315\266\274JR\256=\216.\204=\261+#\276kW\003\276\326\214\032\276A\001\235;\352\246`<\302\320\224=\367\032\377=w\032\212\274\262l\242\274\265*\353\274a9\033\275\201w\234\274\010\'\"\2742Yp\275\032\374\r\275\246\024\305;c>\225<\374D5\275\265\231\333<\251\242\030\274\202!d\2757\030\330\275\261(\334:\347\266\273=\032\331T=\347&$;\311\342/\275\000\345\370\275tCv< J%<K`\252<=\006\256=\350\2443\276\"\300\335=\201A\325\274I\364e\275F\'\031\275/{\203=\"\245\000=P\321y\274\014\364&\275m\221\t\275\272\300d=0\233\243<\364N\333\274uv\022\275\224$\344<\301i =ACt=\311\245\215=]DE=[\335\3069`\362\253\2750\222P=\216\004\324<\202\322\261=.\267|=!\204\017<\006\367>\275\340\251t\275\' 4\275\0214T\275\26544=\233+\220=\273\271\336\275\341\001\375=\367n\206\275R\337\225;\004V\030<\314\020\021\274 \333\261\273\032\271\223\273\036<\247\274\266\320\312\274\333\036\024=\376\374\221\274VGO<\030k#\275qd\320\273<\226\224;sf\356;d\024\244<;\025\271\274\004}Y\275\020\350\354<\274\203\273<\206o\025\275\234p\251\274\240A\013\275\310\257l\273\352\263\266<OWN=\364\304u\275\203=\353;m[\300\274Q\204\013=\313\317\345\274\305\242g\274\'.3=\321\323\000\275\263\007\004=\020p\231\275z>\325=(\r^;\277\360\031<\035\027\366\274Jt\374=\321\347%\274\004^\035\275\\\"\304\275\206\326\300\275g\233\304=\027\326\031:\305\277\016\276\201\234\215\275c\301%\275\255W\300\275A\375\004\276\215\024\370\273@?\n=\275\201z=~\235\376\274\207\002\037=\324t\205\275uwq=C\376\237\273\315\357\n9,\231S\274\271\032\217\275\246\226)\276\376\274\t= (\020=8\237\306;\216\261\207\274\037\254\260=\341e\303\273\272I\276\273i\331\327\274&r\203\275\275\267\360\274\177S\250<\035\270\027\275\212\353V\274x\"h9\252\345\005\274\305&\324\274\002`\341\274\214hn\275\366\325\205=\240\370b=+\226\244\275\225\346\024\275\373J\203\275\316\212\226\272u\205\261<\0133\335=\344\256\343\275\317x\336;\215!\310\274\222H\361=\342\256S;\266\022\207\275\030_\205=\317y\337<[(\204\274\212w\223=\202A\356<\301y\305\273\256A\240;y\345\321\274\033m\235=,.\245\274f5O\273\206\242\t\275\321\037A\275E\362\327;^\251\367\274\363lZ\275\254u\034\275\352\232\355\274\271\307Y=Y\344\001=s\343\354\275\305\347M\275\352\203\231\275\335%\337\272A\355\024=\"Y\333=M^P\275{k\303\275\017 ?\275\2310\010=\261L@\274\210\2773\275\212!H=\nf\311=\r2\367;\017\316$:6\257\010\27553\262\274#*\000\274\344A\217\274\215\332\t=\302\326\r\275>\333B\272-\234R\274\362\251\252=\230_\2069\272\312\272\274o\001\344<\233\037\020\275\325^\t=G\357\013<\3322C=\326\312\027=[\375.\275\357\016\200=I\001\311\273\257\256\224\273\346R\200=\001\021\230=M\241\231<\274T\326<\"\224\205<f\3506=Q\347\243\274y\244\177;\010\243\004>k\340\001<<\177g=\033q/\276g.\263<\345\024\017<\227\004@=\277cg\2751\324u\275\212\027\262=\1776\024\276m\234\312\275\010\3602=n\274\371<\005\365\006>\253i5\276j\302\313\275B\252\300\272\021!\373\274\307\311\365\274\257\211\230\275I\021\331\275>\033\311\275\270\370\"<\376z.>\273\027\206\273|/\315\274^\374\353=!/\017\276\305b\364\274\213G\236\275\2576\314\273w)4\275%\033\251<20\214<4\016D\275\305\372\262\274\021`+\274\217\201i\274\350zB>\027d\377\273\251\316b\274\337\210O\274Z\207\210<\030{G<\270\334\246<u5\020<\323\216@\275\366\nl;\2621 \275\302\016\276\274\356rw=}?\t\2768v\215=\3204\233\273\261\025a\274\361\334\200=M\324\233<;,\216<*\243\261<\022h\371=.\010\202=\206\026\277\275o\256\213\273b`\003\276\36356=\243\r\216<%\t\'\272\343\365\335\274$s(\274{3\261\274nz3>\271P\317\274[\034\276<\0009W\275\212d\372<\3700\000\272\177.e<\2146\330=\'\033B\275\031TY\275z;#<\355t;=\307\247:\274\372\204\337\275\221\037\242=\300\305U9J[\036\274\275\344\265=<\310\205=H\253\035=L\207g<0\230.=r~E\273\005\000\024\274\367x\355<*\367\n\275$\332\035:\206\343\207\274I\314\304\274\373\025\375<\333\272\335;A{\027<[z}<\317\002g<\276\251\224<\321\317\361\273\356\352\304\275n\214\345\274\3356%<\217O\307<\373\013 \274\024\365~\2750\204\202<\362d;=\016\225\"<\002L\326\273^\201\037\273z\2653\273G=W<\313\347L\275\252)\356\275\245n\031\274W\351\274;D_\266\273\010\230\210\274:D\201\274g\335\254<8\216\226\275^\216\200=\364\302T\275\201\204\035\275\"\303\245<\3054\267\273\263m\251\274\257\311\302=\326\271S=\367J\205=@\t\362<U\206\t\275\241\250\260;\234f\322;\225T\315\275\336\241\003=\227/\226\274u\304w=\215\002/=\371!6=\000\222\031\274\360<\013\275\255\255\177\275\007\254\022\274\271\314)\274\226!\343\274eg<<\305\247c=\330q3\2743\226\321=&\307\007\275\321\340\327\274|\324\242\274\3024\367:\273<\3229\325{Q=pO\322<\376\234\316;\363J\276;\340\006\215<X\331\214<\330p\020=\311f\212\274\334\317\232\275g\2413\275zV\377;\342\372\032\273\350\013\212\274;\226\211\275\334\365\024=:\301\305<\301\354\231<H/\306;y\257^\274\005\343\375\272\364?\202<l\211<\275\255\355\\\274>\235\330\273N\005\300;\354\261\370\274\256\272\272;\320\226E\275\010\365o<\301_\336\273\261\302B\275N\332\367\270\324\004\301:\004\371\002=\265\234-<e\254\025<\306\322\277\274\346\022@<\236\310\233=t#\207\2739X\362\275{\3121\2752\331\205\274\321\2604\275\'\r\257\274g\033\217\275\201\370y<y\330\372<\300\254\250\274\'\235\311\274\274M\250\274\034C\233\272\372 \313<\212\345.\275\3527V:\372\\\007\274\000\234\214<3\366\263\274\331\231\240<\274a\273\274\222\364\217=\340{\317<\n\261\324\272\270R\240\273\206?L\272\316\333\2179P\214\301:\322\311\231:\351\226\014\274l\312\255;\304\210\225\267\027\273\243\273\243\277\321\272\356#\225\273\016\3471;A\377\354;x\226\255\271\374\340\242\273&+\334\273\\\267\275\274\222\351\273:\222\335\266\273\016_\016\273\222\304\344\271w.\343\272\324\212\275\274y4\232<3\005\306\272/\007\023:\177\332\027<\275\332\363\274\341\230\313\273)\r\257:kY\240\275\035X\035\275\312\031{\275t\025\010\274[S\247<\313\230C\273\220\350\304;\203\026\005\276m\r\234\274\276\323\243;\243@\177\274Wb\210;\342i\333\274\232\n\004\273\356\324\035>\024\250N\275\376\234\261\275\263W\210;\332\276\345;\036\277\255<\005)\277\274\317\370\363\273\034\206\213\275! \\\274\004\305^\275\301s\030\275\372j\264\270U\3522<\257FN=\315`r=\260&\344\273G*\315\272\316,\324<QV\312\271O\231\257<\0247\224=fCU9M\270\':\212TY:\016\235\013\274S\363<<>\217\2729\233\016\275::\216\004\274\0201\352\273))\002;\002Pw<f\025\332\2712c\2739\263\310=\274\264\370\252;\346\344><\225\276.\274\257q \273\026g\276\271\252k&\273\212y\006<\245\t\253\273@c\237\272\250`89\333\252\345:\376\034\206\274\346S\371\273\216\003\314\272\340\025\226<\320\221\220;Qa\220\273|\351\203<R\245\0209\024\302j9\325\022\033;\3669\341\274\217\272\022<\025\260O<Z\203\177\273T\265;\273\013(@\274C\005I;\"\237\\<d\217\"8b]\003\274\022V_\273N\306\223\274\317\"\013\274xG\033\273\276(\206\273\252\021\363\271\3330\203\273\232B\255\274)\356\310<\222{\275<|\351V:\260\024*<\304\036;<d\035\367\273\365mk<3N\036\275<\272u;\227\026\210;\304s\257<w*\322\272\202\341I\274\210n \272rn\245:n\010\\\272\207:,\273\000\220\345\2742@\373<^eb<\330v>\274\347eB<\022W2:\354\366$<0\266\004\273\356\000\306\274@\203`\273S>\266\274:\242\3329t\231\243:\225Er\273\t\245\252=\254hm\275\302\253\254:\313\206\223\272\257\362G;\'H,<2\0276\274\264DS\274\305!\360=\323\005K=`\340\202<\177\343\240<ve\242\2749\373\303<\244\210\005=\304\221n=\224\\/\275\334\350y=<c\232\275\270\211\023\275>.\242\274T\324L\274<(\262<\013_\316\274\336\023*\275\237\266\013\276f\277\221\271\264[)=\177\234!\275]$\324<G\320\377:h\022f\275\332\247\004\276\017\274\253\275\356\207\210\266\374\356\371\274$dA\275\3328l\275\200 <\275\275T\265\274\350Bs<\323\'~:\221\234\030=\204\360\270<I\306\337\2724\016a\274\367M\031:\013\236\306\274+\2125;p\303\030\274\325\246`\274O\215\222<\343m\203<=\265\031\274\307\335\036<\203\224%<qk\342;\260s\305\273U*o\275\311=\272\274R\261\355\274\367\rz;L*%:\tj\002\274\242G\232=\024\260d<\332\305\3069\354\2475\272\262\220\036=}\205\301\273l:\016<\277w\224\274l\036\230\274kA\214<\326\237\0379\237 H<\2105\000\273\267V\276\274\3602\252:T\325\206<\272=\211;\022g\200\275\306v\336\274\237\352\312;\370p\327<;\265%<\230\247+<~\202\025<.^\371:KY\360;;\205)\2755\260~\274\244c\241\273\220\236\227;\1776\333:9\005`\274\305\304?;\374\274\356<T\337\200\274SJ\206\273\241.\203=\024\016\310;\212\020\333\273\002\257\177\275\230\216\324\274\253\311:=\327\237\t>Z\237\221\275\223\201P\273\276\177\016\275\177\343a\272\360O%9\251R\326\274uyI\275\314 \227\275\362\334\014<x\034n<U\364\237\275:&\231=\271\244>\271=\002\273<\210)\n8\356M\367\275*\260\326\274.E\212=\2650h=\262\216\335;c\237\001<\306+\004>6\374\257<\232\343\205:\356[\326\273D\314\214=^\'\375=\327`\025\275\254\350\033\275|\305\277=\003\353\212;\236P\267=\332lm\275vV\363\274\303\007\001=\000\367\205=\230\264Q\274\234\246\242\275\346\373\023<\217\352G\275R\017R:A\r\003\276\036\007\317<\376\t\313=K^\010\276\376s\215\274\240\313:\276\200\345\000>\220q\362=\321\271\213=G\247\266\275\r\341\241\275\247?\327=H\211\021=\331\017\034\276\204$\207\273w\270\016=\330\0055\276\005\235\210\276+FZ<]\307N\275\034\036\022= \023\033=E\300\310< \274R\276\26097\273\374\335\210\274\035\367\017<\316\222\265\275m>O\274\353g\210\275:/\257\275\204OU\275U\363\240<\211G*\275\027\377\244=\321U\034<3\343-=\316\t\000\276\301[\006\276u\307\353\274\257\201I\274\330\311\242=\212\324E;\333\267$\274\017w\235<\016\254U=\037V\033\2743\305\320\273\363\344\256<\312\232\014\276\210\326\014\275\2369w\275\256\306\024\2767\370\000>\273k#=\332E\252\275 \252\364\273\340\350(\2742\253\275\2703Lb:\236\274e\275\340\312\"\276x\302!\276\303\0209\275j\232&\272\014\260l=F\237\234<2\310\365<\002B\274\272\240\267\367\275=\253\305\275\353%\356\274\336x\375\274\335v\253=\217\016N<\035T\217\274\231\213\357\274\361\306\034=%\267[\275\212\316\250<^\252\363=\271\007S=\372\262D;\232;\001\276\247\220\002\276\356.E<&6\001>\n\253f\274\327!c\275\244#\362\274\025\332\222\2757\322\263\274\305\313/<\335g]<i\021\373<\021\036\303=K\267\202=\356\276\227\274\361\306\236\275d\263P\274\351:\232=\322\371\306<\322\204)\274\303\345\204\274X\311\210=o\334e\273\337\332\005=\233vf\275\014\234\330\274\317\036?\272#Z\201<\303\265*=\275Eq=n9`\275\2654\207=\000r\022\274\345\330\231=\021\014\360\274\010\326*=\256\207\034\276\336\354$=Y\332\021=v\021\221\275O\034\002\276\"y%\276\014\254\302=\220+\332<\272\314D<\224\035\367=\347\"X<;\336\030>\004\000\\\275\227\303\274<u\314\203\275\033\021\t> \035\317\275Pb\274=L\237\373\275\245\0215>\356\372\260<P\247\240;\225\"\347=\177\310\255\274T8\241=\014\033\007>\211:\337\275\245\027-\2749\312\026\276y\326}\275\233\034\240<\354\214\357<\343\366\003>E\202\\\275M\342\362\274*\354\227\275!\263#\274e\232\302<Qt\232<B\240\344<\016\016\246=q\027==DU\026\275\303=o\276h\212\253\274\355$#>^\300\344\273\370\367}=G\267\244;s\327\366=n\203g\273\330-\343<\331\324\207\275\027A\271=\035\270S\275\327\276\200<G\004\031=\257\340[=\254T$\2769\261\005>\261\033\242\274\027\331\004\2763\275\304=y~\237<f\253\305=\024Lp\275/\324^\275Ve\236\275t\201\024=\"\221\311<O\326\205=\3114\216;\257+\006=q\260\033=h\347\235=)\310\200\275\351\246\246\274\337b\031>T\353\316<`\366\034\2721&\236\275\341\034\000>2m2<\355\232\357<\266ai\275j\315\301\274\024\365\262\275)\277\205=\232\3079<n\375R=v=C\276\023 R=\271\317A<\027\0374\275[\000\232<\200\354\223<\002\365\\\274\232\3262=\314i\222=\360\325\274<1l\023\275\371\032\212\274\333m\033<\302\262\026\275o\200\216\275Sc\273\274\231\305\341\273\000;\340\274dg\0019\360\001\254\275l\025/\274\302S)=\201H&\274>\000B=%v\363;\354\006\260<\243nM;{/s=\036V\006\274j\005\022\275\rJ\311<\211\256\275=\202\237\224=\206\177\031\275\271D\022\275Jm\177=f$\364\275\036\340\027>\260\276\264=\035\365\236=!\250x\274\010\032z<2\313\243= \303\224=\264\246\274\275l\243u=\253\227\373=\206\017\023\276#kb\275\224\025\303=\220\265\022>\"S\326\275\207\245\'\276S\216\251<\324\341\250=CC\252<\377\247\354\274r\263\306\275\303R\257\275WH\247\275z\333\031\276\326\377>=p~9\275\016o\227=\376\033\304=V\314\213\275\301\014\305\273\253\253\317<\333\274T\274\241_\221\275\243\016\316\275WJ\004=*i\313\272\210\205\036=X\251\"\275\217s\014\274\355\347\371\274s\336\220<u2\000\276\347\233u\274\217:$=\345;{\275;2\023<\265\262\206<\n9\333\274t\242\313\275]\307\243\274n\035\236=\331\242\333</\260I<-BV;\366j\023\276\013f\1779\376\037\030\275\000Q\361<I\272\311\275\237|\246:\214\033c=6\221\005\275:7N=4\361\373=j\274\317\275\374\200\315\275\327\263\030=u\233;\274 \256\007<\004l\014\276h\301\':\020\220\264\274\376Y1\274\nI\246\275G\200\360<7\246\032>O\243S\274\366y\322<D\245\330\274\307V\177\275h\004,\275\330\020;==b);\314.\022=\\\236\221<\362~\216\273[\rE\2745n$<a\337\000\274&\247a=w;\277\2755T\031\275\217R\276<\261b\270\275e\306\026<\215Iy:\321\271L=\266\002\205\270\001N\321\273\215\0320\274\262\236\203\273\030!4<\350\252\250\273l\210a\272\271\'\031=*\3015=\331\377\316;\032\310\242\274W?\333\272]u\266\271\336W\023=\224\021\272\273fX8\275\276j^\273\324\227f\274\321\342\275:+\235b9\030\332\202\272\2015\357<\243w\207\274\334+\342\271\242_\351\273Z\214\377<\256{\206\274\276k\017=\343,#\273\023\025\217=\000\\\025\2749\035Q=:\336\276\274\3131<\274e\312\243<\241\2009<m\021\006<w0\232\275\0332\367\274\235W\005\274\246\236\215:C\232d\272\251\340E\274\252\263\371;\004\n\230\274\212\307r\272\262\026\335\275\006\307\311\274\232\244%\275\331+w=\317\204\212<\"l\276<\241\027\266<|A`=\021\350\323;\304\030J\271n\267\331\274Oy4=u\356\316\275\360K[\274q]N\275g\303\251<\261\315@:\356\357\272=A\014\371;7`\245\273c\270\027\274hZ\035\273m!\247<\234\000\037\274\372\001\233\2731\346#=\337\033\025=+\343\004<\274\003\224\274\031oo\273fk\201:\221\304\252<.\333\315\274\342\352H\2759\250\275\274\310`E\273\260\255z;\275\236`9\316\022\020\274\010z\233=y\362D\275\225\341\332\271T\003\027\274\023\247&=5k!\274\215\277\227=\346\377\257\272Gm\245;UV\232<0\t =\262L\271\274\317\242\356\273\335^b\274\261E\307\273\223s\333=\2328\235\272 \244\301\274\203~\325<\211\003v=\330Zr<c\215,\274\214\305\276<\220\021\3169\232\022\030=\027HF\275a\207\337\274\277\036\302\274\326+\255<\010\247\376;27$9v\301\031\274\217\312@=-\221\177\274F\244\321\274\205\222&\275\025\277T=1O\264\275\344q:=A\344\343\274JH\330<\303\346\373\274\314\272\250\275\0179T<\353\307\021\274\0015x\274\326\205\213<i3\332\274\373\364C=xo\254\274\031\201\250\274p\020\232\274Q\004\"=#\240\255\272\364\002\335\275`\036\016\273\311\277\350\2723\312\000\275\225\303\017\276\327*\242\275\353\005<<\025B\345\275\373w\307\272\261\230\341\273S\310\363\273\271K5\276V\004\323\273N\231\246\275[\353\363\274\331j\311\275\345\222\232\275\334\301\204:\010\313\032\275\325\375\247=\353\026\264\275HX\200=Y\t\236=O\223\177\273\023\250\023<\234\254\347\275\346\260\370\275\024\245\320<\207\240\236=\005\277C=\025\267\201=K\324\025=cyC>O\313\"\276\374\363z\276\034\352\374\275*\227=\276\300\027\022\274\tw\270\275\271\235\310=\2205\026=\302\352\337=x\225<\276\254x\032\276\372\273\006<\005\325\007\276\333\200\033>\341\336\206\275g\037Y=i\210,=\027!\241=>\221\016\275\231M\376\275\377\022\343=m\366\014\274\335\267\014\274\342\230\370<\365I\036\275\253\376\"\275\014\323\306\274\212~\003=]\356&\274\272\365Y<\343\237\230\275\234\374\n\276\rvd=\236gp=p\367@=G\013C<\256\274\337\275\275M\226\274\307\246\000\276\333C\206;`>\201;\233/E=\216\334]<4\337:\274\261\305\265\275\371\024\221<\312D\357\273\354\206?\275T\264\350<\311\206#>\205\030\265\274\211*\221=\210\241V>w\200\360\273\021\201\261<\365\2300<\232\242\376\27559p\275E>\033\276K\222\005<+\005\\\273\333hh<\312\362\020\275\227s\035\275\275\230\035=\351t\351=\033\370\304;\374i\031\276j\001\207\275\304\003\257\274\214Q\021\276\036\213\243\273\021Iu\274\241\357l=&V\242\273y\236u\275\357\000\227\275\022\307g<\257\005\023>l\351\356\274\017\221T\275s\316l\275\035qn\274J\204\322\275\376dO\274#d\231<u\263\345\273\376\031\226\274\243?\312<\277U\021<i\2308=<\245\337=%\201\312\274\234\230S\275NK/=\017\225\201<\200B.\275Hf\212\275\th\277<\246\027j=\242Fn=\001D,\275ZgU=\t\004~\274\022\317\316\273\244\004\241\2733!\344<\235\202Q<\201@X=k\200\010\273\351A\331\274\266\315\025=h9\340;\rm0\275\371\373\203\275\002!}<\243(\223=L\374~\272\324\313-<\303\266P\275hy3:{\326X\275\373\322\301\274\271\335\324<GZ\243\275E@\305\275\260\334\246\274.:v\276[\217\246\275\te\314=\333=\207>\201\334\004\276\030\241\222\275]q\002\275\276n\233\275\332Rd\275R>\t\276|+\025\2769\221>>\271\265w\274D\300\263=\032\241U\2736\233K>\224\024\304\273l\277o<\214Z\227<\272\231\236<\0348P\274\234\200\235=8\337S<\rk&\273\005\330\244\274\337\356\247=\331)$\274\235\240N=v[\014>\330\250\034=\267Q\273\275$\274\362<;\365\235\275\024$D\275\3347\243\275\206=\301\272!\322\333=\007\021\256=&\216\264:\250\344H=\227\020p\274\001\236\035\274y\023\237\274\273f\000\276\325F\247<\232\212j=\272\013#\276\360d\243\275\277D\032\275o\232\340<;\212\222\2740\253\210\275\037f\343\274l\230\353=\345\022\204<U\021$<\214>u\274\021\240v\274\350\357\356:\240=\300=\371\210\326=\221\205+;[\255\237\275\016\027\353\275\317?\021\275@af\275\225F\235\2754y\205=\3242\005>\303O+=\256\310\224\275\376\337I=\2676x\274>\217\326;\217\376\023=,rH\275\244!\330=\3530\t=`\350\335\275eF\023\275\t}\370<_(\273=\272\260k\274\270\352\"\275\256)<\274\214k\356<\232\357\004\275\352\336z\272+\211\334;\313j\212<\320\013\222\274\355\000\273\273\264g\222=\204\214I\274\377\005\264<=\222\237<qJ\307\275T\317\t=fR\024=\'\302\305\275f\235\251\275\206r\351\273\034\226\374;Q\236C\275\250\274\257;g\341\360\274#.-\275\025\336\030>o\232s<\372Y\340\274l\357\371\275S\260\344\274\034h\306<\331H\251\274\316\2161<fS7\276\260\311X\276@l\270\275\324\242X\275&O\263\274K\006\016=OM\272=\253Ri<\213\241\211\275\244)\353=\272\201K=\001\244\023\276\364hR\274N`\251<V\360\242\275\224\216\210=v\342\204>S\327\000\275\223\225\030\276\244\033y\276O\364\002:.4\021:e\336\'\276\306\357#\276\212\236/>\"\266\250\274w\272\312\275d\203$=\327\276\254\274\367\264\n=\362\352\360<\275\303\317\275f\360\362\274\272{\251;f\267\031\275\367\315\302\274\234\207\251;\250\\=<&\321\352=L\242\354\274\267\204\030;\001\221\333=\274R\230=kS\007<\335\363\241\275\\\335\347\275\\\374\344<\310\301\364=\205SO\275\372\227\007=K}n:\237\361\033\275\316Dw\275%K\310;1\363B\274\000-\n\275fw\251\275!\006\362;\216O\346\274\034\364\022\276oO\213<a\n\204=\336\356\017\274R\2532=U*\226\275\215}\262\274\025n\214\275\254\346\336\274\340$\301\274\006&\345;\22362=3f\301\274\rj\n\274\265\234\n>\351^\344=\257\252*<b\361\366<fY\313\274\307\226A=#\022\353=\315\006\007\275\241\311e\2740\272G=\267I\022\275s\363\203\275\202\265\033:4\347\327\274\017\233\202\275x\243:\275J-\035=B\000\027\275\216\250\270\275;\336\221<\264\004\020\274\336u\273<\345\276\213\271\220\214\244<\363I\223\275#K&9\230\224\002=\252C\223=\216\361b=\357\005\306\275\006i\206\275A\223\252<\'r6\274b;\200\273\225\207\242\274\025\002\276=\177\005\271\275f\321\356\273U\217\210\275O48=\337\177\034=*8\252\274*\3705=\003\201\234\2749%\233<hb\345<#Rd<\235$\3049\033C\301\274\211\224$=\237\310/=,\177@=\253D5\275pM\017=\002NU:\210\306\\\275E\3221>\303\312\253\275\332\251\032=W=E\275\320\332\223=\310o0\276v\0071>\r\245F\274ZX\022\276u^\003>cLs=\326\337r\275a\357\334\275]b\310\2754\332\006\275]\266!> 0G<9\3160\275\347\264\013;>\260\000\276\227\375\350\274\273g\243=\203\337H\275&\233\230\275\017v\025=\340\341\031=\340I\233;\322.\360\275\315\004\024=c\342k=f\002\035\2766\324k<\020\"\003\276\016g\250\274\223\032\315<C\033[=g\345\025=_\337\301\275\322z3<\344$\237\274\217\022\r=:a\350;\341y}\275\327\021\265=&\240\376;\021\250\371<#\303\016\2767\024\326<\350y\355\272~\230\227\274\207\353l=\211I.\274\201\245\344<\332\005\254<\376\275\255<B\275 \276\020f\213\274\"\0047=\271\255q<\003\350\323<r\013\207\2753\347\306\274J\265a\2733\nZ\275\020\241L\275\312\027+\2766\013\031=\342]\003>\003\212\245=K>I\276#T\227<n\323\354=*\216\022=\210\014j\274XY\"\275E\017\217\274\256\252\205=.\t\346\274\327&\302<\204\004\275\272\"&\202=$J\022\273D\032T=\031\n/\274p!Q<\367\275\021=`\024\016\276\000y\022\275\300F\005>\271\206;<{\243\351\273\343\306\331<\340\334\034\276\324b\017>"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat"
  op: "ConcatV2"
  input: "split"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "\224{!\27523)\275\276\307\223\274W\336\206=\032}g\275`\367#\275WPY\275\005\002\264=n\222*<DX\262<^y6;\032`\302<\343E\307<\245\220\307\274\203\375\327< \010\323\274\307\216w=\010\264\363<\371\333!<\260\366\313<,\0066\275[\033\205\273\231\311\024\2753\223F\274\206\000\352\274m~\030\275\307\361\215=\272\303\017\275;)Q\275\2252\032\275\364a\016=\332\246\200\273\327\0376\275.#\021=\334|c\274\007Q\205\274\3333\327\274_:\231\273#\270\270;h\206J;\220\241\201\274\027\342\021=\233\356\310;b\275\001\274k\323\037<RF\217;uc\364\273zw\215\273jyn<\212\233&=\025\353\220<\336,\206<>\334\231\273\337$=\273\230\321\215\273v\302\n<\032\257\002<\347\324\261\274R\006\277\275\034\367\230\273\317\2623\274\201\311\014\275\005B\330:\031\030\n\274$\006/<9#\203<\241\225\370<2\352V=\202\234h\275\203\364\342\274\010,K\2756\255R=/M\352:y\357\244<\263\"\227<\177O\250=\304,C<\024\270\342\274\214\021 =\202\267\232\274\017\020T=\001 \010=\207\333\215=\030\323\247<\327f\315\273\372\250\304\274Z\017\n\275^\365b\274\301^ =6\014\231=fXL=\266\267-\275C\t\305=$(\230=p\003\314;\311@\206=\004i\302\274}\3644\275d\261\344=q\354\254=\003\231r\275s\323\264\274\247\014M\2756^\261=\247r\220;?\357\371\274\317:\377<\365\201\026=\036@\312;n\237\'\275\337t\277<\363\367\317\274\347&x<\206\036\271=\023\324\010=\004Q\003;\231\211\243\274\266\202\025\275\033\225\006\275\']?\274\354\321\002>\210,{=\030\374%\274\352\020\210\275\346\0246=\007_*=\217J\r=9ro<"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "\301\001\353;\036y\350;\235_\217\274.*\030;\032\t\352\273Vs\235\2741\312\251<\226\256 ;\t\277U=\010\2355\274\204\336\341\274\324\316\225=\334\252$<\215\'\t<}\223\221;\233Y\262<J:\177<\002\370\255\274Y\303j\2738\033b\275!\303\327\274\344\203\273\274\353A\271;\\\023\236\272\210\010\203\274\274\347\317\270i_\265\274\220T\332<\376\017?\274\337\200\302\273L\247\311;b\247\"<\240\026\210\2744\265\236=\371\005\314\275n\216(=[e\300\275S\263\343=F\\\362\274kV\334\274\307+\244=*\371\336\272\276\205\232\275\230\221\316=-\244\210<C\'\367\275l\376\220=N\006&>O=\034\276\200\250\277\273\210/\353\2758\364c\274?\016\222\275`\300\310<d=:=\031_\273\275\201\217\372;n\326\327\275\\\216\241=\215\034\003>d\037\360\275\177\225\031>\361Nt\275\325\314\262\275~\270\034=\261+\006=\032\262\005\275\257:\324;7\346\210<\360\225\276\274\323\035\264<\354\275\032<\"4\203=se\335<\3515\272\274\204\007\263=x\357R\274hW\013=\227n\225<\360j\204\274\227\251\257<\214\005\r\275\250\003F<Xp\272\275\221K=\275*\356\032\275/S\035=\345\370x\272\342\306\331\274\235F7\274\035\014l\274\334A*=\037*\"\275\353\033O=\302\323b=\304&\342<\232\216d=e\374\300<\004<\254\274\234\005\030\274q\266\014<\234p\030\275x\"1\270q;0=[v\024=z\232\321<(\305\206\274aL\265=\255\302)\274\222\234\010=N\305\251<@\245c\272\264\324#;v\244\301\274\334d\313<\370\312\252\275\023\267H\275`+6\274\374\210\260<\232\001\246\272M\212\343\2745\205.<\r\023\316\273\250\254\001=\372\215\026\275\241\372\350<:4\247=\236\032\343<\313\263(\273\235pg\273\376\371\251:M\271\314;9\007[<\370\036\263\273\013\351\245\274\023o\311<\214\336\003\275#\006\017=\037\263\210<\371\254K<;\003\310<\367\224\370\274\024op\272\260\021\243<\242\202\230\274\t\224g<\024\225\302\273\244\377\234\273\034!7<)\340A\273:\211G\275\317\023\257;\0227\201\273\306\2241:Y\334\222;\335\031\303\273ms\';\332\372\367\271i}$=zE\030<?a\227=\n\362c=\366\010s\274\254\320\344=\375\336\017\275}G\342<\227\217\333\275\240\001\221\275bqD;i\336\273=_P\330\275OU\306<\370MX=\344\323\312=U\340\006\275\014[J\274\322\236\240<\364Zf<2\224\t>9\315+\276\277y\r>L\317\375\271\234g\n\275\337\253\022>p*\375\274\000\322\006\276Z\320\331\2757\034\367\275mq\275<t\263\033\275 \035\213=\214j\024\275\256\223\203=\247v\205;\025Sr\274g\023o=7\016Y=uV\272\273\211{\227<\226\370d=\267\032\0329\224\t\252<?F\355=$\323>=.\177y=\003u9\275\363\222\353\271\003\320\371=\202\212\277<\027\262S=&\240\312;\221\000.</\373\377<e\374\301;Y\r\030<\3248\331<s\223\010<6I2=\261\273\206<\253\223\024\273}\315!<\274\206\344\273H\266\202=\364O\303<\233\334P=1\236c;\360\3409\272LaC=\3021\n=.\026a<\377C!<\331\205U=\r\241\217<\340\002\244=NQ\000>\004\336\371<\237\310\340:\263\017C\275\212+\370:\327\225\274=\315W(:\351KC=\366\371T<A\311\211=%l\252<\317\205\366<\225\006{<\225\254\273<6{\254:jm>=\333\231\032=h\024\315<x\243\240:F\271\225=\032\221Q=}A\234<\355\3226\275\354p\232\275\366\004\357<\302g\363\274\251\351\345\275B\225*\275\345~\362\275\027\272P\275\031b\352\275Pv\325=0L\\<\371\321\247:\203l\374\274\240L\233\2736\037\211<\216\334\035=b\247\246\274\210\007r=\315F&\275\307\375N=\021\004f\274\376\2750\274-\3112\273\363\257B=\206\212\253\274\363\024\t<\207\006F<0\312<:[\027\240;:\363\225=\334\271\232<O\3652;_\013\031\276F\221\372\274\t\274l\275zTU\275\207\202\341;\367Y\307<2\'\311\275`\356\001>f\244\200>4\370\254<`.\372=\251\201D=[\341\014>g=d>\371\301 \276\320li\276\251\262\243=\251wu\276O\244.>f\026\r>\273\n\264\275\\\240N\274\026\037\035>\026\347\335=\263fq=\241}\030\276~\332\021\276\264C\032\276\024*\314\275\242\027\325\275\322\013\016\275v\007\323\275\211{\366<\357r\314\275r\030\336<\364\266\234<\r\021-\276\310\230l\275\342U\331\271\320\354\323\275\210+\305\275T\304\366=|\233m<\352\215\'\276Rh\006\276\177\365\244=\277\272\016\275\300D\307\275\263\350%=rY3=O\241\355\275\311\302b97?-\274\360\034\003>h/]\275\260\200,=\370E\037\275r#\211\275\300\202\311:x\303\212\274\337NB\275\025%\257=\034\302\256=:\031\036=\326\357\224=\230g\005\276\314\246.<y\317\202<\037zS\276\306\310 \275Vh\244\273\237+\034\276-D\200\275\212\177\346=\270\276<=*\307\266\275\231\036\005\276\3770\256=\225~W\274\235\250\227\275\203\014\032\275&\234\025=\230l\237\275J\233\324=*\271%\275gm\341=.\255\273\275 \206[=\223\301\231\275@u)\273\3039:\275\274G\220<\007\017\260\274\212\r\025=P\366+\275\007\223\002>\201\006d\275\t\003\267:\224\235\\\274Qho\274X\225X\273\030(\224\274\304\212\271\275rj\235\274\230\310\227=\355\310\262\275\351*\023\275\006\"$>\335|(<v\177\363<\365W\211<\305w\306\275\000\376O\273:\346\206\275\n\005Y;B\276\374\274X\201I\275b\313\273<\213/\275=\003\254S<\017u\262\274\007\003\327\275vs\271\274\334\315\360<\036,\320\274\005\377G\275!\337\223\275\036\272\260\274o\247x>\010\354\242\274:dl\275\t6\027\275\316\315\002\276\\O\223=u\346T\275H%q\275\227#0>|\220\234<\237\304\237<\005\025m>p\030+\276\346\320\337\275/\355c>\343\340]>\241s\317\272U%`;\306R\213\275\214@7>\362\177\362=\260\006\035\275.\337\300\275\253\212\207\276\205\327\007\275\200\214\002\276Y\235m<\245\346\333=&\254\316<\221q\203>\375\240\361=\233\351U=\014\256\301\275q\356v\274\264\370\037<\2322\332\275N\353\326\274\344VC\275\300p\026\276+q3\275\276\030\227\275\342\334\222\275\332\212[\276$\017J\275\003d\243<D4\266\275\261\007\025\275]}\257\276OO\265:\023\373\013\276\301\207\302<c\301\'\276c^\313\2754\032;;f\307\374\275u\n\331\275\230f\262\274]\363\375\275\204\222\326\275\010\221\001\276\350\202\344\275Uc\314\275h\303\233\275I)e\275\210L\254\275\013\035?\275\213i\300\273\2466\207\275\345Z\307\275D\312\273\275bZ\322\275y\274\276<\232\216N\275\030}\262\275\034\374\354\275\010\263Y=\362y\261\274e\366\r\276\333\213g\273\276;O\276p\017\226\274\314M*\276C\036\234\275^*\274\275k\305\314\275\367+\274\275\372\206_=PR\326\275F\227a\275\005\324\021\276\365\311\005\276\020\231r\275\022\301y\275\t\364\260\275iPL\275d\252\256\2750}\237\274s\252\271\273\2258\025;\246\304\360;#\2542\274\nq\036\274]`E\274N \211\274\304\033\241<\304\356\231\274I\325>\274\014\232\014<\332t\315\273;\025\215;\274\355+;\344\030\245<\327\"\007<\362\362\211;\002\301\333\272D\320\334;\366|)\274L\205R\274\243\245\265\272eH\315\272>hT\272\253-=\274zew\273\370\035n\273\357\342\2319\'U0;8\3031\274\221\222Y<@\333\233<T\'\217\275_\325\312\275I\265%\275\340\356e\274}\034\004=N=\344\275\221\324\224\274\335M\027\275\007\236\301\275\371`\224\275\235,q\274\252\225\361\273[\274\226=x\330\315<\225\263\346<\253\311.=T<\005=\230\3746=#\310#\275l\271\371<fw\302\274\007{\261\274\373\303X<P\310\311={\037\365=\302\324\210\275\365\226\373\274m\345\240=?\355f=\354Ri=\345.\262\2740W\324\274nX)\274\rjc;\314?\331\273o\216\316\274\242\372h\274\031l\250;\261\236\326\274\376\244D=\004\260\237\272y\037\037\275\014\257j\274\022\343\234\274\333)\223<\t\023\211;\236\333\005\273\216\321U<\367Mj\273\006St\2735\313\211;\274\331\225\274\004W\311\274\362b\232\274\214\241\035<\266\267T;\356\"\207\274\033\306\256\273F\274`\272\246\236C\274\030\313\2449\031\361v\272\372\301\302<\205\323\363;\007`\202\274\272\262\323;\\[\231\27301&\275\036\325z\274p\335\243\274\263\366\343\274J\320\345;n\241\010\275I\'\253\274xb\001;\360\002n\274\324\316M\273\267\332\246;O\311\n=[\3134<s\374l\273\222\032\'\274G\210@<cP\233\274]\223\320\274\235o\241;\024\251\362\273\0012n\272\030\026\206\274^\016\376\273\334\2100:\035\272\201\272\\2\206<\3642\207\274\217\007~< :\356;\310\016\241\273\\\304D\274\302#7:\"&\236\274\036\261v\273!\020\032\272f\312b\274\203\227\010=#\246\214\274\341[\241\273\263h\221\272\266B\3079KGJ9\032\302\r\274\232\265E\274\273\340O<\214q\257\273\330\246C\274\306\361V\274\005p\276\273\3345D<\264-|;:7\232\274(\311?\274\222w\300\2741>\020\274\026\204\014\274\021\213\300\273\343w\303:\002u_\274\000A`\273j\027\004>]\272\205\274\242\244\"\275`G\272\275\354\035\213\272\362p\024\274K\360\034\276\312\022\370\274{c =\310\340C=a\231?\275\302\'I=>F\277\275\326\263\351=k9V;1\307&=\232\"\203<\223\253\340\275\022\217\261=(t\237=Z\255\302=\333F\225\275\231\215\"\275\245,\244:\n\347\305<\243`}\275l\376\345\275\304\021\373\275\205u\036\275\376\3526=\351\021\360=\256\231\242\275\177\016\017<V\246q\274\266\254\231\274\004I6\2743(\027\275\336\2007\274\315\271\211\273)\264\315\274\'\240a=\347\204G\275.\334G\274\037ic\274E(W\273\300\275\302<\376\014k\274\177\316\202\274\367}}<\254\251m\274\005\230\347\274/\'\320\274\213\tT\274\310\215\010<n3\224;\207\366\003\275\221\346\235\274\211t1\275\254V\214\274`3\220\274\370Di\273R\222\203\273\241\022\034\275\232\0327<\2330y<\014\351\002\275;\300\332\274\303n\212\274\247wi\275\326`\307\274\335\206E\274c\t\'\275\033n|<\217k\267\274\331Z(\273\303\332\n\274V\334\263\272y\033#\274J\272\274\274\241\262\024\275\260~@<\246A\021\275.\235H\275\365\361\001\275Lv\330\274h\211j<\345\367\246;CKC\275\257=\032\275\217/H\275\231\355.\275\177\323t\274g\307\006\273\272oh\274\325t\267\274TU\362\273\\\233\033\273\350\375g:\362\024U:\217\010\214:\231t\333;\3314.\272 \301E8\2652\013<\247qx\275W+\360;sq\0149\334m\231:\032\246\326;\246\274J\275\364\324J\271\230`\272\274\025\223A\274\253\215\225;\322w\341\273\236\036\001\274\362|\214\271\032\351\t;\375\271\243\274\204\311\340\272\017\242\001\274geX<A\001\370:\200\371\r\273\215\335\362\272\302\3257\274\273\016I<@\340\240\274\001\253Q=\013\034\330\273\313\265\361=>\373^\272\372\016\251\275\017\0147=9O\215=\344\224*\275e\240$\275\225\235\353;\375\373\'=\"\030\207\275G\3528<f}\361\275\217a\300\275\375\014\2259n\375\262<V\013\033\274)\267\021;\314e\315=\202\276\351=\377\264\334\274\223\005v\275\250~\246=\242\225\207;\261\277\250=\255\013\200\275\220w\336\275\375\201\365:\240\036\322\275b-z<\\\305\024>\217\002v\274D\233\022<A}\240\2726\347%<\266\216\230<\300/[; \270\245<\203x\227<L8\251\275%\246\027=#\255\342<\260j\000=\267\372\204<\207\220\246\275\007\254\001;\212=v\274\033\230,\274\203zo<\010\211\274\273\304+\237\274n1H:6\362\026<Wd\235\273)Et;\022\227n\274^\227\344<\273m\222<H\327:<;\210\244;S\336/=\345\254\017=\242\361\t\275b\354\365\274gw\233;S\254\317\272\026#\252\273\367ty=\367\240\304;\377\255\222<\2121\234<\200\362.\275/\214\032<\201\361\321\273\177\016\206<^c7;\356\024P\275o^\177;\021\021\234\274\340=:\274\336\224\013\274\347W\027<\035\005\346\273Jl\363:>\260\206\274X\355\202\274\324A\001<$\331\336\273\367\207\226<\234\224~<\034\205\256\272Y\331\272\272\233\237\361:\t^:<\327F\261\274\247\031\313\275d3t;\224\360\225\274%\364g=\242\206\325\274\031j\223\274h\224\266\2759\265m\275 V\215=8\264\034\274?\264;=K\331Z=\341\350\222=|\333\260\2758\030\021=\177\304\316<Q\302\231=\235\344\256<\022ez\275\254\005\372=\"\233\206<\201#\206\275\367\300\226\274|\373\004\275\250\3636\275\313\376\224\272\261C\302;\0143\362\274\314/&=\257\031*\275\202o\213\275^\333\342<\245F>=\240\275\037\276\2770\216\275\270\204\320\275\243\3206=lB\220\275\345}M\276\314/\236<KV7\275.vb\276\314\202h\276\020\025:\276\257\233`>\306\016\271\275\354\030\216=\305-\272\275\252q\005\276\375\252\210\275\272PO\275\273I\205>V}f=\n/\366=\341\n\314\276[\307\255=G\263?=\232\254-<\347VB\276\312\377\334\274\223\017\212:\247\010\201\275n\372\355=\313\0200\272}\351g\276\325\243\271\274\014\261\004\275\356\313\211=5!\347\274)+\022\275\211\021\021\276)\267\035\275\340\001a\274\031\\\205\273 \230`<\335\271\311\275\350KE=\244\311\306\275\005ms=\354\035\201=\327|\256=\255\002\003\274}\365\227\275\377\332\260=p(`\274\261\325\357\275G0J\273\343\231\237\275\\\330d\275J7\246<\324\253\"\274#\340u\275p|K=\005\341\006\276\004\270\215\275b\372F<\342\372e\276r\024y\275\000j\224\274O\366\256=\242`\303\275\210W\211\275\205\200\336\275\341\r\322\275]\210\226\274M0\363<\001 \202<O\2379\275\307\324\t>\346\357;\276&\004\201=3#\031=\"R\321=\013?Y\275\372\321\340\2753$\220=S\244\223\274\336\341k\276\222\212\360<\177\255\004\276\376\312\276\275\177r\371<\307\036\036\275\322\213\014\275\325\330\224=3\r\342\275\366\250\230\275\360\365\262\273\306\0048<\334\')=\375\377\241<\232{\306\273\200\342g<b\260u<\'\273\357<g\347_<\212\334t\275|S\003<\235\261\366<\240\310\202<\267\206U;\301\320X\273\225t\003=\"[\243;I\251?\274\220\332\302<}x\326;\321d\266<\342\na<\374\214\340;\216j\204=\216;\312<\025\010\251<\262\n1=\374W\030=!H\"=\355D\265;_\016\241\274Bj!\274k3\2069\360\250\032=\014\273\303<\003\377U=\0362U\275`\002\306\273\215\262\223\275\252\272\322=\343\214\327=\325\005\221=\226|\002\275\250\031\035>\2276><\364\373\022\276<4\211\275\207\313\275\275\351\333\256\275\302\001\360\275@\372\351\275\315\301E=\306\307e\274#\272\214\274\376e\346<s\035N\275Z\020\002\276\332B\306\273\352\202\021=\213\315\375=}v\r=`6\276=\363\234r\275uh\235\275\346\352\374=\245l\367<\013Ai=P\212\274<{\337\226\273\r\237\n=\303\356\254<{\262\237<[\205n<Xk\236\275\277p\354<\222\366?=\203\312C=\360=T=H*\231\272\356\200$=\255oa\275p?\303\273\004B\274<\254\266\361<S8\300<L\304\346<\224\246\013=lX\245<\252\224,=\031R\365<\347\027H=\260#==>p\334<\357\363\007\274M\313Y\274L\266\200=\370\205\266\273\3655\026=[+\251=\247\256\332<5`\025<9\213y=\310\347\004=cBd=\026y\334<\224O\235\274\\P~=\364\026\243<\333\3318=\013\225\002<\242\211M<\360\256&=f-d<\237\217\327\273n56=\237c\366<\262\307\033=\021`\375<&\337\204=o1\230=\\T =\365]\016=\034\232\200=\010\221u=\275.\017=\032\"\032<\252\342l=,\222\231<j\342Z<\344\036q=tI\010\275>\265\317\272\266\366#<\235%\235\274~\321\240\274K\251\314\274\'y|<\313\327\254<\313\026\371<W!\215<\350\355\001=b\245\323\274)\337j=\245b\316\274vC\356<\313\255\212\2747GH<\0003\025\274L\256\032\274(Z\233\273\352\211\236<\226\212\025\274\333}\377:\336an:>d&\275\014\203\014\275\007\366\232\274G\256h\2741\335\r\274.F\265\271\214\372P<D\231\350=\n\223\"\276\244\231\351<_\352\203<\321D\276=\005\002\305=j\252\333=\373\202\242\275\352\325g>*\230b\275\231([>\266\325\270=iZ\004\276\333\010+>\314m\212;2?\212=T}\247\275\310\347\207\274)s+\276\256\000\001\276\003\254\220=\247B\216=7\373\233\275\251q\026=-U\007>,\354\007\276\261\345\036=M\200\225\274\343\007\007\275\r\'\362=\267\017\017\274\014jE\276g)\272=\360\336\021\275R\303\217\273>*2=\032\207\324\274\311-q\274\355t\274<\333\331\035=\317\361\253=\327\321\270=;\252u=\376\246\212=e\365\006<\251\371R=\357b$\275!e\276=\213T\221\273\"I\335<c>\021<\316}\226;\'y\370\273\033\374h=\247\036\027=j\002\310<\376\"E\272\216\0045\275\357\177L\275\004\274\264<\212&+\274\204\032\'=\035\207\024=\353c_=\207\212\373=\330T\237\275\"\302\266\274\034G>=\021\264\205\275\017]\305\274\377\274\"\273\341a\022\275t\376[=\340\227\027\274l,\217=Pm\237=\207\300?\2750\014t=\211\200\224\275\210\333\276<\313\353\240\273\305\006\014=L\332\213\275\245a\204:-\363\237\274\034\336\016>\353Z\333<\316\352P;\320\035\026\275SY\227\275:\332\225\275\263\273f:\336\237\274\274\277s\277=\323\313.=WZ#=\220+\362;n\r\222<\221\250\020\273\316w#\274\343h7<\360{\232<\243>\266<+\351]\273{\032\024<N\242\n<\367@\232=\235\351\255=\215\033\324<1\357j=\177\314+=!}\261=V\350\005\272h\362\n=S\311b=\322\244\261=E?]\272\247R\213\274\327>\206=9d\342;\324jl<\215\234\024=\332\022\215;\220\236\304<\n\016\007=\357\326\376<\210\210\256\275 \317\314<\254\354@=\006\256\346=Iq\356=6\241w\2749\372\367\275\005c\204\275\367a\243=\226\351\214=\007\216\345\275\035\211\022<\200d}\275\266Qy=\257\360\225\275fL\002\275\324\016\222\275H\351\246=H\343\213\274\227\314\373=%rg\274\"\200/=G<\003\275\367\337\010=\201\373X\275\"\246\325\275\332\347\266<z;B=\315\264\005>3\234\320\2740\320\">\314\217U=>-\t\274]\344\236=\020\225\215\275\364\334\332<h \357<\272\026\035\275\006m\275\273Os\240<\317\266@\275\203\275&<\346~\363\274\"3\000\2754\020O<s\020\273=}4,\275wH3=3Qp=\226\035\203\274\272Y\221\274o\021\204<\306=\250=\315\000\352=r\321\236\272\374\263\352\274\033\033\370=KX\003=h\360\005=\250R\016=\276\2633\273E\346\315<\314\354\361\273\321B\302\271\314\030b\275Rc%\271\036\255\007\275\240hi=\037\253\226<C\316`\275\320\342Z=\240\306\200<l\217\276\274\346\313\211=t*\243<\017\362\224<\211a\211=d\t\276=\337c$\274P\333\325<\241\341\226=5m\272=\276;\221\274A\033H=\024V\320=\355\234\254=\017\347\375;\316&-\275\036\036\006>Z6\026=/\255<=\270\330A=G\215\367<\215\304\344<\200m\207<\225\270|={E+\276\036\234D:\036\263\211\275\303r\221\275\243\245\010\274\363&\217;\306\204+\275\325tW\275\224\n\222\275f.=\275\032\252p=\317\333\241\275~\242Q\275\303\350\235;x\266N\275d\220\004\273n\273<\275UK\201<\255%a\274\"r\256\273\311\'>\275\372\275\235\274\234D\370\274n\023\252\273\366\024\262;y\246\002\275\031_\255\274@b\024\275\307\370F\275\270O\020\275\021\r\032<\350\213K\275\023\273S\275]\000\203\274:\'\263\275J3E\275\273T\220\275\256\370h\272\257\315\251=z\036\013=\020\373\273\275\302\224Y\275\255R\302\274k\027)\2764+\356=\235H\204<\303\177$>\221r\032>\027d\355=.\025N\273k\204\307\275\310n;<8\350\212=\377\345w<<\330\373<\236\340\325;urx=R#\023=\226WI=\021\305\324\274\365z\321<7\177\010>\234y\307\273P\"\307\275;G\200>QW\331\275\262\337\266\275\003\304\331\275[\317\241\2742\325u:\314\236\330\275-D\260\275.\206\246\275}\305\245\275\257\322I=\224\027\026\276m\370\377\275\375l\367\275\253\254\224\275\311A\216<S\247\214\275\205\"}\275\3323a\274\326T\030\275\350K\255\275\207W\210\275\372\206\200\275\241\021\226\274\257T\322\275M\014p\275\025\030\035\275S\010\201\275\2743\221\275u2\'\275\221\261\t\274\265\223\221\275e \206\275\007\256\254\273>\270\305\275\000\'\030\276U\032\312\274\000#h\273rd\025\276\371\361\361\275~`\313\275\324J\341\275g!j\274\245\326\010\276\344\025\322\275\\V\263\275\301\034\013\275\244\217\206;\207\203\242\275\272\033\\\275\215\321\004\275\271\007\216\275\371\035\357\275\236\224\242\275\250\331\327\275\312f#\274+\351\256\275I\373\267\275u\247s\275\3021\237\275\361\241\344\275\356\212G\275k\206a<i\313\316\275\352\231o\275\304\3308\274?\022\202<G\334\330<z\337Q\273\367u\316;v\213\247<\255%\256;\006\003(=\r\331\302<\n\312\210;v>\267;_C\204=\310yM=\211\022\036=O\\\035\275V\007\204\271\017\221\242;\320\"\001=\257,^:\324\307\341\273:\334\003=\0170\021<(&1\275\020\234\025=\225\270\224<,\352\246\272\303P\203<EE\002=\346\003\023=\016mm<cB\234<\251\312\017=\361\300d<\370\3447=~\032[\274O\346\360\275_\276\206\274\332\204\201<\275\006\212\275\021\027\221<\317&\345\274\257\323\272;\377y\316\275\177%\220=\333u\307\275\213\231\314=d\365\377<\323\354x=\0032\211=\320\177\273=\365\365[=\322\232S\275\203u\371<\332x\020<\016*i\274B\320\t\276\360\005|=\335\341\360\274\225\003\355<<5\004\276\367\372\212\275H\355\3739\316@\331\275q?\303\275\t\357\033\2754\334==\242\321)=\2427?\274\263\201-=5\365.=\251\217\207<\222-K=d\266\373<#pL=]\002\305<`\272\323=\n\346\206=\022\375\030=B^\375\274\343\014\"<\245\216\356=\314\010F=\265\262\277<9\"\250;\260|\235=\367\361\223<\302\201)\275\247\364\265=E\315\332<)\366F:\261\t\267;.\364d=\233F[=\375\276\371<\201\014h=\r\021\270=Tp\000=ik\023=\r\325\017=\010\317\213\273\370Q\204=R\265\'=\007\002\025=Z\203\220=\3074\227<\016\302\255<\346d\017=\367\235h=\356\306\203=\352h\026=\315\372X\275\320\236\020<K\203\023=Crt=\350v\016<sGz;\304\201\265=\254\203\010=\3076v\274\3143\245=A\246\325<\324i\332:k\247\265<.\230\'=T\370l=\333/o<f%\331<\024\274#>\003\257\240<0X\'<S\025n\274dm!<Y8(<\036\346\375;\356\273\370\273\311\006\001<\265\000S<\330\004+\275K]\014=\333W`;\034m\005;F\025\214\274\001\312\313\272.\'\311\273\033\0306<+\253\263\274\353Q\023<\325O\014<\2227\323\273\272\337\345\271Z\322\216:\333d\355\274\230\331\241<T\004\211;W;\237:\263\231\332\2737I\267\272\271\217\232\271\341\216^<\032\314\204<\367F:\274.\017\364\274\261X\250=\217\303\017>\250\3215=\323\232{=\322\346o=\275\367\037>\025\026\203\273\216\266A;\027&5>\302v\220=\034\204\341\275\016YC\275\246\301\351=\230\374\230\275E\n\031>;\341[;\312 \001=\226\375\275\275\363Qp=5\357f\275A\277\000>\346vb\275(\345`=\221\205\032\275\263\251\002\276\344G@\275z\272\250\274X\334\224=\313~.\276\317\344\'\276\326\254`<7\027\307<\372\010\344\273\305\244*<6\225\236<\211=\215<W\230\213:\350NJ=#\245I=(n\234\274[>n=\263\250Q=e_\211=\003)\230\273^\345\331;\332\301\033\274\rh\224=\344Y\224\274\311q!=\254\302\246;2\214\331<\237?\266<\323y\232<\033\212O<tkB=\270o\032<%\001\370<\027K\222<W\355\310;E\346\003<y\037?=\003\014/=>xw\273\245\217[=Gxp;T\244z<\213\321\337\272dG\256<\311\306Y<u\361\202<\033\347\256:{\272\312;\244\332\260<\020h\003=\222\217\002=\034~u<\027\350\245<\003\251\365\273z\032\215=\210\213\201\274\022{T=\364\310\005=\234\\\255<\266x\303<\237,/=\352\277K<\r\217_=[\366\262<\356\356\304<@\213d=\3619\323<\305\355\235\273\007]\373<\212\257\004=\320\010\214<w\264a\2754\256\220\274\322*\326<`)\257<\200\366\336\273g\261M\275\236zH=@C\324\274\005<\r=\201e\221\274p\254\307\274}\3379=\2133\320<\rA\304\275R\"\357\274X\025/\275\212\337\245=K\352p\274\212\260|\274\013\204+=\340\347\026\275R\225\341\275\2532Q\275O\252&\274\322H\031\275l\004@\274\234b\277<\334k\023<\211[\t<L[\272\273\337\315E=\225\037\237\274e\234\024\275\266\271\356\275\033ck\275\305\354\301<TM\005>81\335\274\330z!=\336t\224\272I\330\377\275\233^\263<\205\201\210\276\314\023\034\276%b\343=\322\212X<\376h\215\275\317\2379\275\272\372!\2767\322O=/Y\342;m\310\252<H7\003;\322\023\317\275\3577\227\2759\000\323;,\210\274\275\270\004\216=\316;_\276|@z=b\247\002\276M\354\177\275\356\254l>\220)\021=S\340\224\275\337f\020\275\217o\267<q\235\301=P5\n:\252\357_\275\256\226\365=\215\233h\275\366\257\271<\331-S\275z-\030<\314\321)\275\027\341\034=\252\005\364\275\252\177\212\274-\212\246<\270\016\315=;\277\213\274\243\254\224\274V[\217=\233\022o\275\227\n\026\276\267}7\275\357\305y\274\233&>\2751\3208\272\241r\364<\253\314\t=\352=)=\232\347\254<\226I\232=\351h\355;\247\271\234\275\251<\227\275\200\013\002=\304\323\251=\223\330\034\275\262\221Z\275$\352\227=\214\017w\275\310&\005\275pa\336<p\266\361\272\302\270r;\365\270\230=\324\362\322\275m-)\274\234\335\024\275\304\377\337=\2339\304\275\317\361\200\275\245w\307<\326,\226\275l\225%\276\337\004\226\275\222WV\275.4n\275\215\004j<\313\000\373\2736$\034=\247\345\251<\006\031\003\275Y$}=X\255.\275\33572<u\212\270:\206\303\261:\267!\202<\236\205;\272\350d\361\272L\022\335\273\021\023\235\273\307Z\227=\223\206\355;\200^\002<F\002\377\2745\270\230<\016\362\004=\035\236<\273Q\355\023\274 \3668<\0056\'\272\323\357#\274\014\035?<T\311\202\273R*i\274\354m=\273\222S\223\272\3414 ;\360*\331\273\276]\263\273+\221`\273\007\367\376:\224\330\312\273X\252\367\272\027p\374<\215X\254\275a\216\200<\237\n\270\275\037\250\325<\223\006\374=\225\025\211<\017\252\216\274\343\353\371<8\251>=,*E\276~\207\305\275\256A@;{\231\177\275,\214t=\025<\257\274V\251\336\275\330g\230=\266\026H=\361\271\311\275\204\377=>i\020\273\272Tk\312\274\321\363\315\275\2342\256<Q\373\333=\356\\\317<\246\344\264\274\r\007\030\275\250\362\037<@/\210\275\2413\255=\026\375\227\274\347\347\301<\301\325\034\270Qtt\273\023F\333<\264\022\272;\246\004I\273\3354\300<\220d\223\274\217N\267=[\313d;\220l\234<\372\262v<WXG=\254SP=7(\336\273Q}Z=\2349\252<\204\230_;\304q:\274\\\263\307;\200\231\r\274\320\004\222\274\351o*<:b:\274\010K <\004\247\2038N_{\274Yoi\273\352\014g<\016\212\221\274\001\324\202;\312\352@=\250i!=\244\227\027\274\201\'\315\270\314\022\006=\325_\225\273\343\354#\273N\353\245;!\263\220\274\007\222\220=2D\356<x\250\301<\355\270\301\272\370\371\026=`\rq;\237\202\247\273f4\"=5Ch<C\212.<\362X\037\275(*y<6\232\227\273\371\0222\273\316!\343<;\010\316\274\232\257\313\273E\\\315\272\037\266\353\274UW\021<\201\317\226<\241mm<\253j\022=#\267\376<)\211q\275\036\260r\275(\316\324\274\355r5;^\007\336\274\221\307Z\275&x\244\274O.\221\274k\350\251\274s\205\356<\211E9=\204;`<\324\234K\275\375\274{=\242\016\006\273d\345!<\376uL\275\325?\365\273*[\226<\3541\313\274\244\343\035\275^X\247<\354\023G\274z\356z\274z:\332\2747vT<K9\220\275}\341\362\274\001\334\251\273w\262\000\2754\261\275\275\035\333\343\274\212\214\234=\212\267\207<\342S\037>\316\214k</\007\327\275\200\265\030=\0218\001>_\264\330;\0179\027\276\177i\220\274a\215\023;\261\335\020=\324)O\275>\014\344;\257\006\372<\003L\362=\201\304\313\275SW\265=\216Q\n=\261\370\277=\375*\035\274\020\275\251=\273\300\312=N\343R\275P\244\376\275\030\022\314=#\007\000>\r\205\311<\247&\000>6\311\261=I\t0>v\032\036\2753\014\367\275K\303\237\275\256\375\305\274\322\303!\275\r\303\263\275\2654\240\275\\\327j\275\"\252\216\274h\366\201\275\234B\310;\023\253\204\275\360i\221\275\035\307\300\275\207\036\226=\212\311\'\274Y\002,\276\234J\253\275\252a \275A\201\222<\037\020L\275=\376\203\275\0344y<\324\210\354\275\034\035\301\273\002\222@\275t\'\361\273\251\245\241\275\017\2340\275\212Lj\275\264\352<\275>\212\377\275\213\010E\275\244\326\310\275\345\277\202\275>\371\251\274Dt\300\275%\002\233\275K\370\371\275\316\304\364\275\264:\260<d\"\214\2755\344\233\274)\275:\274,\314\023\275<X\300\275f\273\263=\0038e<\314K,\275\230\310\335\275jS\242\273\0318\003=.\201\310\275M\261\266\275\217#|\274=\t\006\276\276\377\211;\025\255\016\275\342\010\226\274\315#\226\275H\234^\275\217c\271\274\374D\212\275\303q(\276\030\010?\274\037(\367=D\346\277=\014\266\252<\357\224\251<h\342I=ZE\212=/y\353=k\271\"=\326\342-\274p4\212\275\366\264M=\\\326\204\274&@1\274\340\205K=r\371/=t\242\216\275R\367o\274\333\261\202;\344\352\243<};\256=h\377<=\215Z\022\275\360\346\254=\227fF=\005N\377<G6\212=K\224\225=\002\t\315=\215\247^\274:\3503<\001f\016=l\246\236<h\325\207\275\206\036\017\275h\310\363\273[-\315<]2\032=sg\002=\212\345\313\275(\001\233<Y\004\006\276YX.=dB\242\275\262\247\215\274\347\030\210\275+\"\366\274\211\215\331<\'\220\226<#2\253\275\237\n\240=\000\254\341\274\221\010\357<\222\324#\275\333\324\274\275\262&\221\274Gs\204=Mj\227=\217\232\003=2\346#<\'!\031==\002\030>\205\020v=\234\2462\275\253U\336<@Eq=8\345\377=\030BV=\177\360G<\313\261]=45\276=\036\027\353=\013\245S=T\232\211\275G\275*\276Gq\024<\272\020\234=G\005\014<\314L\352<\256\3402=\277\254\007\275\345^\232\273\203\017\257<\207\334\272<(\260W==\317x=$\013}\275\315\312\214=j\n\265=\351\250\215=%\254\253=\023\026\232=\261A\333=\225u\231;\320\371\t\274\r\335\215=\035d\005\275\314\375\204=\347k\021>\225\376;=\010\004\303<Q\250\252=\365\307\335=\236\2774=z\241E=\004\247};\367BR\275~h\277=\373S$<5\334\303\274~Q\357<X\360,=\032\007\\;\365)\262;B\261i=\244,R=\200\217\341=\204\233\306=\201\017*<\024\246\253=\220\276\234=\037\010\264=H\345\236=_$\r>\013&\225=N\026\032=\177;Z\274[\341\313\274\360\030\355\272>\346\235=\241+f\275~ \301\273\202S\271;Q\000\372\274\321\017{\274})\244\2751\2155\274eR\212<^g6=\304\303@=U\022)\275\345\256\237\275mQ\333=\002\301H\273 \210\233=\334\227&\275\322\251O=a^I<$\231\227<\317\265M\274\036\005D=\001Hr=\212\330\252=\232\013\270<\336j\330\274r\014\211\275<\014\243\274mX\005\275A\347\223=>\255\\\275\205\346\006=\030<\301<\315\2319\274Q:\230=\020U\327\275\037\204\210\274LaQ\275\3001\277=\311\247\256;$\217A>9\221=\275)\355u=\320\357\\>s\301\234\275\224UU>C\030)<\361@\001\275\302!\373\274\303\222\215\275J?Y\274\010\240G<\215\310]\275rS\373=\310\223\256=\240X\033\275\365\2548>\270 L\274\212\266\371=\031L\363=\242Z\350\274\225\r\212\275\312\315\375=\222#?\276\325\345\230=\255 \303\275@#R\273R&\027<\236\021a\275\207t5\275\236\357\222\275\315\262\357\274\240\354N=)$\313=f-\021=\271\356{<\2166\234\275\217u\360=\031\t\350\274\022\255\036\276)\366\034\275H\253%=h6L\273\301\340\313\274\216\201-\274\025\342\237=_\246\017\275\1777\242=]\214^<\001\332\356\274im\035\276\373\257\320\274\345\242\234\275\235t\277\274k}\213\275\245\\K=T,\367=&\214\220\275wA\363\273\313|7\274\353!\311\275u\262k\275u\003\343\275u\215N\275\005\372\231<\224H\321:\241\265\232=g\345U\274Y\357\300\275\241\033\317=\237HH\275b\266\203\275-\301=\275N\333\364=\265\241\217\275N\016\365;\004\377\006\2750V9>&\323\216\274\030\373e=b#p\274K\323\254\274Qe\021\276\2035A\275*\303\023\275\364a\213\274\306\302\347\275#D\214=\232\010\266;F\217\277\274\350\302\206<f\035\305\273\3329\304;\ny\n<PX\240\274\343[%=\334\340\233\275N\271\370;\034\010\253\274\222\2755\2759\030{\274g\241\215\274\301\234\003\274\202E\247\273\361\243\206\275\034\304\017<\371\221a<\302\212\303\274&\311\220<B\303`\273\327\221\272\275k\236\027<l\233\217<\337\024\301;\215[Z\273\200\220\316\274\254mK;a\032\240<T?\337<\263\367\211\274\333\300\206=\266\261\313=\351\330\201=\001_\234<\363\212\300\274]\224\230\275>]\302=F\345\325\273\255k\262\275hx\205>nuf>\250\010\001>\306\252@=\321\367\266\273\007\251O\274\307^\341=\255?\005>\243\327\312=\325\013\341=\"N\261\275Y\303\255\275\202\240\223\274\247\016N>\313w\005>$yL\275\2767O=#,\325=\034$\252\275\355\216\312\275er{\275Na\037\274\210\235%=i\2450=\357\232\241\274\374a\235<Jj\t\272=\036\035=\213g\326<M\240\242<\376\367\211=\001\025\211\275\023\326@<pP\031=P\213\035\2752\357\314\273\256\335\n\275\345\313\373\273r\320\351=\321v\232\275\027\024f=\360k\353<\263\201\274\273HH =J\270\010<Q$\013\275\322\220\321\272\254U\370<\263@;=(&/\272_\235\366\274\230\3058=j\343\023=\003\376\307\273i\223\375\274\347\270~<\365\313\354;\310_\212<\211s\376\274k\254{=\025\177\005=l\303\253\274o\235\217=\223\246\373\274\025\251\002\273\002\310\034\274\217\240\031\273/K\331\274\033Z(<\370v\324\272\263\260g=\r\362\226\27571\236=5\352\202=L?!;\221\r5=3\352^<\250LQ\275\246\347/=\254\362J=A\025\244<={W=\200\3309\274\267\365t:\247z\264<<&\017\275<\\e\274\"\271g=\345`\253<`\032H\274\306\231\363\272Mu\364\274F\315\271;K\330\203=\034g-\273F\241\227\275)\225\336<q_\326<=\251\260:k\300\222<\242C.\272&\276\233<J\325`;\321\204\362\274\310\264J=4\366$\274\301!h\274\026\255\351<\300\362\212<D\r\020\275\367e\364\274+\356f:\315D\027=\201Y\026<\277\334\301\274]\234\305\274\354\375\315\273\252>\026<\246\007g<\003\251\220\275\\\345\341\275NR\024>M\200\273\275\256LE\275\244%\177\275\205r\240=~\367\t>Q)\r>\270\224Z=\320\017l\275n\243\310\275\227\302;=\323x\263=\376G\"=u\240\341=]\337\232=\300\027\017\276[\243G=\221c\374\275DC\271=\227\211\024\275\213\346\210\275\225\217.>!<\201\275\214H\302<$\244\332=\250\363\214<}*\021>c%\243\275\211\363\211\275\026W\215\275\320\340\251=\001f\264<:\217\025:\325\031A\273)\357\035\275\344]\301\272W\027\005;\220\351x<Qf\335\275\352\005\213=\233\177\247=\227\264\251\274M3\361<\313\376\224<\302\305T<N\177\271=\360\307\300<dl\246=\2260\000\274}.\020\275}\2178=j\230\254;\227B\207:\341\327v\275E\246J\271\256_\311<\224{6=p\262S\275\002\262\027\274\222\200\007\275\201\023H\275*\005\227<\273-\210=\014[R=\036\303\220\272\212\242\235\274&\204\024\275QX\305\273\305\330\025=\215\355\370<\232\214\016\275@\361.=\270\262\n>\024\357\000\275\271\212L=\361\034\323=\213\272L<\277\313\213=\303\214\364<..\366= $j<}p\027\274\353cn=\016-?<b\313`\275\332>Z\275#\325Z\274b\371I=\202\026#=EH\010\275\247=\241\274\371LM\274\236B\240\275{\315\207=\271\227\226<B\003\360;\316\340\321;\343\223[\274b\025\232;\224#\321;\357\024K=\243oT;\320\211\214\275\357\327\224<\307\365\030=\241m\304;\217\364F<\246\300\332\274\362\313^<\224,c\274\251\253M\274\254f,<\002\316i<\236\263\\\274\300:\225;\334\310\315<\0051\212<\303pl;3T\264:\277\376\227<\316\336C<\223n\177<\227k@;\311\327\273<\367\217\013\274\250\242\225\274<\251\005\275\266\244\276\274\333\262/=\222\356\334<+*\224=D\024\\<\310W\377=\0176\";\004\345\030=\244\346I>!/\345=\344\363\244=\344c\330\275T\021\r=\361&\014=1\tE\275}\244\253=\022\n\004\276u\336T<\004\247T\275\343\2632<bYz=Ox1=\232 !\275\250\257\262<\324\374\225\273\251-5<\254x\355<\320?>\275S\345\211\274\253\361:;\223\256k=P\240\306<E\351\336;\370\353p<\351\260\003\275@\014\345;\316\326\202<kO\222=\272\362\246;\215$\216\275\210\253\024=\262\220N=\221\241\211<\031\232t<\270\305j\275\315\224\321<J]\203\275\t\336\331\274\004\342?<\022[9<\320\233\301\274\200J\214<\001\353S=\n\332\231<\350|\275\272\245I\201\273\037_\306<\\a@<+V\357;\243\t\236;\322\246\233<\252\250\212\273x)\000\275 )\317<\231{\273<\020\231@;\226\267\247\274[\036\001=\357+\246<n\326e=\276G\341;4\335\"\275\242(\272\271\\D\217<%\203\350<\236\215\253<\253\227\"\275\313*\336<\227ek\275\204\rI\274\244h\260;9\345\202<\356\337\037\274\227\324\217<\351\007\326<j\325\244<\200\322/<\272 \307\272F\210\205<\334\321\213<H\276\214;\224\346\231:0?\342<\002\333\330\274ca\300\274~[A<\345\004\014<\001\331\203\273\327\204N;zq<;\031}\000<\362\243\301<\375\013A;\010&E;%\331(;/\302\022<\366Z\"\272\tC\221<\006\214|\273q\010o;9\336\365\273\254\204#<I\353\023\273^\325I;\345\245O<s\203\327;\256\021K\273(\274\351;fL\212\273\007e\t\273\331\215\234:\237\213\014<\216\211\341;@-\3759Z\233y<\263/G\273\337\362\025\273\350\345Q=si\245\275\256\215\373\274\312\247j<\372A\323\274\276$o\274\315GK\275R\222\014\274\353\t\302<M\000C\275\332H\226\274\2763\300\275Y?\370\274\331\341O\274c\234S\274#\302;\275\352\2209<\010\377d\275rm\364<\324k\254\274\245\000w=\177\222F\275\276\311A<n\246I=\013\3739\275\236DA\275C-O\2756\227\036=\205\262_=\022\355\203=\211\006\334\274\277c\177\274W\244\025<\211\237\221<\324\267\225\273+B\276;\030\373\376;\315l\202<8\306\232<\261\311\266;\316#\272<\214o\247\272\353\315\374<-\367;<\224\336\347<\352\010*\271\034\344\035<\342\254r=\276D\211<.\340\032;\035\037\014<\337\r\001=\201Ig<\231\354\021\273N]K=v\303\251\273\352\367$\271\022Cy;);\270<\270\255\234<\226\035\210<p\332\314<\313v<\274<\205\016\273\2735\323;F\031T<\336C\353\273Yob<G\t<<x\233\223<\337\003\377<Tj\006\270\252\336\007<F\252\323<\265\017\206<\002q\315;\225B\016=\t1M\274\330E\363;\320\300\202<\\\307\235</3\214\273\256l\215;N\252\317<\324l\213</@\003\274\224\315\002=\202\241w\273$\026+\273\322\272\274;\216\301\235<\242-B<,\361\026<\355\241\221<Af\221\270P\332\242\273\210t\307\273\245\300\363\273\364\267\007\274w\243\253;n\026\202\2741\330\327\273\" \327\274\376\364!\274\244\317\327<;t\251;\304\265\224\2738\006\343\271\340<\373:\rE\210\274\251\2222\274\352\1771;\327\026\361;\224\355\333:y5\211\274?1\242\274R$,\274\270\320\2749G\372\010\274Gt\203\274\0051(\274\003\362\240\274\251\230?\274\270\332e\274\355\272\277\273]\367-:\256\213\350\273\211\1777:\032Qn=4\336\222<s\266\336\275\002\337\326\274Q1F=nRE=\336\317\343\273\206\313\036\275\305\246\200=p\303\016\276\321\021^\275\245\260\177\275\261\177#<\201]\315=5G\n<\317\200\025<\034t\260\275pO\256\275:\346r<\240Tt=\242\235\252\274\265\"}\274\")\270<\'#\317;\'J\020=0\005\013\275\274\355\"=\037+\216<yVt<uIp\275\336\304\214=\324\022I\275Z\265f<\276G\273\274\332\250\205\274\001]\201<\032\237\364\274[\344\203\274:\273\001\275\001\273\205\274\274\334\237=k\314\246<@\345\277:\2777\000\274\034\2302<Qmc;_\240\240\274\007\223\253\2720\002z<\023\024\027;\335\254\375\274\250!\263\2745\206\230\274\370\274\220:}X\272\274\366\217\006\275\274{\226\274\302>\006\275\352\177\277\274\301f\320\274\211G\237\273\334\273\277:;\302\216\274\300\304\257<\031G\213<\3376\034\275O\000\232\274;\022\202<\361Y\202\275]\240\255\274\256\322\343\274\271\2746\275\320\203\240<\366\001\3578\033\265\225\274{\373\305\273n\346E<hE\305\274\275\330\361\274\213n\016\274\232\213#<\320\227\315\274\272\3652\275\257R\275\274;\236\016\275$$\375;\036a\200\274R\2026\275\177\217\007\275\257WA\275\207\276\'\275\325\345\202\274\335\267\304\273Y\267`\274*\025$\273\304!\020<\303\371\377<v\032\353\274\304\177$\275\343\256\377<*.\206\275\324\247I\275,\213J\274\331P\026\274\327$9=r\207\343;\305\256\232:\000\333`\275\327~\334<\266\033\364<7\240\025\274\352P\026\272\353\232\000<V{T=\010\355\223\275L\376\302\275bR\234\273\302B<\274d\206\237\275\231?\024\275\375+\023\275\033\205\003=1\317Y\275\220\250\315\274\\\022\324\274\204\216\246<L\347\326=\202Q\277=d\351%\276\330C\307<\275A\235\275\002\332\221\276\220}\214=|\021~\275t\2553=@\361\325=\212\245\321=\215\n\267\276\177n\225\275\302E\246<\023\276`<\343\354\307=\251#\034\276\362\372 \276A\340A\276\025Hw\274x\366\306\275\317^m>z\257\342\275\211\342!\275H\365%\276\314\024\331\275\222\355\022=\343\241\016\2763F\n\276\332\\\332=\267\346\311<\332\341\013\276{\271$>J\317 \276\320\352\327\273l\352\222\275\0206\014\275\312\311_<6tk\275\n\251\244\275\373\014\177;\355\306\240\272\250N\204\274\216\372\013\275\004T,=\335\361\336\274\017\331\202\274_\017\006\275fG\n;r\360\033\276\317&\037=\010\237\272<@\231,\276\354\261\n\276\34187\275\223R\233\273\334j\001\276sE\t\276C\303\200\275nC\362\273\300\335\347\275z\212\272\275&v\247<\235\333.\275\367\251\221<\326-\237=\010M\317\2746\233\236\275\014\026\\\275|q\322<\006*\r\276;\303\275\275\231\\\310\274D\250\244\271\270a/\275\3437\001\275JQ4=L\364\276\275>\263\262=]B\234<\213\317\341\274.\250\235\2752\230\n=\n\331\033=^Q0\276\330\310\271\275(M\227\275!h<;\203Kq\276\277c\"\276\241\267\244\275QLM=\325\275\t\276\340@\374\274e\357\331;\025%\007\276\313\025\210\274_=\215=1\'\367=\203oa=Am\006\275\217\373d\273\"\260\311\274\005\262\217=\234\276\251=\371\254\212<\033\213=\275)\366a\275\031t\370<\006`\215\275\245\324\033\272\014_\213;]K\t\274t\3643=\353\267q=\364\3133=\014\340\276\273D\200\\<\322\275\360<\013*\032\275\177\227\264=g\254\222\274R\223D<\252@u:\313\021\000=\351xm=.$2<\321\001\027=eP\220\274\270\370}\275n\236\262\273\220L9\276J9\261=X\256j\273\362\257\236=\214J\017>\353\235~\276b\235V\275U[\n\276/`\374\275\214:@\276!\372\036>\270\300S\275P\373h<\250\234\352\275y\004>\276L\354\232\275\352|\210\275\222\007\231=\314\265S=\2219\271\273\373\220{\275\360\223h>\223\021%=lr\356=\322q\361\275\370V;\276\313\333\025\276\340:\206=\330\264\177\275\264\260\017\276R\233.\276I\244\003>\347\023\021=RS\217\274\n4\013=\030Ay\275}L\222=\332.\354=\300)e<\3130g;Vdr\275X\007r\275\333<\253\275\321\027\'\274\377\234\237\274\375\240r\271Qx\313=\353\267\327=\305\333J=s\336\026\275\"\362\330=m\342 =\034_\301\275\303\306+>\371\322\255<\206l\226<\240\273\006=\036\314\330<\230\014\253=e>,=\237g\020=?Y2\276\177\014\211\275\274(\227=\"\3141=\235\3407\275\247\330\232=HhD\275\3242\342=\266M\027>\231C!\275\255\212\213<Y\205a=x\241a;\3563\261\275\243\252\214\2748\240\251\274\263-4\275\233\363\302=\376\024\007>\016\367h=A\304\205\275@\332\r>\003\370G=\177\244\245\274\0052j=Q\304 \275\215A\226<I\260\215=F\022\377<\007\273\216=\222H/=/\362\006\275\035\017\010\276\217I\345\274\350\211\207\275\273.0:w\004\352\274\265OM<;\270O\275\342\027\336\273\252\216\303<\346E\023\275\231\026\005=8!&\275\257q\334\274\314\037\037\275\0210\000\275X:\026<H\241\317\272\002H\037\273)\000\331<\274\250\202\274\031\246\003\275V\346\332<oo4\275z\'\270\272>\273x=\242\231j\275\356\337\307\274\003+\r\275\316\245P\271\336\242#\275dz\2277,gQ\275Z\330\203\275\035\207\006=\317\251h=\353a\250\275\371\1773=\3052\326\275.\302\322\273\202\334d\273\206\311+\276\021\362\005>\220\252\030\275\201\226\031\276-\375E<\371pU=)\223\201=-\023\256\275\356\"\312=\210\231\031\276\343]\205<c\372\017\276\314s\267\275\370&\013\275S\362\367\274\034\030\334<\035\027\024\276\343ZX<m\004\372\273f\321\255\273\254\374N\275\363l\216\274G\313\345=\316\232A>\2473\206<\330+\204=\026\227\300\275\335\342\217:\303\"\017\275\004\350\215\275(\330a\275\343)z:\244\212\021=\357\201\"\273S\031,\275\313\004-\276p\334\205\275\'\237\250\275\001\276,\273\266\244f\274\330\306h<N9Q\276\364\365\217<\201\322\035\275\373T\337\275x3a\275\304\351L\275\211&\340<\252t1<\345\263\003\276\364\026\320\274j\235\t\275\013\352\334\274\312\030\340<\353n\307<\340\326\026\276\255{\336\275A\312\304\273~\024\\\275\342\220\224\275\325\334\336\274RL1\275\0277\274\275\270V\330;\003\303F\275\351}\370<\362T\301\275.\014\n\276\231\344\370\275\211U\213\275\324\223\220\275\343\033\244\275\262\227L<\241n\243\275\255d\241\274\335\210\345\275\260\275\337\275/\227\224\275_\332\262\275\260\374\322;\004\310\301<:\n\n\276\236^t\275\225\214\304\275\367\353P\275\370\333\032\275f\326Z\274\254\006h\275\327K\303\275\354\301(\275\317gx\273C\260\022\274q7\3449}\373\263:U\326\240\273xW:\273\013\330\007\275\031\315\211\273\253\020\327<\023\017\223<qi\337\273!\2644\272\207?\210\274\002.I=z\233\253:)2\022=\3104\020\273\014\232\r;\242\\\200;% Z<\360\010\336\273g\236T\274\310+$\274l%K9B\370|:\'\325~\274\235\3434\274[\210E\274\203\014\211\271v\203\345;\354\004\332\273\335\373\301<\204\320\270=\377\314O<\234\353\202:a\315\300\274\016\024E\274hz{<\025\353s\274\211o\246\2733\360\222=\035\321^\2753o\237\274\326f\244=\326\217\302=\021N\275<\005\310i\274\300\265\201<\364n~\274Lsr;se%<\262/\323\274\027\235\005=\037\213\026\275\377\215\230=kZ\331\274\325\367\027=j\345\227\275\203\315\364\273\350\3147\275\367\373\376\273\232\211E=\232\212\311\273\277t\235\2754\341a;\371H\216\274\306\\\367;2\254\232;vJ\340\273\246\241\034\274\234\236H\275\231\224\247\273\246\375n=\231\263\307<\202\336\256\274\377(\034<\205Q\030\275\303\212\254=+z\250\273\246\214\232=\007\301\252\273{](<\316 @<\004t\366<D\330^\274\371\222\024\275!\253\203\274\230?(<\274B3<Sk\351\274H\350\235\274@V\223\274Bud87\246\211<\225\252t\274kd3=\244\306\037<\'\347a\274\303\2621<\330\372\004\273/\213=\274Et\006\274\033R\343\274\347D\2509K\307\237<\230V\247<9\203<<\317\352\224;^\374A\275\354\231\211=\3416&\274\202\000\270=\001\342\251\273\201\204\003=\032\377\017<\360\307\221<588\274\217\211\264<Q,9\274\027\273\027<`\333\"<\246\211\312\274\267\215\375\273!\242\000\274\227k\266\271\355;a<\354\004\222\2745\310\021=?\213a\275\273T\342\274\254\317\023;S\264W=|\233`=Q\256\330:\t4\340\272\362t\303<\220>\250=O\360\236;5>\230\275\247\336?<\330)J<\014\177v\275$\277Z\275\356A\202\275W\340\353:C9\260\275\361\323\265<&5.\2747\370\002\275\367\335\234\275\200\351h\274e\211(<\272\013 ;\207\227;\275\3743\273<\003\366\337\274\270\306\r=\217\306\257<5\251g=\273\307\250\275\256\242\377<\255\271\002\276\320\3627\276\374A\025>E\204\037>\031:\251=\013\276\246\275H\271\003\276\017V\216\275 h\256=Xd#\275\361Z\014\273\247r.\275\210Q\261\275\007\311\266\275/\306r\275g\r\370=jL\231=\037\200\003\274:2\035\276;{->\326\235\030\276e\360\004>\342\264\264\275\246o3\275\214\327u:\233\325\021\2756\341\026\2755\250\336\275\245G\\\274\300Zq>\300\240->t\345\357<\262\377\256\274g\216^\274\311\232\261=\323W\324=;%\"<B\255\374=\030\275i;\334x\034>\200j\335\275&L\246\275\201\013\367=1\213\310=\212\334\311\275u\315\231\275\341\353\014>\333C\247=\320\242\265\275\265\246\301;U9\300=F\232\000\275r\206\245\275\252=\201=\203\024\235=e\034\010<\337Wh\275r\"\207\273\n\254\271\272\207T\010>7\034\351\273!:\302=\215^\223\275\035\221\021\275&H\247\275\336.\200\274\316\370\005>O\202G<\230?\245<\014\025\034;(M\260=\342n\242=;\323\215=X\007\240\275\333R?={\r\372:~!\032\276\317\202\224\275IM\221<\017f\246\273\223\271G\276C\241\036\275g\332\356<%\226\341:vO\177\275\362q\305<\'L}\273Y\237\234<\270v\327\275\2740\245<\363\303\253=\377\022\217=\014\'/\274wM\374=\031\337\247\275\211[\200<\227\023\243=d\355s\273q\236\024\272f\332\215<\364c>=\273\222\r\275\270\272\370<00d\275\314\221/=\006~\203=\345\377\226=\030\033\342<\377\302\'\274\202\205\031=\260\006\365<\346\220g\273\307\t\300<N\031U<\177\315~=\0173\352<\326\355i;\2329\227=\"\013\270<\2623\367<\003A\227=\236\017Y=\366\017$=\201tv\273\006qh=\206\213\214\275\243\252\303:\254q\t\274\341\313\000>\241\315 \276Y\267C\275\252\246B\275\025?\232=\252\325\351\274\237\347\245<\333t\247<\300\221\255=\t\304\003\275\320\037\243<`\242\023>EQ\321\275\335\021r=\337\272\272\274,\337\337\275\200]\177\275\272kR\2758\3200>%\r\336\275\025\360\013\276r\266\222=\252W\257=_\353\017:\202\216\314\275\231\020\020>\267\270~=\276O\235\274\313\307\037\275\357e\211\276\003\226\320=8J\227=\230.\351=\310\211\272\274\207\3062<\302R\201<\013\354t=\202u\013\275\n\214]=\367G\370\2745\035\000>\354\341\303<\324\372 >\010\273\016=\340\353\203\275\t\357K=\332O\254\272%w\215;\311\034[;Z\361\235=\304(\332=\026\022&=\270\354\003=\022\211\302=:l\231=\360\037)=\t\277\303=]k\224=\216\271\215=\010\036b\275\213\307\316<\207\347\177\274\247SX\274\236\r\236=\016_\017>\354\330\030;\0266n;\020_y=\354\021\314=\240\345\007\275\001E\t=\365\000\214=SD\340=W\323\265<\365\361\023>\232\377\265<\027\037\223\274\247#@=tT\272=fh\247<\244\251Y=\232v\326=\376I!>\250\'\261=\277\242\212;\022\206.>9X\243=\341\212\250=n\305v=@*\274=m\312\223=\313\324\205\274\361\014\252=\253\353B\275*\014\270;\315l6\275\331\026\034\273\343T\000;\263B\256<[\261A=\314\034\234\274\000{[\274\237B\245<5\\\376=T\r`\274\031\320\373\274\231IH=%&\275<\257\262)=\007a\003<$G\344<\315\033D:\"\326\003\275h(\252\272\247-E<!\367\240\274\362Z\023\275t\322\225<U\236\005=;6\027<\267/\335\273\30530\273\260\270\332<\023\243\025=\363 9\274\226\326<;\374X\332;+\265\267=\216\265\201\275\276\353&\276c\264w=\224\244\376<\\\225\206=w\035\014=@s\014=\331\241%\276\242\003\211\275\014M\301=e\335\233\275]w\002\276Z\244\232\275\250c\r\274K\274\237=\232\235\237=G:!>5\354\267=E\005 >\222\303\343=j\246\264\275!f\014\276\002\353H\276\"h\200<\024\261&\273\200\276B;\351r\'>\323\031\021>\030L\215<\377q/=\335\313\263<\373\037\211\275\221\337\224<W\031#\274:\206a<e\210\232=\364\271\1779W\311\273\274\216\302\345<\247X#>\363\226\366\275\202\372E\275,\216\332=\315\254.\274\232\345:=\035!\311<D?\3208\013\266`=\311\031\325\274?k\376<\375r\335<#\261\007\275\203\332\024\275&\233\017=\327\034\276=\027\231\033=0\301\306\274\243&\230<\n\202\270=,\323\342<\001\002\001\275\337\301\205=\235\345q\272\344\t\034\275\240\370\365;\246\300q<m+\201\273C\260h=\210S\256\273\236\276\224\274rc\260=\026T\331=\343\254P<&\240?\275\337\030\334=\315\262\203\274\376%^\275\223\200)=O\022\035=\246\255=9,\006\372\274r\340O=\215\201\232<|I\260\272}\327\'\276\366Z\270=1\355\246=(\270\260<X8d\274~\"\347<;\263y=\215\002\025=\261e\221=\203*\333=Q\325\312\274\370\371\222\275\376J\236<~\322\331:\023R#\275\246\334\236<*\360(<Z:\204\274m\202m\275\220\035\004\275\273\232\220\275\256\201P\275c\372M\275$\204s\275\364\214\364<NM\t<\336>\212\274[\032\214\274\215F+\275,\307^=\002\351<\275e\332\255:\013\020\275\272\346\002\237<\325<\226\274\016\201\311<\nO\014\274\322x==\316\344\312\274\000\341\325\274\177\010\204<O\344\245\274\226\373\001\275\345\300\033>G\263J>\236^\322=Lr\300\274\235\247=\276-\253\001\276\001i7\275\321\310\312=\310\3240<\355\3411\275\017n\302=\207\321\343\275\225\332\314=;\216\372\275\372C\370\275\243}\021>\236S\342\275\221#\003>\0254\375=\025\371/\276\010\301T\274\261\372\246=\177\210\002\276\003\034\241<l\301\026\276\354\001G>\371\205G>tt\276\275\350\030\337=\303\347\262\275\362\242\032\275@Y\013>\177\257\224\275k\343x\274\204|N\271\207\375\005\276LJ\267\274\266\276\001=t\306!\276\030\246\315\275q6\033\276\347RH\276\004%s\275\376\201\313\275\016\240\023\276r\365\315:\2059+<\207%\010\276\332\203i=,\203*\275\261\004\204=\215Q\333\274\313m\031\275\312d\264\275m\204\304\274t^\017;\246y\344<\352[ =\266\254#\274E\023\013\276\310\363t\274\017\3142\276uB-\276\224\334\024\275\246\2611\276\223r\216=\036G\033=\221\275\310\275\242\231\300=X\312\233<Db\002\276G\323\330\275\214c\301\275\227\r\014\276\253\370\021\276\203\0244\276B\207/\275!\353\204<\324^\n=\000\327\363\275\276\312\036\275\230\227@\275(\364p=l\275\274<\\]\014= \'\322\2758lu\275\241\016\n\275e\273\217=\245b\224\274\364\"\275=+\001Q\275\027\364+=\306s\357;\232\002\232\275\326\352B\275\354\317\323<\273|\211\273\336\006r\274\270\352F\274+\2631<G\214K=\227y\257;C\317\246\273k\251\307=$M\316\275\344\323\027<\022\t\014=\243\327j<j\016\243\274\324\017\253<K2A\275\376r3<\033\315[\275\233ba;\226\300b=\001\034/<\244\317\225:\212\342\351=]\214%\274gUy8\215\241.\275OF\333\273;\241\247<\313p\202\274\003\301\277\2741\235l\275\262c\211\273\025\335\024>\2057\206\273 a\306\275\232\326\022\275\240\371\253\275{\242\330=\226\221.\276\324a\365\275p\023\003\276T\352\255\275\251\213\212<\225\206\246=Vr\020=g\336\371\274|\r\337=\277\364\244<i\276\346=}\217\r\275dZ<\275\027\023\t\276\003\3673\275\361\2251\276\004\253Z=-r\020=\202\024\215=j\215\203\275\251H/>\201\336#>\267\354\026\275aw\237<z\343*\276\271\010\201=o\342\030<>/\221<U\340\212\274\356\333l\275a^\270<\373\023\231=\2673\304\275\035\317\316\273\262^/>\253\226G\276{\014E\274\340e\334=]5!;\216\375+=\034\235\226<\332\264\201\275i\211\253\274\267\355\301\275M\177%=\366l\004==+:<H\004E\274\000\374\310=\376\331\024=\321\325a;\370\346\023\275s/\211\273\372\370\027<\204\227\013\275\303\235!=%cF\274\320\267\3039U\364L=\035\240:\274\341\217\264\274\342\004\216\275\003\260\2519\344(\240=\017jG\275x\205\315:\244w\377=\220\373\010\276\214L\271\274\013J\353=\272\220\261<T\320\305\274\200\230\374<\\\361\213\275\316\010\005\275\331\341\007\276\344&\005=\341\245+\273\256-e\272X\303\266\275\240s:>1\033\001\273,\r\224\273w&\200\275\302\223.\275N\341&=\226J\274\274\326\0053\274\261%\256;\025\031\215\275h\002\347;\201P==\'\302\026\2745\363\013\275\310\373\253<fd\341<\220]\274;\202\307v< \237Z\275\345\343\241\273^\335\272;\225\002O\274\271\244D<\312W\200<H\264e=G]\257;\003\0335\275\007+?;<\004t<\371\371(;\263\307\356<\300\363\241<c\204\035=o\013\212\273\315.\226<\223\001P=\310\034\374<:\344L<\310>\273;\201\r\231\272m\"\237\274\221\0308\274\332L\305\275\330tx\274p\335\376\273GA\306\274\301\373\311\275%\267N\275p}F\275TQ\317=~\376\240=K}\274=/\246\374<\257\177+<c\262\231=5\353\360\275\017;\265=6\177j=\360\037\3777L\364\220\275\352\'S\275P\003O\275-Z8\275\247q\312\275\310\373\250=\274r\n<a\000{\275|@\000\276#\277\225=\246cG=\207\312L\275[\256(=\306\256\275\271\232\177\266=\0053\356<\206\320\220=,K\356\273nK\276\275\217\t\025=;j\376<q\336\341\274\213\007\020=\214n\225\275\232\372\356\274\302+\001\275!c\000=\002<\326\274\n\352E\27140\237=\347\213o\275\277\260\231\275,\267\002;\247\252U=\316,*\275v\261\371<\362 \346<\035W\374<\361Oa<\360\244\315<\253\031V=z\014\026=\253\304\263\272zb\025\275\236c\206<`*\372\273\341R\337\274\204\276\307<?8\005>B\217\233\273x\020\277\275\353C<=\t\277\373<\274\2723\2757T\313=\324\016\221\274n\300\r<\000\'\200\275cE0=\251\237,\275\006\370\201<\250\330\274=\257\364%\275\305\376\251\275\373\023\361<\307\232\340=\235\321\334\274^\242Y=E\310\336\274?if=hv\024=z\247c=\322V\245=\362\322\224=\260t\277\274\366)R\274\272\273\244\274&91\274]B\216\274`)\006=\013\367\264;DmW\274\020I\220\273\264O\233\273\354uk\2722kB=\206\361\331;\212\013\305\275\034\367(=^I#<\365\225t\275\032\2018<\354g\322<\351\2309<\025\312\032<\2402\005\275\375\004\356<\363\376\270;\212\r\013\275\200\036z;\023\031\262<\t\312\373\274N\034\003\275sx\037\273m/\354<Q\210\275\274C\250\235\274\370T\3008\227/\027<\217\014\314;A\364\226\274\2412\"\276}\273]=*\232\t=\342s}\274\025n\024=\367\356\264\274\330\214\241;(+\301=\302g:;\324D\257=\336xF= \367\000>\322\226\001\276H\365e\275nD\275\275\336\021\231=RT\336\274\020\303\200=]4\237=\314A\346\275l\257Z\275\'q\032\275?{\210=H;:>\013\221\200;|\226\020>h|\300=\333c\352\275\022\330\304=\310\315\316;\264\302\302<Z\022?<\251\240 =\260j\330;ci<\274\323D\r\275$\217\267:\260\246R\273m\370\214=\247\230\255<\237h\351\275%\215\336<G\235\322<\364eW\275\370H\210\273\356\266\r<\313\003\240<F\032A<\363F[\2750aF=e\322G<t\016\016\275\321\330\014<\305\226\315<\207#\017\274/0\367\274\031\244\000\274\246g;=\250j\264\274,\315\321\274\004\211b\273jGv\274;Ej\275E\250\033\275\363\211\205<z\0006=\017!\240\274\r\327\334\274@\027\303;k\256\315:\216\221$=F\343\006=Hl\267\275\3019-=PS\r<\371X}\275\235\353\032<\372\350\350<\223/\245<\376v\354<\223\027l\275\272`\215=\235\255\n=/\372\021\275\244\322\303<$\352%<\010\214G\275/\274\245\273\202\r6<\335\320\\=O\212)<\311\036.\275A\225\274\273\347\260#\275\237\267\321\2755\216\245\274a\354\241\271\342/\322\274$m\223<\253_\206<$\275\213==\006\267\274\036\022\227\274{~\257<\222\205\317\274\036d\217\274)&Q\274T\024\257<\017\'\035\275/\236i\275\334\"\030\275W\006#\274\364[0\273\363S\327\274\035xA<\246Hg\274b\271\305\274\364e\272\272\224\t\260\274\317\227\210<\356|\227\274\033\277\"\273o\277]\274=\361R\274\375\366\034<-rU=v\365&=|\272e\275=\334\t\276\334\316\252=\257\271g\274MG\240=0\213\336\274\307*\327<;\301{\275\221\345\'\276\364\225\302\275<\212+>\214\263\'>m\023h\275\333\335\260\273\177\226K\275\334>\233=\353\232\327\273\322\246)\274\333v\272=\316\364\342=.\0067=@5M=[7@\275\254\336\027\275\351\340\256\275\030if=6\210\'>\210\022\261\275\316\363\263=\332\221\255=\276\376\352;R-u=\347\230\324=\240\014o=}\236\252;\312\327S;\205\037\316<\370\350\201=\365\226\000<5\365\346=Gsq=\335*\334=\021r\234\274u]\241;\331\207\241<\025-\016\275T\217\226\275#\310<\275`\252\343=>\303\033\274\230~\235<CV5=m1D\274\031\2716\274\300\006\264<P\223W=\203\212*=\305\350-;\306\351P\274\352b\220\273\t\366\032=O\251\222=*H->\242Z\325=\'\277\204\275\374\312\217<\274\210\343\274\353\276R<~67=h\256\220=j|\t=\311\341\202\273\364\335/\274\217\321Q=)3\345\2740}\330\274BH\206=\262\007\310;\001\257U\275\321\r\367\274\317\006>=\220\031\353;l\256O\275.K\000=*I\027=\363b\250;N\323\245;n\2663=\033\005\267=\037\205\374;\rE\177\2744o\343\273@\336\254=\343/\372<\000r\021>\032\225\023>s\365\037\275&\177\327\274\367W\020\275\360\332\256<\232\205\\=\354\344\203<\206\260\023\2751\237\027=\304Y\370\273\212\231D=\254i\313<\210\362\321\274w7\010\275\364]\310;\330\270\327\274h*\207\275~\322\245<\316\207N=\360\263\274\272\341\006\235\274\014\250]\274\177\003\030\275\001f\316\274\377\320\205\275\333\005\200\273a\222\206\274\013$\371\274\372\355\244:\033\246\207\274\267\372\251<\004\332\265\274\010\231.=N\267e\274\230\035\345=b\3021\276\217\253\034\275(t\221=s\255\034>f\016\n\271\375\224\371=+\324\005\276\321C==7\254V=\376\354\270\274\223\003\036=\277\354@=\361\260\202< z\252\275\372w\353=\001Z\240=p\277\r\275h\255\265\275*t\">\017\220\253=\261\302\006\274\201\177\301\275\035M\341=\344\340\024=\002\262\007>\201\323R\273\2223\225=\266\030h\275k4\316\275K\245\322=\354\025|\273\244\306 \274<\324B\275\302\340\206<{\245\362=/\252\350<\'\023\'\275!\007f=\226<\202\274\341\010\262=\232HC=\001\373R=\222U\206\275\307ey<G\261\275\274\204\304\250\275\000\014\375=\314\244\237=\205\240\207<\212\030+\275\215\265\347<\025\231L\275\204\323N\275)A\023=\204W\320\272\225\362t\2744\373o<\207D\243;l\361\246:\347k\206=#\202\214\275,:i=\373\222\242\273P\325\211\274\330r\342\275\214\037\226<!u\323=\241h\235<\213\211\211\274-\354\275=\370\206\274\274|\340\311<k\262\315\273\226\370\323<\2113l\275\032\027\\=\261\020\226\275O^\312\275I\224\207=\031\223\256=\377\377$\275\303\362\304\275\267\310\363<|g]\2757\271\032\275\277\354\033\275I\240V\275\270\2035\275w\2721\275\026\227\037\275cU\036=F?\360<\232\247\001\275\304\221\233=\267\226\376\272\311\241p\274\321Q\021\275\243\021\257\273\2158^<\003]\226<\311\345\212:[\365\212\274\024H\335:\311\234\325=B\242\n\275\022<\354\274R\024\232\273\220Ro\273*R\366\274\326?\264\274\3600\226\274\200 {<\355\344T\275T\202\327;Y\177\322:\027\331d\274\007k\302;\267\254E<\177\375\023<\006se\274\3224E\275~X\273\273#\002\314<0BI<\225)\345\274\2262x<\240\005\2639\243D\014\275Q\204\254\275@\322\013\275\014O\323=\220\273\331=|4\272\274g^\213\275\026\016\335\275\265\205\335=\034c\204\275+\204k\275>\314\342;\375\354\370\275\034/Z\275I\311\372=(\263\021<\353\n\n>\252^&\276\303\203\034\276\276r\236=\230\356\036>\336\215\010\274\234\200\210<\325\016^<\227E\226<\r|\007>\227V\363<\243\357\324=|`\261;\333\260^\275)\326\253\275%\252\203=\375\356\252<\036\372\313\274g\230x\274\034\014M=\341\345\342<\260Dy<J\352R=\004\336\216:\3662O>\356p\226;\253\017]<\310;\324=\0161]8\310\230<\274\206\354\n\275\2259\306<\"j\365<\352]\210\275\346q\023=S\035L=#US\273\200\\P\274\353\227z=u\231\212=\021\037\001\274\370\321\200\275\364\260\316\272\242\353\346=\327\220\373<j\357\305=V\205\341=\314,^<]\335\241=\306\275\242\275\357\315\336\273\255\037\224=|FM\275\010\262\n=?;\300<\203\326\247<94\n>\000\014%\275\t\276\004\275\210\021;=\323\306#<>\\?\275xv\230\274\212%C<g\273/=\205\377\344\275\232\226l<\303\334\014=\344\364\237\273\036\337\256\274.8=<U\322\240<^\225\000\275\241 \252\275\002\255\312\274\243\021\205=\225\314\206;\216\334\350=\337\241\351=\354\0076\274\034\004\235;0\005\345\274Z\332\203<\241@\337<Z\320\253\274\233\300\244\275\234\224_\274iA\004\274\337v\251\275\354\315\022>n*O:\257\302\370\273Q\316\310<\032)\256=\324/G\274\007Bj=\335\361Y\275\230\265\013=\363\252\t\273\224\332\300\275m\370-\275\373\005]:\265\016\376\275\216;\221\274\272\316\302\273V\246\253<h+7\275\001#R\275\'\324\025<S\262\020<\335\020\267<+\024\220<A\233\365\275\021\345R;O\001\257\274WT\034\275;\330p=`\030\250\275\026V\212\275\213\tY<\243\316\376=H\244\031>\346#?>]\232\307\275W=\275\275\013\357G\275\224\203.=\352\305\204\274c\364\231\274\353\215\275<\346\313\351\275\010;T<\207\032\306\275\021b\204=\010\311\351<Y\334\003\275j\306\203\275\037\250\324=\261u\266=\237~\004>\177d\003\275\351g\342\275\356XW;8k|\274\014\242\037=6Q\311\274$\313Q<\274\'9\274\326\221\3439_\242\305\275^\244F<\302\375x<\312>\006\276\'O$>eAS=\017\366\221=:\331\202=E\017\235=~@\271\272\271f\331=\227\372\300\275j\231\221=3\027\305<S\"\027\276T\250Q\275\352\371\026=\004\021S\275q\213\025\275\301\r\017\274R\032$=\315\277@\275`\201\245\274\360\\\373<\345T\223=\200\327\000==J\211<\257D*=\230\037F\274\322\334G<f\352?\275P\034\367<J\265\377\275\305Lg;\3359\225=J\237\270\275\264\366\246=\365\312(<\303\255\"=\367\374}=\364\363\230=\267W\032<\245\316b=\356-\332\275h\347\360=\006\310\323<D\3577\276;a}\275*s\022=\231Y\301\275\245,\305\273\007 \217\274q\274\000=-\036\355\274J\032\226\275Su0\272v\255\265=\2137\327<F\233\224<zQ\343;\001\357\376<\360?08\355\261\304\274\347\366\372\274\213\236\255<\347\234\021=\236\324\202\274=\355\225\275\241\002\226<\336?\234;\201\357v<6|h\272D\274<=\356\016\034=\3211,=\2219.\274$hP=y\257+;\375W\260<\245\223\361<\321\2733<\214\276\004=\242\244J<\205\023\n=r\330\010=\362\037\201<Nh\026\273P\304`\274HUU=\022\311\232\274\250\016\r=\202\257\010\276\353\230\000\275Om\226\275Q\317\212\276~H\227\275*&\236\275.\271)\276\254\231I<\302w\230\275\016Z\205\2747\376\">\253l\315\275\330~\242\275\nak\274\216~\027\276\252C7\273\217\254\037\276\246\230\201=\250K\273<t\206<=F\021\017\276\265\262\353=\313o\224\275\323\026\323<a\350\254\275\343\021\243=\211d\327\275\373\320r\275\234\263\'\274\364\351y\275Gb\277\274\356\250\302\275\222\231\256\275\344\307\026<\205\216\215<\360;Q\2750\303\230\275\3171>;h\001\334\2745~C\275\037\3034\276\362\022,=\263\345\352\274@\315\267\275\362\247\361\274\205\014\020=\340i(=\027\2053\276Q\351\013\274\346V\035=\"\232V\275\210a\245<\340\n\244<\347N\323<\227\005\205\275p\204\'\2750b\264<1\225\014=\255}n\275\266\334\025\275`H\n\274s1|\275\274d\271\275\003\224\241<\221\t\303\274\244\r\203=\311*|<Ro\336\274\033\227P\274n\270Y\2743\215\260\274x\302\006\275\340\212\312\275b\034\373\271\276\251\337<P[\347\275\246J\267\274+\220\265=\345n\360<Fr[\275\351\006\316\273D\216\376=1\n\n<;\246\247<\261\311\322<M\231\374<\206l\261\275\362%\201<u\354o=\nC\212=\254UC<Ni~\275.j\335\274\202\321\207\27530\004\276\324\344J=\206\360N\275;y\214\274G4\256<\022Cl\273\227\341\025\275\\#\250\274\366\361\320\275\010\373\247\274\272\210\2049d\352\331<\227\366\010\274vik=ao\024;0\032\265\273\025\367\320<\242?/\273\261/\014\275]\307\200\275\343\342\021=\017\253\205\274\214\316\301\274jt7=\342,$\2759%\277;|K\010\275\357;\244\273\306\257\314:\271\346\025\274\r\007?<\215\307\257\273;\332\211<Xh\"=\303\330\370=\225 i\275\263\226\256\275\354O\206=\350\0320\276\231\n\303\275\210\351\317\273y}k<\030O\370\274@Z\201=\006W\032>\325\3332;\227\003\024\2757\366S\274\330\273\350<\360\222d\276]\234\337\275\014\014\024\276\315\300%=g\240|=\034j\177\275y\335\017>sh\035\273\326\025\362\275>\326Q\274o\300`\2734\231j\274\000K\324=\263\353\037\276\003\323L=c\342\313<\377\007\021=F0B;\377\300\372\273\242D\010=\247^\032\275S\227\374\274\217\274\361\274\321[\266\275\\:\260\274\376v\356\274\000\322\250=\337\240*=\031\301\243=\326\232P;y\377\313\273*6\277<\366\363y\275\313\3643\2751\242\264\275D\366\225=\217\243\236\275\260\217\\\275\315\376\227=\013\356\270\275b\302\370;\326\250F\275\001;\n=0\374>\274=\022)=\031G\206\274=\345\014=A\225Z=\2033a=\324\2214=\022\231\003\275z\347\317<\302Hx\275\235\276\333\275\3511i\275D\373\024\276\327\034\213;a\301\005\275K\356\220<[\030==\337\030\314=\352\315\353;\230\273\372;\302\3173=\235 \344\275\373\371\336\274\264\030\260\275\210z\253=\240\251\322\275J*\207\275\270\206e\274`\352W\275\027\267\212<~\345\222\275w\006\315\274!5&\275\200{\260\274<\032W\274\362\333\366<\035\241|\274\353It=\221j\027;\246\267\260\273\273\274B=N\307k\274:\031;=\021P\256\274p\320\264;\340\370\273<\326\342\235\275\246\367\000\274\330\t\'\274\000\300U\274\341\306\362\274\035\021\037;_\n\261\274\356].<5M\t=\325\026\227\273\304mU;?\343\206=x\336\315\271;K\214\274\021b\306;40\335<\330\177\007=\024\255\340\271\267\251d\273=n\3549\202\310\302<e\023>:\014D\307<\r\362\255\274!\006\203<Dx\246\275\377j\032\273Y\256\311=\221~\353=+\004,\275\032o%\275\343K\334\275\274\315\266;\310\026\305=`\235@>S\235^=6\211\341\275G\251w;\345\245\271\274\304\363\017<x\310\312=\273}]=\n\221\271=\\-\252=m\361\023>v\337\265=\031\302\252\275Y\334\313=\233\311/=)\330]=Pn;=\223\316\206=^t\215\275\003\030M\276\020\256\223=\356\231\027\273\301\213|=\013\000\3239a\0256=\301D\216\274\213\360;=\354\220\006<\370\222y\274g-e=\006|R\275\365\220L\274\305\337\271\275Pw}=b\271\213<G\036d\275\332G\214\274\022\007\031>#\205\261<\371\324\177<\024\014\270=I9;\274\312\363\302\274KP\241\273\375J\342=\212c\017=\332&\216=\2623\306\274\343)*=h\222\327<=\277\230=\345(\253=\250\234\255=9\303z\275\352\277(=\313T\360<%\010(=c\3727=\363\367)>\315\2573=\316D\245<\3025i\273r\274\335\272\245|5\275e\367\242\274\232\031\264=\004C*<\215oK=\371.D\274\373f\311=\222\247\331<\317\226/<[+R=\304\031Y=.\232$=\365\200M\274.\303\272=\357\274\235=*\256\235=\241IU\274\301\017\336=Q\265\016=\204\226/=;(\225=\241T\300=\374\236\207\275\224\223\325:q\375R\274<\265\207;0\265c\274\243\031l<G9\245<\333,\035\275\312\217\357<\376K\374\274w\236y=\247\200\250\274\216\213\003\274\207iN\275\203\346\335=\356\236\346;a9\257<\017\260\244\275\235\270\236\273H\306S\272&L\3348v\037\n=Al\240=J\000\005\275\252s-=u4\007=\216\314\026<~\302\377\273r\342\006\272>\247\226\273\020\\\362\273t\226\276<\220+\306<<\304o<Fi\017>\014\336\226\274\022\022\267=\247\225\204\275M\210\201=\021\004\210\274\307\364J\275\342\252\335\275\341\306\201<O\274B>\200\021 >h\360\000>\261\000\325\273\316\233~<\246\2344\276\264\205\204=\202-\231\275\340\202\366=\2279\001\276c\311B\273\372l\266=v\2777\2744\331w\275\326T\031>\235\025\214\275\005t\017>\223R\310=T+k\275Q\214\230=\\\037\244\275\210z\277=\316N_=Uj\223\274\374yo;\227\036)\275\263\214\014=\316\336\027=\201\031N\275I\304\036=\300\212\010<\270*.:\314\340\353<\301\264;\275\301#\n\276t]\014>< 9\274\341\'+\275\267\251\027\276=\003\274<\354\\\261<\277Y\224\275@gc=\321\374 >k\244D\274\335C\237=P\270\004=i=\005\275\000!{\274\231\324\333<~\366\346\274\306M\266\2745\346\311=<\304\252<*\330\203=\220r\256<\005\rz<_\377\3209\360-\"=\307\304_=\370O\214\274\270Z\233<3\3030=/\360\246\275\201\213\276\275\231\346l\273v#\n\276D\005%>\265~\211\274G\006 =\305]\311\275An\214=\240q?=y\366\323\274`\232\210=\357\256\264=\272\353\246\274~\342\357=#\355`=\226\311\312\274\236\270\023<\230T\367;\207\356\360\274u\302\377\273y\025\270=cvB=\027\332o=\021Y\354<\001\252\272\274\026\275\020\275\022\320\303\274\311\331\262<\200\276\263\274e\320\030<\357\374\206;\022\202\025\274\265\275\352<\2545\305;\013\325M<\264\200\232=\n\0016=\022f\006=\303\330\035\275\302\243t\273i\227\320<\225~\366\274\240\363F<\212\305\364<\021\350`=\327\225$\2747\212r<\336\314u\271B\256W;\317\350\221;W\335e\274\312\031t=-\230p\274\221\354\353\271\222]:>\322\2479>\333+\370\275o\2425\272\r=[\276\223\202i=\367\330\346=F\274\224\2738\206\217=\242\371A\274\377\333\214=\006\233\204<t\371h\276\317\026\253=\014\200\316\274c\200\240\274\271\307\025;\314e\003;\030W\203\276\356E \276!?@=Bf\035\275\262s\r>>\362\301\274p\376\016>\232\314\241\275^\302\245=\3273\036>\232g\331<\212\365\224=\324l=\275\314Z\201<\312K\r>\327oC=?w\347\274/:\257\275,\315\247\274\225\377\306<*\212c\274\211\340\221<\001\251\326<\024\020I\275\341\263-\275Z\'\376=Ok\353<\\f\256=\336Ln=<w\357\274\362\027x\275p\033>\274\013.~=\230It\275\262#\200:M\337 =\006\243J=\355?\201<RTz<~9 :ae=\274\235C\254<\227D-\274\302\220\227<\371(%\275B\006p\273%\227\r>$\272y=h\002\n\275 d\324\275\344\337\352:\376~#;\247\202y\275\325\337\257=\360K\\=U^\'\275\"\\D\274\252T\351<\\6\032=\214\3020=\000Ul=\347\257L\275\"\230\254\275\\\276\347<\201\2456=}(\225\275\243\326\020\273\005?:=jDg=\202\350\037;\320!b;?\006\017<\307bI\273)\300.<5@\306\274q/\373=`\210\365\274\302\377\205\273\003?z\274\317+\255<\202\212\013\274\367-\246;\357\001r;\023\321\020=|\202\000\275V\254\260\273\\oB\275\277\337\333\273d[Y\274$\216\221;\340)\310\274D>\370\274M^\305<\236G\016\275\342\243\"<\016n\006=W\031\264\273N\025K=t\215\000=SP\033;\265\310\335\272\355#\310<\036\300(;\225pI<\343\210A;\273*\347<\215)\371\274\316\t\r\275R\216\026:\032\331\371<35\365=\214\234\022\275\002\261\334\274\353\316L\273\367\014\367=I\010)=\035;\251\275\220\264\217=\032E7\276\354vi\274\376:;>\001&\240;x{=\275*\365\205<\245_\204=\363\362\323\273\300\322<\275\324\336\253=z\t2>\006\002+=e\257\334\275nR\002>\360\201\276=\001\262\335\275\305\300j\273\322~\307\274\001\211\n=\340H7\274\250u+=\023[\354\275PC3\276\211u\263\275\204\2079\275H\342\237;\010\305\357\273`E\n=\341/\023\275?F$=\n\316\242\275\361B\270; 4\264\275\177\350,=5b\302\274\336\260\252\275\212\326!\275\232)\357\274\361#f<=\247\304\275\225\326\006=\333F!=\304\0145\274\356>\264=\220Y\'=K;l\274\221\311O\275\254E\032<\223\204Q\271\337\t.\274E\274{\274*\261\205;\024\020\010\275L&\334\275.\253\322\274\024\003I=\365\017m\275\247o\256<\307\303\224\272\300\324\\=;\321t\2757\274e=\016{\034\275;1\337;\351\361\013\275M?\336<\227\374\020\2756\255z\275\360\261\331\274Tl\231\274\360%)\273\3156;;\346\235F=\004X%=\343\215A\275:\274\355=`\377Y=\250&K=\227\207@\274\rj\347</J\277<&P\001<\267\000\276<\202:\025<:\315\377\274\200\202\220\275\236\367\364\274\024Yu=5;\"\275\337\253-\275\370\375\210;\371\210\373<\253\216\331\274H|\202\274\247b\237\274L\356\022\274t\036\035\2758\332\250=\212\267y<\250R\202\274$\247\317<\351\333\310\273\302_\022\274\226X\361\272NQ\352\274z\316t\273+:\273;\032\327\232\274h#\364\272\346\032\204<b\274\231\275)\247\210;o\265\267\274\000\321\323;\230V\000\275\303H\221\274\264\001\207:\321\315\037\272\016\014\323<,C\254<#B\273\274K\035\330=\370\312K=\336R\222\275\024\240p\274j\035\374\2733\034\236\275\014i\344\274\r\213\333\275\245E\276\275\341\014\331\274\020\025\033=Yy\330=k`\253\275\372\024\352\275\002\033\007\276d\177\216<4V[\275o\351\270\275\"l\240=A\001\352\273~T\227=\207Z\025=\347(\227=%\376\266\274\347X\326=\327@o<\031;\356=\030\322\262\274\023\302\353\275\212\201\322\274.\233\033\275u\245\273\274\242 \224\275\204A\264\273\240\211\256=\260y:\275\205\024\237\274h R<\373)\205\274s\025\264\274\021\321\">\306\020\356=q\235J\2757\260\217\273\2349I=\252\251\201\274R\373\365\2741\302\033\275\375\266\023\274a\203\005<\200\005\360\274\216\004K;\311+\233=\342\277\342\275\314\341\221\273\263\364\340\274\324\221T=\314\0066\2755\t8\274\276\3139\271e\300\3668\203\215\366<>a\020=y\340P<\037\312\307\275m\2466;\'\313L=B\330\244\27572\255\274[\3319\274E{f\275\347w\037\275_\245_\274]\r\306\274\275\3442\275\022gj<\343\252\202<\375\256\276\274\301\036\024\275?l{<tw\005\272\271]\252\274*Q/;\244\033\227\274\277\273\353=\311\336\034\276\336\236\332<\334Lb\275n\020\342\273\365\000f\275\243J&\274\257\371\025\274\005}&\275\312,6\273\'^\241=\270\021\263\274\020\321\272\274X\033=\274=\361\263\273\367\327[\274V\212\236\274Wc\233\274\353m\300\274\362\213\254=\277d\340\274U\251\354;\3539G=\231`[\273\360\312\254<O?\\\273\017\\L\274ROZ\272,\325E\275KU\024<\377F\206:\214|\001\275\0170}<\224\365F=_{\246\274q,\223\274\343\014#\275\025l\266\274\237\270\374\272\rz\342;\317dr<\376\030\265\275\210\222\251\270\332B\312=\'\370z<\252\006\210\275\332\246\307=\356z\177\275\362}`;\275^\271=\243\302\212\275\340\324\"<&\211J\275\372\245\227\2746\014\316\274\216)\274<\373rU=c\021\213\275[\311 \275\342O\202\274\022\007\375<\306\230\227=h;\304=\236\354\343<\230\371\334\275\354\324\020\276\240\\g\2735\357\247=\266\027\025=\223z\'\275\356*\n>\322\272#=\331E\241=E\330\231\274\010\344\205\275\242}\002\275\235|\\\274`\025\323\274\200\022\343\274\356`I\274\347\266\363\274a\273H\275\373\242\371\274\221v\302=X\313\243\275I,O\275~6\345=\002\312><E\005\335\274\205E\341\273\272B3\274\316?\205\274\242\333\237\275\210H\345<\227}\254\274\213\002a\275WV\005<\354\367V<\310\\\213\273D\323\217\274},\241\275\323\233\305\274\372Z::\226\341\257:\343\014\307<\371\027*\275\376@#\273\017Rl;\234u\212\275k8\253\274\325\302\230\275\304\203l\275\377\302m\275\035\347\250\275G\350\021\275T\324m=k`\353\275.\3466\274\366\350\273=X\264X<\364\217\023\275Sb@<\243\217\r\275\201\210\212\274k\244\316\275\242\337\327;\370\321d\275\206\207\222\275\272l7\2759\232|=\370\306\333\274gn;\275h\356\255\275\014\014\207\275&\326\207\272G\017\342;\222\324x=Zi\005\275\310u+\275\021\0344<\327L\350<\240|\223\274)P\210\274\022\307\272<\334\231\211\273q\363\325<\3701\242<I\245{=]\t\204\2737u\212=4;\025\274.\\\376<(\232*<\256\264\265;\272\243\266<\364Wj\274M\355t<nD\233<\351\274\023\275\273%\237\274\355\250\013\274\323\024\207=\r\314\357\274\316g\270\272\316\007\264<\000\324E\274\216\020\007\275!\376Y<\311H\301;s\217C\275\004\311\223\273\000)\023\276v\213\332<\345\246\007=\347m\026\275\3562m\275_\3575\275_\216);\277\305\020\275i\307\013=\331r\027>\215\3014\276\352\356{>\225\361\215\276\312\241n<ZA\343<\034\250\017>\032\312n\274\231q\030>\335\027\017\275\3273\326\275bD_\275\341\316f=\236BY=\256\340\323\274Us\301\275\025a\206=\257\375\262=\307\242v\274\327\327\035>\341\222\022;\334\365\256:\276\270\306\275\000\035\315\274\225?\211=\302\013\365\274k%\246\275x\214E=\"\3205\274\212 \3529*\233\006=\373H\270\267\021\252%\275\024\013\002={\322\216=\032\216\200=r\372\214=\261>X<F{\034\275B\317A\275#\261\262<\214p\255<\202e{\2759\177S\275t\003\232\274Q\243\205=g:,\275\353\231\326:\331\372L=\013\266w\274\370\337\251\275\2035\021\274cSD=^\352\301\275\341\307\037\275\004U`\274\323-\264=\244A\300\274\\z\004\276\303\347\272=`\312\006\275*\271\372\274`m\251=Vu\341<\013\0351\275\325\017{<i\236a=J~\345\271\205\252F=\304\3112=\002\037\323=\325Xz\275\274i)=\271\tb=+\003\237\275\313\013\250\274\372Ct<G\345\353=\001|P\275>\017%<\306\352_=\324\366&=\r]9\275qN\3069\343q\002\274\037\336\374\274\003p,\2758lN\274\271\231+\275\271\035\344;VF\026;\352\332\356<\325\223o\274\262\022\316\274~\362\226<\355K\327\274\304d\377;\224\323\263\274\234\237\260\273\332\016\230\274j\007\230\274\027\374\361\274bl\346\273\351$\236\274\332n\301\274\272\367(;m\325F;\0230h\274\325h\315;\371\354\022\2752\300\254<\344.X9:\036\307\274\375\311\304\274a\370\372\273\272\363\324;\273w2\274W\024\213<\365\016\261\274\r\006\026>}a\020\275\345\275h=`v\273=\001r\316<N\036r\274\347p\336=\220z\344\275\006+\013=\221\370\025>\021\341\213<\320\347\362=G\312\266<\"\377\333<C\227\010>\260\021\024\276\226\236\351\275\277\365\253=d\036\265\275\367\006\271\275\310\314\2517\352\352\246=>\224\211=\273\362\246=;\330a\274\327\000\361;\320\202R\275\371\316\210<3\210S=x&\'\275\246(\023\276\340!\363<\361\240\016=]a\006\2755\322\341\273\005\336\216<\310\264\201=WCG;\366\357\201<\251(3=|\005_=\331\177\016=\322g];\361sf=bn\000;Q&\007\275\025\372!\275\276\327\333=\022\245\004\275\252e\267;\340\307m<\247\3113;\370+\341;\261\333-<\207\315T=\246JF=>Mh<t\317\212\273\200\233\250\274\310\006\355<\032\023/=\353\260\341\273|\010r=\343\253p\274\274K\217;\346\241J\275\177\323\244;9q?<\215r\215=m\333\352<|b\206<:\322\204=8\266\223<\245\371\206\273\241Jp\275\006\240\354<9\365\t<\n\021\037\275u\277\001\275\005\353\210=\264\366\241\274U%\007\275\300\202\236<8\314\301;\017`\231\272\354$\t<\346k:=\003$d=\214\n\207<\3328\032\275~\000\327\273Qc\353<\311!-<C\261\246=` h=\367u\310\274\301\263!\274\035g\215<\035@\365\273tyj\274\tVM=\332\2004\274\370*:=\037\035\022<\241\234\270=k\333\226\275\352\304\036\273\350g5\275\301\246\346\273\324\232\261<\342P\331\273\204Y\362\274r]\310<n\376Q\274\026V\264<\3539\021<\370i\317\274\026c\324\274\233g\002=\325\242-\274\271\341\013<\330|W;\003z\330;\270\007\367\273\362@+<l\001\244<\317m^\274\257\005w\274[\3101=\014\261\372=\2326\366=\257\326\200;\030\241\270\274\215LI<5\373!=\262\273\202\275 \370\224=\321}&=!B\'\2767\246N=P\002\333\273\224\217(\275\031x\017=\366{1>)l\377\273\307\336\330=U0\301\275!N\211=\206?\227\275A{-\276\370\365`\273\010\267\363;\251!\275\275?KB>\250\356\322\275\311\n}=\246`\364\275k;\272\275\2321\027>\021O@\274a\3149\275\204F\034=:6\t\275\327\325\234\274\302\214\254=aD+\274\253\225]=\216%\271<,;\214=\352\323#\275\264\343\264\275z\230\210:\272\330*\274\210\241\204=NU?9\317\0057=\371\237\371\274\1774\354\273x\305\214;+\034\177\275S&\005\275\347\303\'\275HKw=\036#\300;\224#\275<\250\251\316;\277T}<\207V3\273!h\336<7q\253<\013JG\275z\227\350\274\020\211g\275\353#\177=W\236\303\274\370\"\016\2757\314\365=T \261\274\265\313\205<\347}\'=X8g=6u\321\275\233t\216\275\312u\313\274\004\264\026\274\262V\271;4l\272<Y\277\256<\025\345\251\274\361W\354:\241Ok=\274\034 \275\374AP\274\371\022\036\276\301&\214=\307\n6\272\346\017\010=D\267A:k ,=hn\202\274\331\336\266<\250\307\361<\310\265\020\273\203\200\211\275\345B\013\274\231H{\272gC\300<\360\017o\274k\333\205<)\367\253<\324\264\321;H\202b<\221p\266\2751\023\243\273\355\265Z\275\302c\207<.\335X\275K\2365\274\006\351\241:Z\262\261;zQ\345;\212\321\203<Jj\000;}\023\034= oY<k\\\362\273\365\002B\274g\256)=\276O\230<\230\324\274\273\355\265\\<\037\000\215<\235\310\3619I\300\275<\214\004C;\204\220\"\274\017@#\274Q\325\032=\317\326\000\275\300\257\250\275:Q\236=\356X\177=\332\247J\272C\370)\274W\355!\276\025cC>\310s\275=\342\333\220\275\004x1>m\221\272<\347L(\275\262\257\330\275\261\367\204=\022\204\263=7\253\261=\024da\274\305\354y\275\333Z(=\202i\205<\343\354\355<>\344\254\273\2014.>*\225\343=\020\207\353=\032\276\004\276\370\031\326\275@f\225<\346<\017=\204\357\367\274\323\321\220\274W\311\010=\320d~\274\013S\332:\t\020\346<\205 \207<\265\004\t<\276\272\353\275i=\260: ]\236\275\353+\323\275\204{\273\275\rK\347\274\210\355M\273\273\213\200\274\314\244D<\237\343\007=\036\034\257\274\224\203P=\377\020\344<\225\027\212\274\242\210\006\275TW\250<\026,\354<\253\210\251;d\">\273l6\335\274\003\236\004\274\357\220\r\275\335\212\324\274Y\365\247\274[/\261\275\251\375%=\274,\020=\"\"&<\241\275W=xEy=\302\322m=\014I\213=\267U\242\275\267\000>=\016\255\221\2750k~\275\2133\262\275\016\351\010=\370\271\273\2732\265\256=I0\037=\"\267\202=*\322I<GI\264=\006\016z=y\266K;-\256\273\274\001<\202=3\317\234=\237\371\365<\363\260\236=\344r\314\271K=\\\274\351\'2\275\304\013J\275\205\260\247;\272t\013\275\030O\027<\242\240\035\274\333y\225<\355\r&\2758\241F\275D\241\366\274\356}U\275\037\212\202=\031J\2649\231qf=Ka1=l\323\005:\203\226\202<pW\321<\277\032\357<-{E<|/\332<\335\266\326\274\347\035\244;2\006\250\274\001\022\306\274$o\033=\352Q\260\273\260\373\020\275\243\201i;k\272\304\272\345\232\213\274\317.\020\274\264c\200;^\214(\275\325U\036=\374\371\n\276t\023X=\211\254\230\274u\335,\276wC\324\274\370Y\247\275\005\243\026\276f\032\303=\025\255\236\275\362\025\370\275\227(2<\330\016!=\031\307\223=\247\023\331<o\371T=\265\216.=s\020)=\256?\230=\377\307\327\2751\322\343<H4N\2752\334\275<\3574\210\275\301\261\005\275\366\010\213\2734\366\310\275O\321\237=\007\363\357=\274p\216<\203^A=\325\263\250<\233xD\2766\025\276\275IS\014\274\361|3\274\"\342V<\245\277\227\275\271%\241\275A\"\211\275\303\t\227\275\365\373\216;\323\007\326\273\022\277\016<\227a\332:\030oO\274\202;,=B\022\317<\264\347\371\275\034gQ<\212\326\n\274B\250\177\275\037/K;\244r8\275z\310\335\274\207D\233\275rn\365\274(\253g\275[\036\014\274\256\355&\274\327\336\027\275\003P.\275\336\211\370\274\362\255J\274]\267|=\303\204s\275\325^\003\275\315\263\000\274\370\340@<\025c\303\275\247\270\376\275\224\206\322\275\307\324\332\275D\001\206\274\273\013\301<\000\025W=Sf]<\377\370\266\272_f\304\274\000\306\242<+\300\254\2752y\252\273>s\242\273\364\253\277\275\370)4\275\366\030\255\275\324\036,\275o\242\211\275\025n\216\275\271\246\260\275,>V\274v\202w\275\232,\\\275C(\363\273G\241\360\274\013U[\275x\255J=n<\300\274W\320\021\275,R\272;\242\355\363;X\267\000=c\254#\274\234\201\365\274a*_;|{\274=\255XN\275)/\320\274\322u\"<HC\204\2740\320\373\274\247/&\275\351\\\036\275C\350\323<\260\323d\275k\336@<y\326\030;\330\n\250\274\004\341\013\274r\223,\272\273\267\254\273\006t\201\274\242Y\203\275\3778\004\274L\210*\274\223YX<H\'\026\275\367\326\273;\013\347\247\273Q\223\004<\252K9=\323l*=;\002\345=.\302\010>}dw<\353\030\232\275~?T\2760`)=\276s\312;q\037\202\275\326Q\016\276\241\336\201=o3O\2731\247W\275-\370,\275^\214\225=E\024\003\275BI\031\276\270\262\302\275\201\016\206=7T\003\2765\222\371<\3537\345\275\021t\201=!R\026>(\257.\276\233\020c;\267\254\245<-\252p=\247N\214=uVf=+\345$<W\343\231\274>^\352\273\225\263\031=P\326+=\3253\304;\230\257\023\274\tHI\274\366\367\017>_\362\272\275\344}\312;N\036\312=nm\251=l\332\232\274\237\217\\\275T\262\201=9H\017=\305\005\211\275k\037\352<#U?;\265\341;\275\326\200\n\275}Tg=\230h\231;\t\177\247\273\374\277\252\275(r\033=\254\307\233=h\357\004=\320a\315\273\366\035\226=\367Y\232\274\2071)\274\251\211\276\275!\"b\273\352\275\020=\201\302\"=\010\372k<\333W\312\274\257\316\273;\030,\306=\365\245\212\275\360\355v<\003\027\242=\271\313\375<\364{\254\275\342O\035\275\001\276\005\274\005\344\016=\035\342\014\276\356U\r\274\264r\262\273v&\335\274\013_\236\275N\202\206=\342\032\262\274q\321\010\275\327\333\312\275lDT\275\253J\014=\262\343\244<hk\303=\326\201\275=7\222&\275Z\035\004<\344\303\200<\035j\231;\t\014\243<g\311z\274\372& <R\300q<L%<\273k-\245\275\331\336\270=s\237\004=\372j{9|\205<<r/\235\273\005\225\245<\320\240\304<\003~#<\306t[=\004+i<\201A\357\274\314\246\347<5u\021=\036\275\013\275\nW\274<:1\236<VZ9=\242Kl\274l\022\335\273\273A\232\274^w\220<\2451,<TZ\367<\331p\357\273\263\360\000\275\241\001\257\275\255\344G\276\021o[=\223\273\370\275\360T\022=rV\232=(\276\207\275W~1\276\201\024>>\257\341\233\275\031M2>\254\255\035\274Mq\027\276\211\037\302=\022\244\324<\273s\342\275\023I\276\275\274yN\275G\327^\275\340O\001>#\037\r\276 \201\314<Y\263\255=\206 \017\276>\255\325==\231\020=\326\302\333=\304\356\025\276Z\021^=\036\367\331\275WMu\275e\312\354;\243QO<\2120\356\273\356\007I\275\251\275\376\271]\245\367\274\375\265\3529\026\326\346\275\327\335\017>\250\177\235=.\272\002\276\013\3446\274\023\353\344\273\354\275\256<\321\266\377\274\212\222}\275\035\363\230=OE\374<U*D<\360+\276<[\360Y=:cr\275Ym\227\274\361\364\244<ii\310<V\037\201<k\260L\275\336v\374\274\304\263t\275\220\337\354\274\225(\331<,\274\240\274\252&o=\301\023\336<`\270\270\274\312)\241\274\341d&\273\3130\254;\334\306\002=\031\030\231\275d\203\203=]\352q=s\'\362\274\225\252k\275*\307\335=\031wI<HGr=\375V(\275\216p\357=\002\'5\273<\206>=\t\344U=\307\236\270=\234sa\275\203\251\006=4I\240<\210\227\263=\202\"\010=o\023\374\274\037\r\300\274\276\303}\275\233\234\017\275(\004[=\345\007\026=\226\360\234;sR\3419\361%\204\273\031\372\n=,\207\376<\264tE\274\330\210R=\355S\373\274\300\277\331;\367\031\221\273>\022\202\274\014\225\227\270=\205\334\274[\207\256<\232\227\207\272\023\023\355\274s)\336\273\005\255k<\000\214\016<%b\360<h\355\'<Yx&\273\035\021\253<Q\010\254;\365\030\241<\356\307];\344\241\010=\331|.\274\306\260\007\275\312\266\215=S\013&\273\205\226\234=%8\014\275\"\014\023=\3627\362=O6\274\275\330\311%>}\235\020\276\305\303\257\275o\213\024>\032\371\033>\254\337\032>:\202\017;,\364\036\275\272\037\033\275\320\005\340\274C\t\000\276\317\024\261<\320\213\243\275^R\271\275\320-\n=\3236\020=\213`\245\275\266T\221=\033\237\366\275\025\214\261=\266=\021\276\304\203r\274:OB<\364\321>\275\253\367{=\025\2606<\345\344+=37\010>\342r\007=\364\347a\274\261\326\250<c\225\206==*t==4\035=\342i\250=\344m\252=5o!=\350\001\263;\326<}<\246y\017\274\377f_\2752p\005=\310\3661=J\211\266\274\315\246\306<\304f\203=\245GM=~A\207=^\220\312<Xd\244<fU\321=\261<-<9\265A=\235\000\277<\310\201\223=3n\306\274\262\306\237=-!\344=\203(\373\273#&\007>\263I\220=@P\311\272\037\370\032=\215&\302=I\363\303=\205!O=\374\202\300=\300\364\261=\206\200s=\216\024\023\275m\246\227=r\005 \274\277\337\026\274U\331\r=6y%=U\311f\274\333\200\243<\325*\263=ZK\200=;5c=2\307>=\204B\311=\262Q\277=\235-\030=\344\3755=\210\204H=J\031\261=Z\234\002\275\201\t\274=\346\203\351=\'\030g<\275S\373<\000\216\014=Zhe\273jq\210<\376m\"<\245\342\002=x\341\315<\353\270\001=;\206\222\275\255F\010=\261\000\005=\361\247u\275\262T\223<\316\260|<\246<\200;\270\274\035=\323cM\274\024\022o=b\014\310;\227)@<\233\310;=\346\357\215;eF@\275\224\232[<Py\354<yrv=9\301\304<{]\210\272I\376\230;\"\234\250<e\213\201=\031\026\027<\314\007c\274\323P?\276T\331\245\275G\352\263\2754\266\230=>\310\016\276[\205\232\275*\262a<\315\344\007\276 -\254<\246\217>=\034\235\251=Y1.\273\327o_\274\221M\224\275\376\254\033\275U\267\272=t%\002\276\220zy<\307Bw=\253\334\236\275$\035\255=\2702\006=\221\346T=\241\276\231\275\276\221\257=\233\276\272\275{\350\272\275\315<\016\275\243<\037\276^R!\2760kW=w\344\257<\327>\032=V\306\273\274u9Z<Y\206\026<_Z4=*\356\315=\003\3062=*^\255\275o\3539>\375\026\006>\320\334\010\276\327\265n=)o\025<\230e\243<{Y\356=\302J4=\350\334\314=\271\310\261\274\000<\201<\321\340\255=\377\035\206=\330U\357\272Uk&\273\326g\370<\233\010\340=i\2349=\317Pw\275\327\223\373<\005\216\305<7f6\274\245=i\273\266/%;\n\213\271=\306\364\310\2738\365\276=\307b`=\007\234\315=\020/\347=&{\257=o\037\243\273%\177\365=vJL=\"<\374\275\205\250\321<\325\t\"=)\224\322\273\227\252,>\306\231\036=\020h\016>\303\372\203<\255&\245=}\261\370=D,\342=\315w1\275B\261\200\2739<\261=\201B\236=\036O\336=\346\0003<\000\016\243<\243}\273<\005\367\345\273\022\276.=\360\267\340\273Su\267\274\265\024\356;\227\333\354<\277\021\310\272\016`\220;\272\375B\275\310\272\206\267\366\222\361;\244\221\342<P\244\177:I\177\267<R\3748;\341\352(\2751\351\224:\316\312&\272\320\356\244;\305\270\030\274P\216\340;\036x=<\353\276;\273\227\305\r<\242\3313:\376A\331;U\357Y\274_\030\007:\211\317,\274.\017d<\313C2\274\317x\271\274\001\345&<a.\314:\036\261\313;\355a\357<U\207\365\275\3136\234\273\204\177_=\300\000\221=D\310k\275hG\325\275\274kB\275\213\356\020=\214\316\'>\344\017\321\275\353\321\006\275\270h?=\353B\376=\362R2<\241S\021=^]\213\275\366\272\217\275\347I\227\274\360u%<\371\2432=\257@\030\275;\001\014\276\2519>\274mO;\275\230\034\r\276\260x\206\275\203%\207\275yb\024>\254\240M\275=\207\360=\rJ\376<\010\363\024\275:\325#<k\374\210=\361\265U;5\325\007<\360/\266\274#@\214\272\006V\215=j\314\337=v\350\177<9B\255<R\n=<g9r\275\367\303B\274\363\336X<\3124L<\327 \200\274\310 1\273\n\233/=\273\005\347:\267\275C<@\371Y<<3\265<,\265\314\274\327\306`<\214`\003\275\220\362==r@s:Zs\003\275\267<\252=\321\014\000<\312\270g=7\004\230\275\257\227/<[\364\260=\232}*\275\254\211y<}\200\017\274h\344}\275\037\231\035=\226\312\273<\240H\025:\005\214\037=\021G\030<M/Y\275\242C\215\274\010+)\275\270\242\374<V\033T\275J\202n\274!\037:=\016\245\271\274-\202s;}+\336\274\016\364\351<3\205\036\2758\210\036\2738&:\275\273\252[=h\253(\274\212\200\304<\206{\206=\001\353\343<\250#\242\274C[6\274\023\305Y:\213_\177\274\252\263\365<\264\361\373\274\021\320\221;\217@\203\273\377\321\252\275t6\334\274\250\264\212\274l\207?\275I\321\230\274\300nU\274F\254{\274n}Z;)\236\232;\211)*<tu\3379\2364\032\274\030\333\032\275\366\211\272\273\235T*\275\014\214%\274\335\022\207\274\005\377\001<\200\214y\274\206\355\311\274\243\326\204<\210\031\321<\377v\222\274\330sx\275\310\302\031\276@c\345=K8\270\274\017\025=<m\3644=\036\377\367<\350\005\211=\024ay=S\263.\276\331\367(>5\233\206=\311\275\353\275\254\305\324\275p\342\315\275\350\327\243\275\333\3046>\335\243\002\275\204i3<\037\344\374<\351\321\214=\002\257\323\275\272\313T=:9\206<c\000\017>\372\333F\276\264\346A<\331\006q\275\243\014\260\275\367!\223\274\352\350\260\275\305J\203=\300w\206=\350\nD\275\260\305T\274*\002\002\274\0062E\275E\361S=\362\010\r\275V$C=jN\370;\233\242\367\275\211\007R\275SU\247\275\352\270F<\353$\'\274\317\302\245\275f>\335\272<\212\304=VQ\201\274\267i\375<\037\224}<K\202-\275Ox,\275E3\375;\251\251\332;\333o\355\273\207e-\274\244a\204\274\023\337r\274\226,\010\275\325~\035=L\273\024=:\272\260\274\324\036\315\275\260z\275\275Tae<l\027\025\273\350\222\203\275\254\244\317=\030\260\252\274d3\256<\366\213Z=\201]\256\275\032\204\215<E;\n\275\030\361\317\274\312\342\276<\016\'\340<\264\tP<|\316t=\336\332R\274\221}*\274\3238\014=F\030\237\274\273,\277\274@`\320\275\361\016\270\274K\216N;\260h\024<\232XW;,\316\233<\203\212\231\274]Q\246<\322\324r=\315\324S\275\305U\314\275\354+\214<\266\'M=\263m\347\273\310\351\375\274@\335\212\273e\005\270<\257}\263<\325iM<\217\311\242\275K\023\033=\277\340\235<v\203\032\274L*a\273\261X\210=\217\220c=\343\345\314<\330\365a\275YK\016=f\t\203<\262\0130\274\3610\327<W\311\'=\273x\224<sA3\273\214\322\267<\332\255J=\270\275\220;N]-<\340\362^\2743\273\013\275\224\211\332\274\375&V\274&\321\317\275\017\364h</_\031=\273\301\322\275;\217\364\275\310\236\006\273\013<)>&\352,>\016&0=\r[/\275B\254h;\233[^>\356v,=-\034\335\275\201\250y\274\301\351\330=\227\0334\275E\\.=n\372\235\275GA\336<\363H\241;\357\021\277\274D,\035<\327\007\244=\307|\r\275\013A\311=\337P\234\275n\230\225=\365\345\345\274\020\\?=\350\354e=\270\201\271=\324-1<\370\016M=\372_\244:\311\351\270\275g\354\003\274\252\220\334<w\320\321\274k\221\255<8\213\311\275\231\372\321<T<`\271\331\002\264\274\330\267y\274\317^\204=)h\210=\212q\315\275\356\027\270\275\212\022\033=\357\300\237<.\352\031\275\025\006\275<+2,=\005\023\361\274w\270\272;\314C\307<Gd\013=\300f\235;\333h\231\275J5<\275ut\336\274\333.@\275\336N\000\275\275\334@=z\313\347=\221\323\263\273\311\361\276\275\335\223\"=\324\022\223<\233\'\213\274\001\332~=\367\266c\275\354\2014\273\300\367\223\274J\235\227\273\035\3355\275%j\315=\347\247u=\302\'\327\274\001\344\313\275\256]\312=j\001\213=\312C5\275\020_\025=\032\245P=\220x\236\274\257\022\004=\205\251L=\377\037s=\245*\322<l7\201\275%vK\275|\253\220\273\315>\236\275N\245\320\273\340L\271\274\224+\010\275G8\261;\244\356\232\273\035RU\274\036\221P\275gPI\275\242E\341\274\315\342\217=\257\017\202\273m\357P\274\361\206\364<mvn\274\030\026\017=Spx:\001\366g<\364]\270\274\353N\010\275\377\"\374;\366\033\261\274\003f1\275\020\260\240;2\033\317;\372\345\341\273\337i\362\274Mt\236\274]\312\034\275\203)\343\273\242\341\304;;\332\362\274$\234\215\275\214=b;\336\232t\275\223\\\006\274:\354\244=\2452\253\274\014\356\203\275\205\207#=\321\3520;\004\023\276\274\336D\251=\246K\233\275\3609\204\274r\316\003>^\302,\275\313<\235\2755\027\277=\352\223\013\274{b\027\275\245\324\346\275\374\375\332\275e\335\001>\251*\243=\376bm=\000\002/=\242}\375\275\223\264\220\275\331\237\027>\237\303;=\036\304\007\275\317\214+>\025J\367=\314~&=\332\307\303\275\231w\354<q\315\257\274F\010\016<\232\205-\275\277\037\'\274\222\023~\275\324sL\275$q\000\275\227r\263=p\304\232\275z\245-\275\nL\013>U\346C\273\221\241D=\300\022a\273Q\370w\275\022\007\234\275c:o\275q=\302<\320\'w\275\250\342\213\275\300\345e<\242\234\350\274\001d\212;\027\2205\275\337=\263\274\351<\016\275*\022:\273\356\316\362\274\262\0133=\265l\037=\177w\014<-\023\356<0XQ\275\210\377\270;\2267\206\275e\270\025\2753K\321\275\371\325\340\275\326\277\005\275\362H\305<\2315\243\275\032\370\236\275\345\021\242=r\201^\273\344\207\033;\261\307\314<\026\312\255\275\001\353\263\275\223P\226\275\265\371\340<.\276\342\275\210\323\305\275\237\305\250\274\003E\017\275^\225l9g\027|\275\263\316 \275B\261\251\275\364\310\215;\n\355\234\274X\311\230<\021\320\310<\310\250\003\275\212\253\236<\026\t\346<\346\266\372\274&C\211;\307\236z\273%\017\016<w\027K=\\\222\270:\221V2=\306G!<\207\024\207=\000\r\t\275Ut\037=\202R>=\227\251|<v\023\226<\346U\231<\362B{<{\3364<&(\022\274w}\274\273\210!\273<\335Of=Y\005\242\274\217\007l;\246\245\005=p\260\232\273X\301\221\273}\277@<\207\267\254\274r\243s\275;\357J<p\277\343\275\215\222\'<\010\032\372=bK@\275SD\245\273\2130v\275\n\331p=\220(=<\275E\222<]{\210\274\023\235\321\275\322\235^>\313\377U=?Js\275\372t\004=\267\203\365=\220\027\213=\372\031<>T\350\257\274\263:\016>\216\330\355\275Nq\217=\005\371\025\276<\236$>u\220\323\275\003#\320<B\023\207<)\355\200\275d\353\017>\317-\373\274r+\224\275\215\366\327\275\0339P\275\003!\001=k\320\255\274\200\255\366\274P\306\231\2716?\022\274\340\031\340\273\226\222\207< \352\213\271\3258;\2758L\034<\333$\2249\316\307\315<\302\201i=\212\005\205<\321\002H\275\302\333\034<PL*\272\030\373M<\346C\336:\272\353\230\274\010\213\350<\375\255 \275\177\376\020\275\037\nv\273\372\301\341<\331\341o;\002b\037\275>\205\215;\314KI:\225\214\360\275|\236\236\273\3768\220\274\337\3312=\262\361\013\275\347b\211\275\364\276\202<\250\317\376\274\333\277\275\273g\007K\275\206\273q:\246X\370\274\024\266S=\233XG\275\204U\020=\301>\017=\200Y\375<p\314B<&\260B\274Q\350\224<\363\302\264<%\021Q\275:\001\002\272\0131.\274\343\177M<\344!\010\275\371-N\273\234\267,=-v6\274o\353\350\274\233u\222<\026v\365\274\375Q\300\275_1\344\273\212\340\340;\252\021\205;\302\211\304\274\207u\251\274P\342\013\275\263\324\251;\314\021=\274\364\r\234\274\n\227\254=\3170\031\275\241\213J;\201\272\200=,\363\321<{?D\274\306\265\270<\306\242\276\274\006\324\017\274\331\323P\275\245\034\277<\007w\002\275N\333:\274\344\3520<03\344=\007\323$\275\363\033\364\274:\303\031\275!+\177\274\0070B<\023\376\363\273\354\nY=\221\260\300\275\202yk\274 \207k>#^L>D!|\275\274\024\007\275v\022\370\275M\353\333<\322\373/=\237X\327\275\202\215Y=\302\262G\274\246W3\276\016\003\371=V\273@\276\244G\265<\214\374\005=#]5>s\033\274=%PS=-\222\271\275IR\">\375\270Y\273x\371\317\275\037P \276\306\320\016\276\247\326\356\274\344\351N=JK\267\275\203\253\325=\355}\214;(\356\0339f.\366\275\353\275\347</\020L\274q\3316<\330H\342\274\374\023d\275\366\206\202\275F\031!\273V\326\032\276\031\204\023\275oQ[=\277H+\276\302=\017\275\244\\\366=r\274\276\273N\242h=/9\200<\351?m\275\275|t\275\316(\274\275zVk=\337\322\336\273\261\021\334\274\024&\222\273V\374\234=\256\260\202\274M\'\262\274\357\332\270\274%\323\277\273\005\376\026\274\033.}\2756V\223=\177\027\t\275\035\013h\274\016\003\325<\305\232\320\274\013\357\t\275\r@\236\275\305!M\2756^7\275\236\271\013\276\240\223\243\272\364g\331<\035r\355\275\033\217\326\275\317s\001>\346\375|\275J/%;\016\324\023=\013\261.\2764\240\202\275\006Y\352\275R\272~<\346\273\335\275\253\033b\275\021\264\013\274\212\242\215=\316a\212\275m3\250\275\206\330\256\275l`\223\275\301T\013\275{E\217\274O`9<_7:\275\212\3661\275\034\036\201\275\276z~\275\203.\256<\301_~<\266\233\256\272\366O\263\275(\336\262\274\254\247\344\274\206\000\255<\210\315o\274\300\372\333\275\215\334/=\375\237t\275\237{\306\272m\265\210\275}\243\016\275\203\016\237\2739\346\355\274=\3528\274\0304\341\274@\003\210\275\312\266+\275\262\177\243\275U\0239\273E\247d\275\2522\205\275\260\366\006\275\0062\371\274b?\225\274\010H\'<@O\007=\226m4\275\301\311\001\276\366R/\275/\016\221\275\364\031@<c.:=\000\360\244\275+\232\357=\034\301\206\275\312\r\326\274!j\201=U+\001\276\310\323M\275}\334\263\275>\212y\275\276\305~\275p{\344\275\005\r\253\275\3644\235\275CN];\274?\r>\301\337\217<bF\276=\355^\256<M\3178\276\320\366\202=ZCI\273\240\341\235=\221\304\n>\021\307\315\273o\254\266<\233\0037>\211\266\000=\t\242\233\275h\371\263\275\367\236\263<\271;\356<\036\266=\274P\026\346\275\307\277\3759q\227)\275\223i<\272\216\023\360\275l\016\327\275\376_\321\274c\345K\275\033\'\320<\373\007\266\275\360HI\273\342\216,\274\236Z\257\2746\231\023\275\021\nX\275\316=\272\275t0\031\275\270\361\322\2751\346W\275\351\323x\275g\233M\275g\273T\275\267\205 \275\214\023)<a&/\275\t\353\224=\023\240\344\274\373!\302\275\264\262\r\276\347\177\234< \003w<\364\361u\275V\365&\276\232\273\020\275Z\261+\275\256\\\244\275\275\004\207\275\306\361\225\275W\341A<L\255\014\275\247\360\037\272\316\017\302\275\243$\207\275|\376\310\274?\257\220\275a\027\227\275\307\027\001\276\374\306\024\276\313\265p\275Y\367\033\276Y\020\205\275\317n\300\275O\255\302\275\217\243o\275\213\212n\275\205\241g\274\336Jo\275=\336\014=q\300U\275\340[\033<\210l\215\273\024y\304;\370i\231\274.#\021=\352\003\324\273)\265\013=\222~\233\272\3757\251\274\237\265{\2756W-\275<\334\252<\252A\006\275[&<\275\340\252\212\274_\005\334\274\274\024\000\2737\266\000\275\024\304\206;\377R\302<Q\315\201\274\013\375@\272\027\332\265<\370\324b\273\306Q\202<?\277/\274\025KK<3*V\272\023\026\332;(r\225\274=+[\274v\267\354\274\362LC=\331\307\233=7\246o=F?\204=pS\250=\236\305\307<MH\026\276\350W\354\275\234W\"<2\017\371=4\342\305=\270\373\305<\\\031\002\276\'\n\201\275\222\246\245=\360x\210<!\\\362=U \021>\350\365\323=w\356\023>\233\357\364<L\306\314\275\360\354\347\275\201F\t\276\216\022z=\005\356O\275\330\313$\276R\3136>\016\241\331\275\034\361\245\274\322\373\363;d\003\026\275\362\221D<\226\363C\273\226\302\352\274\005\241\324\274E\273\215=\260\363\273\2713\327\037=\226IK\274\026\261\343;\"\\Y\275\342B\013\275\336c\345<\030\'\007\274JU\313<\375h\264\273\322xo=W\265\010\274\364m\355\274\274\331\205\274\3740/\273\363\224U\274\212\315\221\275mCN=\0078i<\024\325V<\376\226\232\275\'_\305<\231\023\227<>\370\243<\353\017\334\273#\231U=\002\031\022\275.-\260;%\232\035\274T\021\210<0\004\013\275\206\267\220=R\263\201<V\027(<wW\020<\210\026q;\246\333\201\275\003\035\361\275\255d+=\347\211\352\274D\347\'<\031R\226\274\326\316\027\274G\207p;\354\236\237\275\"\231\031<\246\261\231\273\343\026\200\274\332n\001=\010,\204=6`\357\272\256\006\247<\376 \221\2754\341\007\272\246\202\260<\t\013\256;\322\211\234<\254\264X=\324\203\267\275"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "\233\005\021=\3346?<^I\002=!\177&=\334\265o=\306\220-9?#\217;\025\333j=\2023\232\274\265>\260=\255a\213=\257t\225\274,n\033=\341\272>\274\375\330p<c\0100=\331\236\350\274\035\360>=\374\335q<\320\025~<\201.\241<\302\337\225\273K\363A\275W_\230=\034 +;\032\230B={m\364<\007\317\203<\325\001\214\273#\0366;\365\357\263=\213?#<\320\362G\275q\341K\274\356x\343;\254\213\203<\306\377<:\331?\345\273\026\237\034=*T\214\274\033\2211<j\346\301<\270\366A=\254\204\262\274\260)\233\274\342,\224\274\321f\020\274\335\310\031<\236\361\3629\"\326\024\274\034\341\321\2737\"\302;\303yc<\243\005\366;\001*\260\272\271h\257;\234\236\017\271\002\305\375:i\313><h\374p<\315\003!\274\214\372\370\274\343\'\003\273\n\346^=\025\366\322=\306\255V=\032c\n=QI\313=Q_\346=Q\343\322<.\213\177=[\306\237=\274\247\311=%H\022>.\360#>\244A\240=\033M\231=*\261O\274{c\227<\306\020X>\210\n\000\274\306\326\340=<\213e=\327\341\370<fG5=d\362\007=f4\221=\243a\n>\370c\272<9\240\242=\035\261`=\360\033\235=\220G\277<\212\307\246= w9>+M\371<\234\354\350=%\223\247=\356\256@=a\207\302=\237\034\001>\2721.=m\351\212=\251og=o\000\025>\367\331\315=\253T\327=\035M\242=\007\tX=\211\307\243<Oa\204<\237\3456>\022\300\342;\331T\033>/b\271=\337\346\231=j\377[=tH|=<\315j=\2547\024>MC\014=\274\177\223=\025q\321=\024\346\233=\021\222-\2748\222\347=%N\036>\306:\203="
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:1"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:2"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_1/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_1/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:3"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_2/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_2/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:4"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_3/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_3/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:5"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_4/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_4/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:6"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_5/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_5/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:7"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_6/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_6/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:8"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_7/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_7/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:9"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_8/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_8/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:10"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_9/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_9/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:11"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_10/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_10/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:12"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_11/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_11/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:13"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_12/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_12/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:14"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_13/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_13/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:15"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_14/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_14/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:16"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_15/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_15/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:17"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_16/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_16/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:18"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_17/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_17/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:19"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_18/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_18/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:20"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_19/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_19/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:21"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_20/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_20/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:22"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_21/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_21/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:23"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_22/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_22/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:24"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_23/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_23/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:25"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_24/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_24/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:26"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_25/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_25/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:27"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_26/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_26/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:28"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_27/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_27/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:29"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_28/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_28/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:30"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_29/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_29/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:31"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_30/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_30/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:32"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_31/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_31/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:33"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_32/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_32/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:34"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_33/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_33/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:35"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_34/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_34/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:36"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_35/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_35/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:37"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_36/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_36/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:38"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_37/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_37/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:39"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_38/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_38/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:40"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_39/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_39/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:41"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_40/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_40/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:42"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_41/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_41/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:43"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_42/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_42/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:44"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_43/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_43/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:45"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_44/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_44/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:46"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_45/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_45/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:47"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_46/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_46/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:48"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_47/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_47/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:49"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_48/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_48/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:50"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_49/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_49/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:51"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_50/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_50/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:52"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_51/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_51/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:53"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_52/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_52/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:54"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_53/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_53/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:55"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_54/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_54/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:56"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_55/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_55/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:57"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_56/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_56/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:58"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_57/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_57/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:59"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_58/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_58/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:60"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_59/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_59/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:61"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_60/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_60/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:62"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_61/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_61/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:63"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_62/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_62/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:64"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_63/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_63/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:65"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_64/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_64/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:66"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_65/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_65/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:67"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_66/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_66/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:68"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_67/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_67/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:69"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_68/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_68/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:70"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_69/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_69/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:71"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_70/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_70/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:72"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_71/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_71/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:73"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_72/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_72/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:74"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_73/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_73/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:75"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_74/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_74/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:76"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_75/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_75/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:77"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_76/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_76/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:78"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_77/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_77/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:79"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_78/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_78/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:80"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_79/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_79/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:81"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_80/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_80/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:82"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_81/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_81/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:83"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_82/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_82/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:84"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_83/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_83/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:85"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_84/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_84/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:86"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_85/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_85/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:87"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_86/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_86/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:88"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_87/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_87/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:89"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_88/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_88/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:90"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_89/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_89/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:91"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_90/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_90/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:92"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_91/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_91/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:93"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_92/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_92/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:94"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_93/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_93/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:95"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_94/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_94/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:96"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_95/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_95/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:97"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_96/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_96/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:98"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_97/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_97/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:99"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_98/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_98/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:100"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_99/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_99/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:101"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_100/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_100/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:102"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_101/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_101/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:103"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_102/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_102/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:104"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_103/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_103/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:105"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_104/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_104/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:106"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_105/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_105/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:107"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_106/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_106/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:108"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_107/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_107/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:109"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_108/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_108/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:110"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_109/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_109/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:111"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_110/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_110/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:112"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_111/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_111/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:113"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_112/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_112/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:114"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_113/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_113/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:115"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_114/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_114/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:116"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_115/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_115/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:117"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_116/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_116/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:118"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_117/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_117/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:119"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_118/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_118/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:120"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_119/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_119/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:121"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_120/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_120/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:122"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_121/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_121/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:123"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_122/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_122/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:124"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_123/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_123/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:125"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_124/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_124/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:126"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_125/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_125/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:127"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_126/cell_0/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/multi_rnn_cell_127/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/split:2"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell_126/cell_1/basic_lstm_cell/add_1"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/mul"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w_out"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 6
          }
        }
        tensor_content: "s\304v>\302\177\t\276\264\321}?\377\235X\277m1A\277\362I<\276\253\251\211\276\365\304\244\276!/G>\320\313I\275\304\211\320\276\333\254(?\3009g\275\345\233q\2760\210m\275\000\236>>.\355\017\2764X\331=\331b>?\226\033\027?\262!4\273\251g\207\276\035 i\277\271V\325\275Q\275`?%\202\202?m\261\324\275\\\300\371>;\377F<\303\024\014\2778\030\213?TW\250\273d%v>\317*\032>\216~\001=\366\202\375\275\234\000\210\277\304l\270>c\362\021\277So\232=d\370(\277\000|\301=qR\t>\276\355\244\276\206\003*\276\014\344\010?\200\334\003>\010mI?QFp\2774\325\234\275yO\374>\363\\c?_\353\362>\005\363\242\276&z\000\275\035\334G?\245\233\264>\377\022\244>\254\035\313\277\037!\335>nC[=\233\325\302\276\361\315\242<\206\212\013?\274!\030\27632\252=\016J\230\276\261\251\t\277\276\263\037?\250\301\253>,\350\236\275A\'\273\275\311\031\270><u\272\276\205\277\374\276\3645$\276\027\207q?\337H\363=\350\274\004<A\215,\274\243\351\220\275\375|\310?[I\'\277\240]\345\276{\0028>\306\t\230=\0316\031?\334\256\226;\314\242\304\276M\354X\276\345S\002\277~#\'?\304p\260>\345\366\003\277)\372\343\275\205[=?sX|>\026c\360>9\340\351\276\370\222\216\274.\252V\277\335\303\333\275\323\265\371<`\0006>\354s\364\274e*\033\277\000C\367\276\000i-?\243\331\355<#\344N\276hB5\277\374}p>\232\264w\276cn\007?\341\302W\277\241/(?K\351\377<\272\316\207\276\037T7?\n\2101\276q\2226?2\225]>x\030\315>0\006\220\275U\236\306\275\3106\247\276\035\324\212\276e}\332\2757\245\240\276\323 \302?\320fW\277\271\233\354=\264f\360>\025\204\036\277\024l\262>Q*\346\275\036\265\002\277\230\213P>\030\350\343=H\245\265\276\355`4\277\257\305\321>\230\301,\276\324\257\273>s\035\314>\340\307\357\275\204\355\331\274\352\332\320>\247s\275\2763h\n\277\212=1\275\330Y\210><V\320\275\002\231\271\275\007\230h\277\253|\307>meq\276\375\371@\277\244\024L=\204X\250>\345\335c\276v)\335>\210\251W\276\257\032\027?H\367\004?_\211f<\302P\250\276\3059\222\274\016\216\207>\355\r\330=\010\270\220>\244\333\374=\354\'-<\212\260.>\351K\327\276\260\325\217\276|\017\031?\341\323o\275\321\216\223\276\321\315\232\2761\t4:\354\346\230?d~\'\277\225\302\202\276\372\305A\277?\301\000\276Ph;=x\027\350\276\266\027n\275\267\335\263\2771\031\236\277\031\265\264\275"
      }
    }
  }
}
node {
  name: "w_out/read"
  op: "Identity"
  input: "w_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_out"
      }
    }
  }
}
node {
  name: "b_out"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "m\260b\275\'\267\247?\2219(?)\266@\277\360\232\244?\rQ\220\276"
      }
    }
  }
}
node {
  name: "b_out/read"
  op: "Identity"
  input: "b_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@b_out"
      }
    }
  }
}
node {
  name: "output/MatMul"
  op: "MatMul"
  input: "rnn/multi_rnn_cell_127/cell_1/basic_lstm_cell/mul_2"
  input: "w_out/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "output"
  op: "BiasAdd"
  input: "output/MatMul"
  input: "b_out/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "L2Loss"
  op: "L2Loss"
  input: "w_in/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "add_1"
  op: "Add"
  input: "add_1/x"
  input: "L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_1"
  op: "L2Loss"
  input: "b_in/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_2"
  op: "Add"
  input: "add_1"
  input: "L2Loss_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_2"
  op: "L2Loss"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_3"
  op: "Add"
  input: "add_2"
  input: "L2Loss_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_3"
  op: "L2Loss"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_4"
  op: "Add"
  input: "add_3"
  input: "L2Loss_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_4"
  op: "L2Loss"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_5"
  op: "Add"
  input: "add_4"
  input: "L2Loss_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_5"
  op: "L2Loss"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_6"
  op: "Add"
  input: "add_5"
  input: "L2Loss_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_6"
  op: "L2Loss"
  input: "w_out/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_7"
  op: "Add"
  input: "add_6"
  input: "L2Loss_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_7"
  op: "L2Loss"
  input: "b_out/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_8"
  op: "Add"
  input: "add_7"
  input: "L2Loss_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00150000001304
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "mul/x"
  input: "add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Shape_1"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sub"
  op: "Sub"
  input: "Rank_1"
  input: "Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Slice/begin"
  op: "Pack"
  input: "Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Slice"
  op: "Slice"
  input: "Shape_1"
  input: "Slice/begin"
  input: "Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "concat/values_0"
  input: "Slice"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "output"
  input: "concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Shape_2"
  op: "Shape"
  input: "label"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sub_1"
  op: "Sub"
  input: "Rank_2"
  input: "Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Slice_1/begin"
  op: "Pack"
  input: "Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Slice_1"
  op: "Slice"
  input: "Shape_2"
  input: "Slice_1/begin"
  input: "Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "concat_1/values_0"
  input: "Slice_1"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "label"
  input: "concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "Reshape"
  input: "Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sub_2"
  op: "Sub"
  input: "Rank"
  input: "Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Slice_2/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Slice_2/size"
  op: "Pack"
  input: "Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Slice_2"
  op: "Slice"
  input: "Shape"
  input: "Slice_2/begin"
  input: "Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_2"
  op: "Reshape"
  input: "cross_entropy"
  input: "Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "reduce_mean"
  op: "Mean"
  input: "Reshape_2"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cost"
  op: "Add"
  input: "reduce_mean"
  input: "mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "output"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax_1"
  op: "ArgMax"
  input: "label"
  input: "ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "is_correct"
  op: "Equal"
  input: "ArgMax"
  input: "ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Cast_1"
  op: "Cast"
  input: "is_correct"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "accuracy"
  op: "Mean"
  input: "Cast_1"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
