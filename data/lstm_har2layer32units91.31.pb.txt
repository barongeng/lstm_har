node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "input"
  input: "transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\t\000\000\000"
      }
    }
  }
}
node {
  name: "reshape"
  op: "Reshape"
  input: "transpose"
  input: "reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "w_in"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 9
          }
          dim {
            size: 32
          }
        }
        tensor_content: "\300\0077\275\321\021\221\276:\363\356\275\230M\262\275\253;o\276=r\010\277\371\352\262>\"Ai\277\276\301\226=\243\306~\277\300\t]\276\032R\211\275\234 ;>\036\376\023?\334\273\220\275\366\315T\275\253\324\305=x@%>\3605s<m\200V\276\303x\"\276\177/\351\276\373QH>z\277\210\276j\256y\274\2267\245\276\343\020M>\022\267\375=t\251]>\002N\202?1;\017\274\372\224\345>\201\376e<\356\226\324<R\265\354\275\352\202]=\373\372&>\202\202J>\215\006{\276NeC>\315\361\320\275\376;A>\233Wj=;.c\2751a3\275\216J\022\276\364:\221=\302\207>=\373\200\214\274\035\347\322\273\314\035\276=\375G\023\274\342\035R\274\020Pm>X\020M<V\216~\273\242\'\347;\315\361\037\275\341\274\351\275)t\313\274,\014w\274\rIL<i\316j<i{\371<\034\245\273\274A\201/=\"\3426\275\353)\023>\372\357\202>\241\355\037\276\026\214\317\275E`\336\274\332\213\202=~\214\204=\307\362Y=#c\010\276\366G\371\275\354R\205\275Zq\n>#J\245=iS\335=\010\333\032\274\316\364q=\240\254\021\276\020nn\276\225\004\023<\316x\251\274\311\022b<_\354c\274<\275\r<k7\013\276\034)\276<\357\023\327<L\262\215\275\344I\025>\007\005%\276\361\204\010\277\214\203/\277z!X?yS\005\277\225A.\276\331q:>\315V!\276\033\366\321\276\367\270#>O\010=?S3\254=H0\336>e\246\366\276\373R\334>\314\355(\276co\023\276\242\376^>\004/\246>\265w\017?+\t\310>H\360\274\276%\205\311=\266l\027\277-\263\216\277Jr\004\274\221\276\304\276%\366\351\275y{*\276\"\352}\275\277N:>\251\207\344==w7?\316\322\220>\'\312*\277M\272\t\275E\342\374=\217\314\337>\r\033\177>\367\341\024=U.\212\277kI\303=\326$v<IC??\373\253\260>\306\376:\277\240\345\005>\315h?\276\225\335\322\275-`R\276k\004\211\274\256\206\207=\314h\346>I\010\\\276\n\321\312>8\211E\276p\332\203>\313\212\306\274G\220w?R\314\371\274\"\271\304=\177HN\276\365\035m\277\237\007R\277\337\014Y=\210\212\026\276m9\215>\227fK\276\271\243c>\031\321A?\257)\201\276\004\302\244\276:\310\332\275\036n?>\020[\323\276\3112\242>\002\205c>\277F\376\2753\274\021\276\322@\225>\337w\277>\341Q\221>\203\316\310\275\207\242\032>\033\275\370:\251\003\327\276K\372\334=l\007\252\274\177<R>m\332U\274\332V\363=\212V4\276\263\371\220\2754{\234\274\256\323\036?\303m\340>\251\213\370\276\335\177\214?\272\243\035\277\357\361\341=\215\304^=\245\357\350\275\2471\336\276^Q\037?\335\276~\277\372u\270?\232\t%\277\342uC\275\016\024U9\036\231\314\276 \031N?EQ\250\276\216\005\315=\311\020\214?K\362\334?\r\326&\275\2139N\276\016\240Y\277\230\032\244?2\376\007\276\266\251\265\276\325\247\302\276\213\222[=\301\032\270?\234\030\246\276E\273\t?y\005\260>\306\317m\277L\347\002@\361\2266?+\322!\275\247\301\177\2755]\210\276\n9=\276\316z\344\276\335\263\235\276\'\302\237>\234\343\312\276)g\256>8\226\343<s\322\215\276\244>F>\314\367\266\277\314\362\202\276Y\177\377>\025\305\217>\322\254\306>\342dh>\364\033\027\277\033\007}\276\376\034&>g\350\366\277_\345\273\275>\311V>z\022\031>\250\'\r?\006X\327\277~\233\034\276\367\3453>\324\312\216\277\0131G\277(\224\217?n\215\302\275=\370\233<\342\315\272\276\n\264\237?\270\021\207\277f\027i\276/\344\263\2769\205\014?\2274Z?\357y\220>\3301\372\275(\357\220\276\026Z\020?\013\016M?\275\336N?\254\035l>\225\241\'?\325)\355>\262\342:\277P\022\251\276+\246\221>`a\364>\231\373\262\275\373-\343>\311o\210?>\014\032\276\370v\033>\374\377\232=]W\321>\347\373\246\276\3720\246?"
      }
    }
  }
}
node {
  name: "b_in"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "\260\225K\277\014\003\n?&\010\351\276p\216\321?.<\221?\237n\327?;k$\277\204\356\214?Q%n\272\237\344\207?\022\256\324?\337\244s\275\010\002\n@4G\003?\\\215\217?\001(4>4\343\261>l\014\224?\373\262\002?\251\347\344>-d\023@\265e8>\375!T>\324\017\322\276\264D\215>_7\014@Pe\322?\033\2346@\256\351\275?W\301\241\276 \372\365?\201Q\245\277"
      }
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "reshape"
  input: "w_in"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "MatMul"
  input: "b_in"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "relu"
  op: "Relu"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split"
  op: "Split"
  input: "split/split_dim"
  input: "relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 128
    }
  }
}
node {
  name: "rnn/Shape"
  op: "Shape"
  input: "split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice"
  op: "StridedSlice"
  input: "rnn/Shape"
  input: "rnn/strided_slice/stack"
  input: "rnn/strided_slice/stack_1"
  input: "rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack"
  op: "Pack"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1"
  op: "Pack"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack"
  op: "Pack"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1"
  op: "Pack"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "*\276f;\330V\3349^E\342\272\\_\"\275L\321\256\274\327M\311<\264^U\2740T\314<s\332\214\271\014\023\264\272~l7\274\235A\327\275\213D\226;;`\021\274\030\371\023:1\313;=;S\227=*\210\247;H\330\207;|\266\273=_\214\302\273O\366\312\273#\376\315<\020\321%\274=\020\374\274l5\004\274\010\261\362\272\271\014\234\274\310/\311;\343s\232\273\335\247\217;\314\354\020\276\266-\341;}\350=\275\307\207T9\275\235%<\210?\235\275\226\317-\275J\262q\273\234\2439\276\234A!\274\001\006\234\276\315Q\034;\027*\300\275\317\272\377\273\364%\355\275a\323\006\275q@r=\346\337&\274\010\224\204=\277\217z\273\246\343\205\273\010\247+=t9\350<\034\264\344\275mY\225\275-P\212<\247\333\236\276\326\351\345\274\212\343/\276f\254\006>&\206b\274\270T\033>*.T\276\n6\254;\240\222\205=\337\200\303\271\306\203\352<j)m\275\334\302\274<]:\326\274\033\236\377\275\272\235\236\271\244\361\233=\003%\206\274\"ce;\333\370\343;\244\316\226\274\305\361J;\017\210\035>\201*\351=\204\230\n=\376t\305:4\214\254=\031\223\347\275\024\261m\275\014X3=\333\334\345\273\252\017\273\274C\253\305\274G\344\210\273\366\374-\275\367y{<|\035\253\273\251\035\215<\327\3152\275\226\252><\270*\355<e^\240\274\344\010\'<\343\030?\275\201\033L;/-\331\274\265\021\264<\317d\270\272j`r=\262~\243\275I}\215=\235\272\016>\210\224\273\274\340\216\032\274\177\237%=$\263?=\371\007\234<\225\213$<\230\307\022=hd\253\275r\251\341\274\354\317(>\"N\027\272\326\232g\274\2360\300\274\352\242\315;M\331\276\274\000\201B=\205y\246\273<\312\225\275\310\036V;\323\035\2279[[\305;X\271\037;\025\204\031\274\314\244_\274\2708$=!\t\354<YI\017<\nY\010:1=\337\273p\253l;\206\374@<\356u\017:f\304S<R\254\220\273<%\222;\330\223\032\275\252n\036=\211(T\273\347\241\"\275\224]\246<U]y\274l\300\371:\277\316\264;\307v\214\273@\263\222\274\325\013\277;[\324o<\023\264\234;\312D\354:\315D\3209C\377\274=\003\375\262:\016\3175=\303\311_;\362\271\342<\230Nw=\003\233.\276\\eJ<2\270\332<\376Fj<\312\204\262<\177\276\262\273N\033\323=30T\273\311\275[\275\270S\231\274@\255 \276\034\tE\275\346o\324\276\020\306\207;\025\000p\274_\254s>\271\371\205\275*\337\214\272s\236/=\271\210\234\275\024\364\237=\356\215\357\273\256\2220=\327\255*;\257N\321;\217\250v\274\373\257\253\276\263r0:\346>\264;z:l;`z\025\274\223p\n=\353[)\274U\353\301<{\200\030<U\344\014\272\005T\315\275l \272;\201\340\262;\r7\314:\271u\t=8f\226\274\311\375\314\274\276\335B\27544<<\251\025+\273?\003\227=9ZC\2751\376\014;z\353\225;\326\346\n<\220\002\321\273\235f\312\274I\352t;\265\230*=\231n\252<\367\243\354:\005J\324;\317h\316<$*[;\302\277o=\3168\313<\307P\313<\032$\235<\346\t\202<\234\324M=\262%\262<\224,\002:\221\201\341\274\321\300l;\217\\\250<\241\317(\274\347]E=\36206\274w\242l;\277\017\344\274AU\232\273\202a[\273\250\023\362<\300\273\347<a\215\225\274&\2202\272L\206\001<\230\217\001\27419\256\274k\206\272<\241a\303<\026\366{\274@\347\317:X\256p\274\210\027\255<\326G\221\2721\346v;\335\216\000;\312@\230\2748A\376:\220\236\217:R\331\367;\243\035^\275\010\211\223\271\364Q\345;,\025w:\355\211\223\273\031\222\250\272\006\200\035\271\226\364\214\272\026\220\274;q\366\356\273\213G\207;\372\204\255\271\230JE=\036\177R;\263f*;\305rT\272l/P\273\346)\214;N\256k;d\213k;x\303\313;\222\336\3507H\373\3669u\331\'\271H\247o;>\"\237\272\310:f<\346\205\024;-\357\\\275s@s\275 %\\>\3011\346:\323\023\373=\253!H\273\303\361\346<\245\002\257\272\316\335B\276\350sm:\207\216\001=\327\303\345;\030\006v\275J\242e\273\324n\314=L\311\014\273\274<Z>\\\257\200=\336\007\276\275H,\020\273y\226\201;!\205\234<\204\254\331<\310\320^;R\352\323<\025\332A;\033\016\022;\310|-\272#\376\021\276\234\035\306\272\234\241\026\274\362\206n;\367\320\337<\335\033\035\273\030\273&=\007q\341;\331!j=\323\026\372\271/:B\273\202\206\311:\201\371\277\274\n\342\355\270f\004\001\273\230 .\273L.\201\274\004R\303\273\004\225\035<8\013l\271\301\353\232\274q7L<\324\257y<\"%\342\270\236A*\273$\221q;s\216\177;\331(\207;Z\344L<>b\'\270^\253Y:\236Pk\270\206\250\206\271\352\233\277\272\277+O\273\236\235\223<\017\355\013<!YO\273\373\307\207;\267~\261;\265k\207<\275P\031\272P\244\027<\302@\350:\000\307\202:_#\037<\346\345\310\2721\267\000\273\330[\251;<\345\211\273\366]!\273\232\202\016\272K\214\252\272\242\216e<W\352\006\274\365mI\273\016z\010\273\025!\227;\322 \323:\334\032\357\272\223\373V<-}\001<0w\3368?\317=<fY\312;z\200\003<^\324V<\2116\326<\245\2726\276yW\314<\362\212\313=\\\330u\274\351)\022\276\346@\205\274\007\243\301=z\231\211=\314\t\366=\203\371\224<\363D\010=\373\230)\274a\303\277=G\300\371\275Mj?\273\354\341,9\220\315-=s\376\234=J\214\234\274U\301\274<w/m\275p\315\n\275\023\263r\274\245\261\014<f\360\006=\354\242C=\2558\355\274\343\227\371<\rH\201\275EdY=uA\n>@\327o=\034kZ\275\226\372\252=\364\265\017\276.\202\221<\227\223\033\276\033\235\207\275Kw\004\276\310\230[\275\n5.>\204\350\340\274\335T\007;,[\264\275-yF<\037J\302=\243uc\275w\263\214\273l|\370\275\021\351\004>\315\363\362\27537\032\276$\223\000=\351\220\375<\261\327\263\274\365\355\254=\r\tY=\036Q\340\275\200\201m\275\2133s=\211\223\016>\233\2231<!t\243\272\336\327\025=\271{\\>\244S\347=bf4\275\230p\032\275h\342o=;=\365\273`q5\273~\3262=\336<\'>\001\335\327<FU3\274\026\230+=\370s\255\2759\271H=\324\273\231\274\037B\203\275\261\230\013\273\310\354\025>\000\207H<\336jY=hj/\275:G{\275s{\312\275nZ\017=)~\324\274\351n\262=\264n\200\274*\337V=\246?\372=hE=\275\235\227\215\275\372\221H=\213\275\264=9\257\234=\2226\326=\0102\227=G\245w=D\177\375\274\017\010\314=HE\201=\021\343\373=;\214[\275\335\346\355\274W\344\301\274\014b\353=\371\212\262\275\177\202<<l\301\327\274\337\320\323=\036\3308>\252\252\220<\227\222\356\275@i\274:K}N\274\317.\345<\206\217\242\2740\211\350=]\336\273=\227M\200\274\313hw\275h \326=\301\254\217;q\037z=\246\305G<l\270\002\276/_\300=#5\344\275\254\374\021=\343\260 =\2572\306\2734(\252<\214\024n<\tn\232=\256\354+<\013\"\017=\206G\023=&\204\322\2756\216\353\274\362X#<\264\2164;\262\343\032>\263\0200=+Y4\274S\247*=\352CM\274\362\t\237\275\014\237\307<u8A<@\213\214;#c\353<\270\203\023\274EX}<\256-{\276\027\344><L\363\031\274|\023\327<\225\304P>JZ\006>~\261\243<\001\361\254<\233(\306=\323/\232<.\212\340\275\037!\276\273\347\372\027\276%\252\265\274:V9\276\266\302\360<\016\253\017>W\205\177\275M=\003\276\025RO<\330\217U\2768\"\213>\022R\021\276\326\002\367\275\246\027\302=\324_\"=@\037\342\275\366\315\203\275\334f\025\276\017\333\317\275 \267\353\274\036\021y\275C%\371=\213\262\262;)\266\251;\251\037\202<h\216\204=%\310\241=\315\366\244\274\005\002\002<\006\263N=-<\017\274a\254w\273u\236o\275\360\217\340=\277^\223<\272\n#=Yg\300\2752\205*\275\322|\305\274&\030j<\022\022\351\273\312\017\023>)\277\243=\223\261o\276\316e\215=\307E\217<\247\031\345\274\332\377\304<~\274C<\032i\262<\tm\227=\202\036\370\273z\3201=*\360\263=\3776y\275\354\203\366=\000\351;\275\335&:=\177B\024=<\252Q=b\260\004\275}D\257<D]e<d\352\014>\347\007\215\275\247&\303=+\375\317<!u4=\353\300\336\273\335c\271=\3767:\275{=1=\316;p\273\317\266z=]\'4\274\20116\274\214\216\t>a\337\241<\274\005\207\274\376r\326\275\025[%\275\r\243R;\301D\300=\226s\322\273\352\004\037\276R\2260=\235\215\315;\327\252\205\274\271\035\244<T\265\016=j\037Y=\250m\240\274[\362\341\275N\252\\\276iFo\2745\350O;\030\241\245\274Z\2725>8A\200<\306+\267<h3\r=j\366\004\275\315(\025\276v\306\306\275\267\032\216\275\251\027\207\275\001\314\301=[|;\274\010\257\354;\317\2171\275*\355\211<\037d<\275v%\331;E$\013=e\0279=\376b\031\274\203p\275<\3466\242<\252\374\027=\025\2426\275\310\211\267<au\366=;\315\274\275Z\373\n>\205\034d=\224\240\307\275Z\024u=\253\251U>K\225\001\275az\"\276\201\214\274\274\234\367\356\271\322\202\271=O\217\014\276\242\021\001<p\024\220\274k\224$<\003=\\>\031\264@=v\300t=ah\224\275\025Y\252\275^\214\005\276\275\351\016>_\017\252<x\370k\275 F\250<\221\0106=\257\007\265\274\025P\246\275c5\373;q8\212\2758\240\323<\017,)>t\253\232\275\037\256+>\206\022\355\275\370\'T;\257E*\274\016\024\231\275x\224J\274\270\204(>\364\341\257<\303%\201\272mh\323\275\257\252\302\274\301j\212=8M\245=/\275:\275\204w\t>\334\2172>\250:f=,\270\256<t\301\362\274\233\242\032\275[\t\302\275\210\031~<F3\255<\037%\275=\343\006o\274N( =\215v\001>\234]\006\276\236\300\254=V\255\221=B.\276=\023\247S=\022\177\224=\371\217\245\273U~\204\275\215\370\200<O \t\275|6\220=\001J\363=FH\341\275\004\'X\274IB;=\221\217\010>\007\253m\275\225\270g=\021\310\277\275&\354i<\336^\214>\373\230\331\275\211\314\345\275\231\256\207\274\027I\372<\234}\256<\253A\302<F\300\233=Ke\206\274\314\032U\274\222_e=\023p>=\\\350\205\272\245\017\005\274\2775\254;\366\360\252\275\001G\r\275]\250X<\327\233\357<\352\260\270\275\271_K\273t\"\236;\376\365\203:\240\010M\273F\013\355\271\276E\322;p\377\033\274\241\336\021=B\202\365\274O7\315:\312\034I\273\217\013\253\273\237e\036\274\023\200\005\273\021\365\240\267\240\367\337\273nG1\274\243\024P;\2702\027<\230\204\334<:\t\272\272\374j\220:\233sM\2713\251\244<H\n\2679\200p\347=I\207\206;\265\206U\276\360\346\201\275\236\277\224\275\270\244\375;ZJ\304\274S\2506\273\221i%>)\363\261\272#P7>\n~P\271\341\232\036=\251@\031=\226\204\233\276\003s\255\2734\\\303\276\025\265\016;\313\3625<\035\220,\276\031\326\206\275,Z\301\272\"\233\235\274F\232\240\274\003\341\243=\006\035&:w\356\001>\257\312J<L!\263;a\221\342\270\2131\211\276\325<\320\272\353\266\030\274*\370\262;N\376\304=\202Io\275P\326\006\276Q\\\277<\225\203\223=\023*\311\272\346HC\275\326!#;o\246\"\274\350\351j\272\207M\000\273:\031\206\274\322\'W\275{\006\306\274\350\367#\273\027n\336\272\255,\203\275\371\027=\275\016\237\253\273\204\216i8\371\027\256\273\236 \r\274\3579j:;\265\334;g\311\3719\360\35389/\316?:\026\t\204\267\331\352\262<&\221\213\273\265\341\242\274~\024\024=\202y\027<\r2\363\274tJY\274\353\261\374<*nS<\354\272\216\272\037R\317\274\tp]\274\017Z\251\272\336l\244\273\237\230\305;\264o\220\274\247I\332;X\350\001\274i\232-<K\347\217\273\374\353\351\272\313\302\251<eZ\002\274=\004\261;T\260\253\273\216\025\276\273\346\240\250\271\"\210\020\274\t\377\344<=\226\214\274\232\325\0009X\220W=\373=v<J\231\n;#\004N<\262\'\257;L\350\322=a\366\246\275\375G\222=`iz=\240W,\276\230\250\347\267\256\360#\274q\004\';\265\202\325\274@\330_;\264\315\215<9\365\205\274\311\211\005<\274\351\351\273\020\216\355<!\261\336\272\302\010\364\275Z\313j=Y\364\351\274\257\246)<\214]\236<ZY\202<pO\223\274\376a\004<\316}\323<\034\307\363<\316\237\261:\301^<<\341\3718>\253\210O;i\327\227=\277?\t<\312Z]>\3446\254<B\321\r\276\250\200\355<U\n\212\276JhO=\337\275,>\214\036\263\273\267\274\003> \306\004\274I\016\263=c\330V\274\341\266\224\276\317\227x\275\372-\301=\332]`\273\034\360.>\311}\020>8\036\277\273_{\367\274$\370\245=I\222o\275\335\262E=\253!\270<Z\216\274=\355\240\017\275\007\203!\273\022M\350<\214\364\271\276\244\242\200;r-;<\341*\t<J\004\245=9\034f=\325\360\353<b\275\037=.\343\n=RF\300\272!\350\034\276\315\264\221;t\205\t;\336*\341;\324\016+=\007\204L\274\227\027\336\275\315\3275\272`\223\241<\357\230S\273\315\003\002>\223\024\023\275T\364\220=s\375\213<\3546\332<\016\275.<\373\241\371\274\031\317\373;,\247\237=\301Gm=\243\332];+\211\345<\257\013\237=@\264\240<\353\2233=\301\014\221<!\033<=y\245\346<\276\n\332<\362\320\274=2\0368=\315n\371;\"\316\255\275\343d\275\274\033\202\240<\035\317>\275\023&\201=\310\334\010;\201\004\221\273\303\030\265\274F\274\021\275>\356t;\241\230*=T\004\326=8\323\334\274\006\276\037\275\242e\324<\3538;;\342\236\306\274\030\252\007=\332\013^=\211m\277\274L4D;\004iL=\317\263\276=\3644\272;|\0324=I\263\200<\261\366\374\275\364\023\013\275\217\306\212=a(\340<\342\251\262=\004u@\274\237\026\233<\317\001\r<\005\254\312\275\365,`<\nZ\367;\211\021t\274\210\245\215;\001^$\276f\003\347=\\~<\275\036\330\240\274&$$=\347\357\331=\256\272\323<6\030D\275\2754Y\275\306r\243=\034\304.\272\230\350\201<-j\223<WY\254\274XMA<\234(L\272\322R\224<_\220\024>I\331\024=\305\375\245\275\360v\343=\212J\223=\033\275X=\342\375\014>\2722G:\346\334\340=\347\346N\274\337+$\275Q\326\255\274\r$\r\276\364\017\334\275\250\275\014\274\235\214\331<\354{\363=\332\230!<\251\350\354\275\355.\366=\036\314\276=H\004*\276{\214\340\275\350Z\323<}\210\253=\223\257\254;\333\264\002\276\027B\036>\252\266>=\213F\037>\310>\324=\005\313\355;y\253Y=?\233\231<+\337\232=\247>\007\276\020\376b\274\000j\025\274N\363\270\273\337Ci\274\272|2=H\274e\275\213\207\271=\317\205\213<\350\225\211\275N\003\004\275\301\000\264=\235\317\345\275\210\376\314=\375\020A\275\233[\007\276\216l\036\276\200\022<\275*\351S=K}\203\275\3756\264\273TK\034<\237\337E;xq\313:\233\331\\=\324\334\225\274\374-\274<Y\002[\2754h\331\275%l\303\275\035I\337=x3@=\027\230{\275\376\360a=\023S,=\t\221\304=\250\367\246\274\364\215\230=\233\376\206\275\020\205R<w\375\214\275\250\325\330\275\254\341\310<\220\234\365=\023Ol\275\364\3330=7\343\220<^f\310=0j\021\275\334lq\274|\301l\275(N\342\274\235\323p<\367Rn\275\251\024\201\275\327\333\321\272\t\0348=h\235n\274\335A\224\275Mt->\335\032{;\366\245\252<\357\365\273;\270X\t>\316\030\276\273z\013\341\275\204,\233;I\255\221\275m\241\r\272\344\230\364<\373\326A;\344\345F=\030i\360;\341\357\235\273#\370\231\274\235\274\323=\303nH\275;Nr\275\327x\314\273\237\002w\275MS\200=&\006\252\274|~\r=b\247\027=\200)\207;\2425\250<&\274\177;U?\230<\004v\336<\247\251\251\271:\222\202<\220\230\232=C\320\005<U\\\016\276U\346\201<\222\n\026>\3568\212\276\036\3020\276\177\025\354<\346\002\244\274Z\207k;\256\252S\276q\241\202\272\323\302E\276\341\334s\274\030\355\264\275\215Y\255=\3736+\275\366\006\013=\374+]=n\217\202\274\027L\020>x,\243>;z\027\276\3608)>\013\r)=\327\321>=;i\233=\343\2029=XY\265=\336q\026\276O\273\024=d\"c<\367jO\276\037T\262;\353\n\016\275~\372;<\205I\211\274\346K\214=\225\221\010>\232\023M=D\311K>\3059\313\272\247\006\320\274\237\323\007\273\001\037\342=\202\275V<>\\x;\207\314\202\275r\340\215=\221X\307=;\230\266<\326\026:\273\224e\372\275\274\217\247\275\"H\\<\355\030c=\336\026P=\364\273\271\273\314v\301;\354\265\202;z\323\212=\014\0365=2j\3769\316\202\036={\177\r\275ES\342<\341\256\345<)dv<\203\n\336<\312\233\221=\3433#=\271\312\274\274/\3069=\336\332L\273\352I\276<\311\363V\2759\362\247=1\363\">\0135]\274zy\235<\276-i=\036\226\006\273s\362\251\274_\n-<y\353\327:\325\377\232=\367#\000\276hj\231=\320/\036=\363E\216;\2200\256<p\360\242\275m\226\252=\201\270\252=\250n\020:7\276\034\275\214\264\311=.k\356;\256\006-<g\336I<\317\021;\2760\365\367=b\205D=\024\264O\273j|;</\376h\274\3745\267= \214\207<y\377\"\275\n#\216< \206{<\201\371T=r\035\025\273\271Z\037\276\301G_\274Xw(=\220\300\031>\345\213\232=\304*\264=Jp\345<Wu\351:]\365#<,[_=s<P<\322\032[<\3763>=\240\253\177\273\2205\n=\343\265\324\274oC\000=\007\220\315\275\227n\036=\330\213R>\307f\365=*\361P=\346\376S=\246\201\346\275\202\227\026\272E\374\351<\006\030-\274\343,+\275p\362\266\274\023\311\330\275%\005.=\r\327\300=\316\027\n>ae\370\274=\205#\275\207U\356\275\261\255z\2750:n=\320\215]\275o\204\005>\364=\022\276\352\223\316\272\355\365;=G\016P\275\250{\265=0\300 <\227\341\232=Px\036\275\226\212X<\345\014#\275\212\036\356<\235\225\232=\242\"\347\275\256\274\022>\233~\321\275\374*\031\275.\320\271\274\343#R=_Be\274\006<\231\272\304\271\350<}T>=\375\255\230<\225\301{\275\367\301\255=M\217\245=\344\037\353\274\247\265x=\246\034\362:\323\356\261\275\367\342\036=\276d\354<\216\2557\273BQ\201\275\n\346\n=\300\226V\274D\300\331=\217\351a\274\202\315U=D%\r>Sk\004=\035\205\331<\207\260\013>\323\334\362=\024C@\2758k\303=\240R\262=\256\370\241\275(~\244\275\020\367h=\321\316B=+\372a=\004\246\317=\243I7;3\007X:\002\227\246=\010D\245=\0014\006>Sj\340<\2134O=\205\310\202=\030\241P\275\"0\277=\213X \272\267\036\256:\350C\022=%\203\034=\362(\230\275\276a\010=\3403,\274\274K\022=\225\222\246\273\352@Z\273$5&;w\022\220;\265\264\260<\217\254 <\272V\264<\'\352\354;\255\332\263\2750\010l\273M\274\014<\250b\2549\2534U<cj<\273F\000\302:LU\325\272=\266\201<\226\342\363\274N\353o;\335\214g\2724\232\303=GR\200;p\375\241;^d\225\272\241\272\254\273\354E\361:\271\261\202:\3443\325;\355\274\002<\357Wg\272or5\273\323\314\200:\204\316!\2729\231\355\272[\246*=A\312\322;\242S\372=\3446\035<C\035\205<\274\177\233;X\035\310=]\354\025<\274\027\225\273\365YN\271\327\265\037\276\001\246\225;\367\362Q\275p\340\016>y\254\332\275\307\021\027\274\374\n\023\275`\203\373\266 K6\276\026\301\177=\210\254\215\275\021\221}\272P\246\025<\326(\341;\306!\235;z,\263;@>\332\275cGC=n\255\021\273\213\222\222;j\354\244\276\221\316\201\273\371/\251\274\305\245\244;\263\014s=v4\337\274v\005\252=\267\335\322;BS\355\275\t\2632\273m\227\311\274\234\265e:PQ\203\275\016\037\223\272\0255\2539Ij/\274\262S\003\275\001\342\261\2741\026G<V\255\315\271\370U\205=\362FC=\270\274\274\274AR\004\270\225\034\247\273c\232\304:\000\023\3107 \006\315;\264O\335<3\226\210\271/\374E\273\035P\2449-\344\373;\343\212\325\273&hM\274\305\246\000=<\227\321;Z\205_\274\211,\375\273\273\317P;Z\364\271\273\344\370%\273\2219\217;x&\032\273j\237\363;\262# <\3771C\273\247_\312\273/\014\214;\312\275\007\274\323\363\203<\017>\005\273\311g\213\273\2573.=]\217\261\274=\030\251\274\272C\244\273Ow\025;\352F4\272+k&\274!\360\205<\315\300C<\377|Q\273\234\364\270\274y\2124;\224\037\024<EX\227=\256\203\267< o\001>\371(\013\276!K\025>{`\253\275z\363\215\275\031\341\022\274-\016\205=\331\014\244\273\223\354\202=\242\017\246<JD\014=\255\t-\275\324\022\004\275\223c\002\276\277\022\010;\003\257\000\275\241\214D\2767\264\323=\237\031X=o\367\307<\005\227\007\275\030\3468\275\276U\001\275\363\327K<\304\246o\272POH=\263s\306\274\304\245!=I\005\224\275\263\321\210=MM\336\275\300\233z=B\234\301\275g\312\177<\024]\023\275\001\215\221=\217S\334=Qi\271=i\356\244\275\375\313\"\275\223q\000\276\2642\274\274\013V\031>\363\234\252\274g\272\360\275\'U(\275\250\357\260<\236\335\204\274\357\224#>\302,<<0\364\304=\273\014\207\275\007\233Y\275\202*\010\276v8\037>\266]\021=\226\032\024>R\335\005>\261\030\303\274C%\233\275\3162\236=\351\023o<\'\306\231=\250\337\020=\212~\021>\r\326?=\354\352\317\275\336?\236\273\'\354$>\270\215\360\274\311N%\275\037H\203=aKm\274Oh\376<aL\210=\312D\254=\001\226\322<\311\241>\275k\311\221<\333P\307\274#\001\327=A\206\256\275ri\005>\030\255\211=\232\n\273<\0025\036=tP\375\275\033U\021;\251\241&\275\330x\202=3D\232\274\013\354\210=\337\221T>\034\341\025\276\213\373\233=W>~<\252W\344=?J\004=\026U\241=\201\230]<]\2177>\271r\021\275\332h\013\275\207\244\n\276\273\272\233\2738\3201=]\264\236=\022-\007\273\013kq=\034\312A=R\'\246=\361O\030;\375\215\037>7[=>\251V\r\275\337\375\336=\273}\265<\277\266\243\273\353\350\255=\262\375\314\275\354\266\t>\263\261\036;\352-u\2742\310U\2743\272@>(\266\246;\235\231_=\375f\215<\367\3332\276E\276\247\275Bv>\275\211\3400\275\334Pf\275F\272T\274\245\3506=W2\354<\254\226\230\275\262zM<\223\225O\275\234\244\254\275\214R\336=\\mA\276\333\356|=\324\310+<\003\373\024=k\0001=\276x\310=\315\235\271<\323_ \275\032!\221\275~\371N<\322+\324:\263\337\t=\na\204<O\003.\274.\337\352;oI\254\274X\233=<\270?\247=\324\000\236<~q\350\275\033j\n\276W\244\265=\240\023\024=pU\201>\014\227\220\275~L\227=a\322\034\274c\\\215\274\270:\240\274\236\217\232\275\3518:>\304\345y<\333M\026\275\356]e\276r\233`<Q\346\026\276-{:\276z\3238=\206\0175\274\0224\217=\205m9<\035v\326=\335=\021\275\301[\301=P\307\336=\265\2649=\014Eo=\327G \274\245\327\007<\375\332\235\275\367\311\253<\357\345A>\233M\327\275\261\302\030\276\307A\201=\2034->\227!\222\274\337\304\327=P\2352=\343a\214\2753R\213<\365\335\302\275d\377b\274U%\310=\252I\343\275\246\177\026>\226,\204\275\204\374\370\274\206\367!\276\211\310\241=\213\377H=\003\2647\275\354\372\036\273\252\235\201=h\345~;\220\0254=\245\255P=\343\004\210\274`\nR</\032->\330f\314\275\213\363\240\274/\261\210\274\300A\225=\304\225\337<q[(=A\346.\275\035|\347=8L\'\275x^\206\275A\260\334\275\014I\210=\2318\235\275\350w\267\275\306\264\224\275W\001J=\034\205\017\275\271\212\002>\302\222u\274%G\264=w\205\350=9\263\323=$\023\013=\310\215\366\274\177\311\272\274&\360-\273d\027\030\276M\324\372=\276\205\261\275\235/s\274\214&F\275ei>>\033\253\200;u\022n<\247\305\037<\210\341\223\275\363\332\365\273\327]\202;\346\t\247\275\204\356\003>\tr\225\273\265n\"=\225\307\013\274|\3022\272\351\217\023</l=<R1\347\273\362\373M=1\206K\275\r\321\237<\331[\024\274\235\"%=C\355I=\341J!\275D\305\030=s\032\302\273LS\310\274\027\014\346<\316Y\025:\366Te<3\311\306<`\023\002\274\0366w<\320\342d\274\272\346\364;\020\342\317\275\325\352\255<U\205\256\271\204w\357=\254\312\240\275}\300\314<z\331\002\275$\337\316<I\267\013>Q,j\270\201\231\246\275$\332\211\2749\235\320\2756\004\023\275\346\022.>3\331@\273T\375\006\273\212\016\005\274E\235\364=\002\220#>\276\333\177=5\316\311\275\t\320n=ld(=\2676\250\275\002\256\225=\343w \276\312&(=\032wv<\271\265\017=\023\300D\275N?\260;/\234_\275\312\331H<\254x\207\270nj{=\266D\025;\303\267\214\2744n\205=\202\321\337\273nR\273=\253\275\306\274\tL\316\271\030km<\320X\312\273\n?\265\275\355\227\210=7?q\274\323k\303<\257+\273\274C7-\274\361H\022\276\247\200\n\275E\366Q=\325:/<[\021\245\274M\333\376\274\177\000\017;Z4\003\274\r\025\226=\214\300\367\273\336\001\355<\304\204\326\273\n\250\345\274V\300\214\2743\347\277\274\004P`=\225\364\244=\251\264==\246E\337\274\017\274\335=*y\344\274{\362\270=\207\230=\275{\224\342=\350\343\"\2745$\216\273\342r\003<\222\333\233=5\010\373;\230\0315<\310\322\307<\337P\255=\034\262\245\275\026\350\244=>\344\357=\016\314\336<7\031\373\273,\322<\275\351\266*\274\347\016f==/\253<\315#\341\273y\250-\276!\036\r=\337$M;\341\\L<\321i\":\307\315\214\275\0268\026<\022e\020\2751E\307\274a2{=\236\233\300\271>\310K\273\2240\177\273\245\253\323\274\350\252\214;(\016\333\273>\234\t<\341\245\243;s\341\226=\310\222L<\274\243E:[\223\311<+:=<\342@q<Dj\334<\216\036\375;Q\211\200\274a\236\307\272C\002\211:\033\353\217\274wW\\<R\222\214\273\240e\024<V\367\257\275\0204\267; {~\275\370\224i;\343\363\022\276\213\226\014=\006<f\276y\361\200;\363\361\277\275\037\230T;O<\214\275\016\232\021\273Y\374\024\276\225\246\010\274_\250~\275\211\210b\275s\2173>(\006\371<\022\354A>\3258\322\273X\253\200\2768\341\214=\201\2749\276y\275A=zy\272=\271`l=H\027s\275 \315\233\273X\241%\276\033\363\323;\337(\226\273\214b\367\275l\354h\276\245\033\215;\247|\003=e\323P;t\221\001\275<=\231\273\nF\261\274\215\342\377\272L\322\376\274sR\314\271\tT7=\230\013\264\273\356\212\236<u\211\344;U\247\356\273\270C\206<@g\237=\022J\251=\304\312\021=\257\200\200\270\222H\277\274uG{\275\320\272\300\274\323\230-=$d\221<n\023Q\274\334\223P\274\032f(9\027h\214\274\356\304\307<V\274r\273\275x\333<@\270\007\275a\266\257\273\217\225\033=\246\277\355\273\262\'O<\006\031\033\274\334\0340<\2445p\274\207h!\2727\315R\272\215\364\023=coX\275\300 ,=F\027\202=#\331K;\241r\203<\320\035\263<5\375\366<\270\006n:\021\177\263;\214\313\326<<\277\357\275s\267\020=\\\212\335=\266\342\256<\357\024\373\273_\242\234\274Vs\":\255\216L\274\362\216\007=\312v\200\273\027\206\237\274\362\3458;Ja\333;(;<=y\031B<\246\204\n\276/$\222\275]:\260\273\334\314==\020\270\017>tG\037\274T\242\003=\267D[\275n\353\330\275\016\366j<\326\301>\274X!\024=\311/\365\272ng\247\275\362\030\215<cU\020=\315\253:\276\242\203[=\320q\267=\022B\275<\245\341\007\275\030\242d\275}\035\t\274\260U)<\310DH<Z\316\016=\300\377\305\274e>\301<\375z\340;\257\300\275;\332,{=r\036\256<.i\265\272\024\213\000\276\317\225\206\275J\277\375<\321\337\273=\205\216\326<\244_\317=c \353\274K\240\006>\344\243\276\274\202P\316<\353,\206=\\\215\">\006\310\252\274\033.\216=c\370,;u\223\335\275\337\234+=\005\370\345<\332\313\026\276\304\246x\274Ud\002\276\361\013\340\275\326\\\221=*\234\002<wz\274=\322\371\245<\'>\314\274\035\3125\275\250,=<\310\255#<\277\032x<b\276\277=\325\227\330\274\334\034\n\276\014\255\320<\014q=\276C\371\021\274s\275:\275\245\250Q\275\264\246\272\275\003\375\240<\221\003f\275\034\246\334\275\352\016\205\275{&\024<t\'\237;\236g7\275\303\256\000>\367/\022\274\330\351\264\275\016\370E= \221\243\274T\352\331;\204\276\242\275ph\025;\316#\372;\036\344\260=\312.\215\274\255{1=\206>\244\274YQ\340\2757~\n\276\214\327\341<\271Rp=~\321#=\354\214\376;\227\004\014\276\'\303\220=S\233\306\274\243\310\267<\367\037\204\275\357~\215\274\375\236p\275\253\177x;\272\366\213=\013\014\210=\242\347d=\257\300\314=o\214y=\3416\316=N *=\210\340\363=\r\321\246=\274\366\375\274\363+\010=\277j\037=\375\356\372<\024\201\233;\231<e=\"\255q\274\233@]:\237\177\027=\263\343J<\204\034\247=9%\233<\247\227\006\276hJ@\275\200\030!=\361\225\014\276tk)\276}\250\277\2748\224\305\267\221Ay\275H|\221\275\352b\316<\223h3=\214\331v=>\034\017\273CO\236<\316\201\354=il\210\275\311\233\"\274\325R\341=\343\324]=\324\270Q=\373\006\314\275\017V\303\274\331\300\233\275\306M\322;!\360\247=.\340\'=\231=&\275D\005\250<\366\014\037\276\327\036\237=S0\017=\rl>=\021\254\356\275\252(\200\274\275\275\013\276\363\254r=\217\001\026\276\"\010\255\274\336\337\245\271\340C\255\275\276\314z\275\332\'8\275\316\212\013>\363\"\357\275;\033\r>\374&\341=Y\272\221=\270\344\312\274\2750\020>9l\017\276\317pA\275\250\302\247=\031sk\275\210\327+\274\264\364\232=\344\324O=\210\256\343<\206\205\214\275~/\034;fn<=%t\312=W\222h<\331\332\225=\001:\341<i?h=\222\342\004=1\236\372=\275\332\207\275\321\265\207\275\001\224G\275\201\266U\275\234\240.\275>\215\203\274-\327$=/\025\255\274=\351\307=\266\276\037>\341\252\377=yU\340=\216\242y\274\310\007\036>\215\205\235=\345q\220=7\344\267=q\267l\275\340K\346<\257\203\327<P\003~<\345\314\220\274\0100\014>\005\326\027\275\023\306\304=k\302\242\273NE\242\273V\351\204\275\327\t`=\242\304\331=\263\r\207\275\270\221\230=w7\337\275\206x\221=\204\305\307\275\035\233\261<ZP\215;\300\312\"=\021\261\003\276\347/\341\275x\335\311\275\204{\311=Ns\365=Zn >\230\375\324<y\226\352=W\267\266\275\301\375\277=J}\025\273r2;\275\177\202\000\275\247p\322=i\200v\275\202\304\256\273\024*\252<\367\227\373\274P\334\036=c)\007=\246t0;\205?\252;\345y\232;G\222\004>\261\246\236<\377\245\316\275\275\243\242\273}P\232<\325\272\t\273\242\324\241<f\267\005\274\253\237\233\275\225h\316;\037\366\250\273\016\237I\274\365l9<A(\234=\216\262\234\274\246\252\265\273]M\256\275\276\355\021=?E\263<\252\275\267<L\355\377;f\3677<\r3\215<\247Nr;\3077\217\273}\324\235<\304\217\227\273\013\3547<\233\316\014\275Ql\356;\344\201\331<q\370G<\241\316\226=\325v\177\275\234b\266\275\'\353{<3\203\223\275\025X\220\273\022\307\357\275\334:\330\273l-[\276_\357.\274\014+|=\226h)=\333.\345\274\361G\023=\031^d=\354/\210\271\303\224!\276zM!<\242Gk\276\250\2371;^T\004=oE\264=!R\356=\242\021\256;\342\346\213;\275+\246\272\376~O<.\3449=\307\221\347=\355=_;\215l\031\274\203\243\006<\355d\240;\307\023\235\2755\t+=e\300:\274\306\325\241<`\245\022\273\357\243\253<B\213\367;\214\377{\275\236#\034</\350t\274\014\220a<\266?B=\247\375`=sg:=b?\356\272\244\206\310\275\037\3600\275\332\227\305\274\342\3071=\357\254\206<\014\246\362\273s\372\032\272\316\257\006;\217\\\021=n\021\'=\366V\223\273HO\343<u\323L;\254\351\006\273I%\214\275\365\375\202=\034\204\315<\303V\267\275\302;;<\"\035\027\275\35092<\366\271\267\273\212\3542=.\335\207\274K\t\n=\274\233\303=Y!W\274{\341^<\323 c=E{\t=\361\225\002=\327$?\274-|\331\274(J\204\275\236\372\034\275Z\232\316=\277\262><\365\364\216;\004G\240=\373\322\245\275N\211&=\274\026k=\361\t\225\273\276\377A\275 \300\000>\246\354\271:7h\361;nN\353;\223\0145\275\365\231)=\377\356J\273\302\n\232\274\002jP\276\226+\235\273\0268v<L\023u<W\210|=o\372\266;\314\312/<\rA\330\273\000%\245\2657,\032\276] \030<\300\334_\274\2472#=14\264<x\350\344<\274`\207\271zW\217\274\233\265\024;\013\342\224<x\326\306;1\246\006=\007\334\303;(~\034\273Rt\241;\371\354\247=\240\352s;!\307f;\376\273\023<\023g\013>k\024!>\345\236\204=\214\341Z<}/u<8\032\346<\233\263U>d\204\330\273\303\220A<.\247 \274y\204\255\275:?\232=.\332`\276\013\341\030\275\027\261\"<\332\240\t<\306M\265\274\007[\362\274\254\336\220=\267\224\263\274\212K\006<B\351\226\274\352dU>\223:\373;0\307\252=]\210\304<\203U\364;;\001><\211\201\310\275\220-\241:r\314X\275\303\303\374;\255\310\247\274Q\3336=\3343\343=/1\320<\376{%\276\345\'\243\273\262\252\256\275=yw;\326\230N=k\241\313;x\342i\274(\370\371\274\010\244\273\275\255\364\234;6|\001=X\003\230\274\252\016\202=\274~\237=\366E\374\273\361\026\274;\014=\200\274\032\276P<|\237\245<ipD;\315~\010=FO\365<\361\361\235\273T\305\003<4]\325=tv\355\274\234\366z\274\206s\030=e\242\332<\200@P:\245}r<gCG=\0100\033=R\337\276\273*\305V\275\240\002\341\271\273\235\223=s\225\301\275K}Z\273\311\302.\2751\273a<\251y\310\274\205\213\n=\205\237\'\275d}\035\273\177\365\017>\rP\271\275LB\234\275\t\243j\274\356\000Q<\227B\025;\336\201\314<_y\036=\303u<<\031L\205\273mw\211=l_9=|A\002<S\266\353\274<\275\202<\020B\364<\250\201\246;\232\021\025>\210\376@\275.\n\010\276\335+&\274\264(U=e\2444\2754\372\273=;\354\223<\324\267t\274\231\252\212<Z\331\331=\256\262\226\274\374u\240<\236k\242\275\036\243\216<Q\344\315=\363.\362\274\326\351\357<\330\212\204\274n\272\026\2752\307\216\275Ad*;\202\032\251=T\247O=VjO\274\341\221\t=\'\357\036=\316\244\212\274A\357\311;\2439\247<Q\230\375=\035\004\245\275P\217\033>K!\216=V%2\276a\006\212\275-\'\372\275\271 l\274\242\010\374<\240\227\360\274\330N\217\275J\034\372\275\312/\304\275\350w(=,\334\321=\206\376h\273J D>R\252\301\275en\366\275\330d\027=\020\034\332=7\035A\275\255)\373\275\224\024H\275\212\311M>H\257\356\274s@\222\275 \274-\275\334\207E\274\300\020[<\207\350\343<\027\325\224<\017O!>\370\036\000\274\265\205\027>u\351\206=\024\233n>\316\310b\273\215:\306=\026\030\005\274\214\003\014\275\373\370\341<\370\220\245<\001\377K=\227\005\254\273\240\374M\274\031l\343=o@x\275H\264\212\275f\326\202;\252\312\252\274\006\366|=\353\324\010\274\033\004?\275\367\034C<T\301\032<\340]>=dz\230=_\331\210\274h\226Y=\261\034\031>\275Q\301\275*-y<\374\336\036>\260W\336=\014\035\343\274I\317\033=$\273\254\275C\016\207=\023]\371<\005\230\034\274\031\014\206\273LR\226=w\0233\275\343~\207;.\326\376:?\006\312<\353W\032\2740\262\204=T\033\330\275\317X\363=\374\255%>\350\224\250=\210 V\274\235\240F\274\020#\217<\344\304}=\220\321\267\275\232\354\366<\"\331\315\274TVH\274o?\240\273\r\312H>\310\356\305;H^\321\274\010\315\204<\007\n\000>:c\236\274\014#\202\274\375\3252=c\243\247\273\032b8\274\306\340\357<%\032K\275\376|\363\275\223\243w< \240\340<RM@\275\200.\036=\033\235\327\275\326 U\275*\nW\275/OZ>\303j@=\004(\206=b2\276<\345\333R\275\032U\306\275\347JL=\242o;<\211\211\201\271y\355\000=[\355\272\274\216\324\243<\236\236\221\275\004\207\251<\022\214\225=\2429\320<\"\014\025>\000>[=\t\017\264\275\307&\203<\205$\231<\300U\263\273\341\277\207\273\232\016\315\274\036\245\357<Q\251\304\274\306\345\317\275\230\337>=\367\316\352\275\231\212\232\274\263{\377=(f\346;<\316\030<a\"\344=\340_\'>\025\344)\276r\261\365;GQ\250\275\263\231\236\275\370c\350<\021\205\371\275T\"H>\034`y\275\251\273<>22\020\275F\360\030<\265\273\302=\274\305\253<h.\\=\263\0261=\213\362\340=\360\231\307\273\023\000\034\276\355\332e\2745\256a=\257\207L<\346]\326=\263y\236<\033mT\274\367\237\010\276~\014\310\275G\204\350<\270xl=+\346;\275\001E#>\"\243[\275\326\347\272<u\2325=a\003H\275\r\314\272\275 \266,\275\257l:\274\317\375\262\275\211S\234=\245\246\205\274\006m\007=%\255\337=\322\n\010\276\360\373\233\273}\373-\275\204\017\265=x\341\216=\211\325\'=\200\033\263\275\357\032\255\275\246\327\307:N\342W=c\366\325\272UU\005>)\272P\275\251\313.\275d\315s=\226\374\274=\225\362\273=\2744\016=o\203\033\275\r\007\017>D\343\033\275R\254\336<\203?\255\275\240FD\275\221\371\225\274\275\347\305=\272\377\355\275\333Y\212=l\354\036\275g\322R\274\231\231\340\2756`\n>\\8)\272,<\027<\0218S;\330\207\t\276\243\0168:=\306\302=]\276\212=0\334\312=l\022\n\273\3418\313<1\234\241;K\240\355\274\001\033\244:\327\240\001\273\033\203T\273l;_=\240\267)\276\0259\032=\370`\201\274\222|\377\274\243\344\365;\004`\365:%\371\2077\" \250\274\264x\023\275J\305\220;\223\366+;\363V\203={\330\031\271lUF\273\322y\302\2729S&=\374\226t:\256~r\2750<z;l\000\277\275\323\017]\276\306\242\240>\025\314\367<\300\221\037>u\332a\274\377r\304>8q\310\273\360|\'\276\230\240\032\273\351\225(=5`\211\275\376\342\307\275\217\356;\275\350v\343\276SL\226<\335\225\023>2\240\031>\t\343\204\276\3200m\274\233\027\247\2746\252U\275\215\013\365=BM\004\275t\035+>\317k\310;T\326\024\2744\371\340\273{\3545\276\260/\206\272\017\r!=J\312\204;D\312\234=\310f\"=\210\255 \276\214\301\222=\337\240\244>L\210\024\2730\277)\275>\324\331;\330\263\220\273\275\203\026;2\023?\274\364\303\245;\332V-\275V\256-\276,\0266=\014\3501\274~\215\321\275\224.\277;P/\222;\223\002\330:\331\301\225\274\272\010\364\274\007\000\235\274\226e\204\2719\034\207=t<\210;\276E\244\273\035\003\360\270\221(F=\327\255\357\274\301\273e={=\261=\363f\033=\347.\343<\032i\351<\256PX=\357\377\014>\260\243\207\273.\256F;\232.\305;F\244I=}\317\006\275\'e\230\273\3232\021\273\005H\224<\262+]\275\350p\214\273+\"\254\274\014\277\211<\2062!=5/\344\272j\273w=4\276\216\274\203\017\314\274\245\324k\274\362\226U\274\202\315\224=\324l\032\275\261y\224\273\2614\217=\263\021==j\026\3479rV\212;\3046!:\214\320\376\275\262\235\210;\202X\027<B*\347\271\331\2463\274E\327\0029x\256\272\273\317\365\205:\201\000\033<N\345\373\270\241\037\237;Z\342\317\271\321Z{\274A\177\020\27587l;J\275Y\272X\014\330=<\242\221\271l\232\210\273\021u\376\271\252^W\273j\306\227\273\342n\372\273?\324|:I\374\206;w\343\236\271\262\350\365:~\203\326\271\215l\363<\230\365\0319\314\346\305\273\216Vz::<\254=\016\317\340=\274\344w=\274\360\251\270\322\\\017\276e\241\257:\260\n\312;\261D/\272\360$\000>\266\003\0008\317r\207\274\326\370\275\272\273\246\202\275-\277\'\274\031\305\375\274\243\354\014\272\t\033\240\273\004\t\205:\307\301E<\270g\222:\350\335\316;\005d\332;\242\326s<\204M\007\275i_0\2751\232\276<\373\371\002<9K\2539\312\335\232\275\245+\2609\226\353\200<\361\312\034:\341\034\311=eL\362\273D4\347<<\215\2207\263\215\244<?\353\341\265J\274z<\006\275\266:\020\200D=sD\252\267\256\033\007<\237F\2519k\324y\273M\334\370\274\373\267a<\307B\364\271\033c\223;>\351\344<4\304=\273BJA\270{\213\026\273vP5\273D\356\024\274g\354p\272Q\021F<\335M\2778nL\235:N\375\365\270C\320\253<\215\244\265\272\214\266\310<\374%[<\307\260\336:\027\327\036\273\262J\3739T\273\312\272\334\371\017<P\234\222\271\024-\026\2739L5<\203l\304;Y\313\362\273%\232A<\272,\2169\210\247\025\273\036JR\274Du\030;E\276\252\272\255(\030:3OQ\272HT\257\273\327>\302\274<\253\t\273\230\273\201\273\342S\024\274\235\021\202:x\341+7V\324\237\273\257\323\207:C\235\223\274\265\232\335:\027BB9\364\337\000:>\345\266:\252#\305<\375\240\373:\264\375\374\271~\350\307;=\325\027\274\266PH9\005\326\203\273\2544%;\306\231\n\273Q\325\232:r\rn:\272c\204;\370\331{\273Q(\"<I\274\254\273\246\237$9\216X\353;\315y\261:?\223\324:\235\337\202<\251\307\257<\367(\013\273H\365\312\272\351\320i:\321/6;\010\325\343;4ZB;8X\247;\344{\252\2728\000S:\362\366\332:S\221/;\016[{=\263\354\363\274\307\371\342=\216_|;BG\272\275[PE;\303\274\217=E\0227\273\024\241\310\274\3158{\273q\201\333=a\366\213\274\365\'$<\331 $\275\326\006\244<\341_\r\272\204\375\253\275\202!\020\275\177\250&\274\352\0331>\251\341\026=\255\037,\275@\260\035;\027\240\266<\235\2560=\347.\213\275\330\367\233<\316\231\\\275\266\\\345<\343\346\3329\312r\236:\244\235];8\261\372;\220EG\273\300\363D;\222{\251;lR\007:\314\372R98*\025\274/\344^;\\\322]\273;\3540;[\262\240:z\327\374;\245\023\230\274\250\262.<\020\000\t\274\003\253\2239L\314!\274\277\205\216\273\217B\244\272\373\204\324<R\203\275<\261\330\345\272\226\345\261\272s\317\264:\362\211\250;4\332\014<\334\302c;\332\n\205<D\335\"\273\212\256S\273\241\322\r=3\222\000=\340\000\205;N\024\276\273\205\331J;Zh\276;g\016e\273\017\302\020:\3033\003\274\273\354\346;\027\321v<z+\035=\306cq<n\234\025<N\331G\2728\354\306;2g|\274\247r\304:;\341\201\273q\222P<)\275\254;\'\235\355<mv\377<\242\032\333\272\233#H;\375\213\363:\352\002#;\315x1<\336\341];I\006&=s\312$<\365\006\"<\303\357\"=\3566\264<\211\315\005\275\233\000\263=z/W=\035^+\276u-\252\273\225\300\207\274\310|\377=8\276\227\2756\221\251=\256?\274<kha=q\177\226=\027\344\023>\'\222\352\275R\034\024\275Py\006\2751\306\235>\331\013\236=\373k\272<.\344%=\314\325\362< \312\002\276\303In<\002D\010<\031\207S<\353\304|=\246\231\021\275N\340\021=?D\334\275\030\224\250<A\357\014\2762\033\200<awC>\337J\037>\217\250\211=\213~\003=\316\350\374<Z6\210\274\273\242\324=G\265\202\275\325C\226<S\013\000\275\376\003\301={\260\211\275\374\376!=\201\036\027>:\036\331=\017\032\037<\360\342\376\275i\010\323=c\t\004>\005\252\r>\247\260-\275\273\306\022>\231#\001\276\224k\\\275\371\001\034\276r\"\246\275\007 \237=\232\300\001\276Q\010#\276g\230\242<C}+>&C\033=\347\202\335;\031r.\275~\361\340=G\243\304\273\256\324R\276\276=\017\275\377\005\200=\201\346%\275\220\025V>^\353!=#\201p=\202\325\226=\350\2304> \322\345=\3538\253=\216/\312<\007\266\204=\007\374\310=\353\031\315\275M\035%=\316\310\036={\220\256\275\003\244\246=j-\223\274\243Y\344\275\362\331y=n\275\210\274\013\262c=C\364\016>I)7\276\230v\252\274\311\331,>\376\221\000>\rz\223\275\032\346W=\357\003\023\276\353\312\306\275\231)\304\275\374W\362=\354\336\235\275\230+\036=\\\330\277=\357\217\353<\244Q\352\274\346\036\217=/\324\257=/\'@=(V\313\275\370V\317=\265\324\234=\207\317\263\275\337\3046\275\223I\341<\325\260M\275\275\223\014\276\202\320S=w\257\361\274\023\030\334=\244$\232\274\304\341\261\275\257)\370=\337\305d<\314\217\245<Gur<\031\247\265\275Q\321g=\346\277c=2\275Z\275\320\254\262\275N\'\216\274$\240\212=\224\010\360=8H\312\275\345]\346<\333\223\202<|\031\224=x\000\006>j\236\007>\0024\300\274*\336\005\276\244\262\312\275p\226\235=\310\372\361<\030\276\025=\342X/\275\310\272\010\2763\233\264=\270s\216\274\0147\006=|H`=`\016\205\275I\355\357<\235\025\027\276~\312<\275\237h\r\276\"\336\322<\022\264\374\275\350\"&\275\013\210\250\274y\271\274<Y-\237\275\000\350\035=\325\344\235\275\024\021\313\275\375o\276\273\311m\200\275\302\035[=\255Q\023\276=\343\305\275\233\212\356=\335u\332=\325\322\"\275\203\313\320\273\277\261\014\276\231\272\033\276\214D=\276}\266\242<\204\271\337=w5$\276\203\245K=^bm\275\372\207\006=.\013\224<\222\346\216;\314tR\275\255<q<R\260T\273\025\367\374<\0210\327\274o\225\023\276h\314+\276r\310\250\275\014z\225=\031[\223\274\357\347\255<\027j\223=\241\023c=\364\2168=\r(\252\275\375\034]\275p\t\315\275\032[\376=B\222\326=\371\004]=J\324\325\275\217\246<>\366\231;<\375\177\325=t\364\031\274\023pl=\325\036\205=\200\242\305<\366]O\275\313\374\371=\364\247\300\274\236\330\271=v\215\225=\322{\034\276\245\316\377:\267\376\256\274R\035\027>\201\013\210=\361/\350=\234\251\310=V\201B\275\357\322\333\275\025\364V=<\0333\276\277\t\312=\307\254\203\275p\210\213\275S\264\317<\006\337W>~?\002>M\346V>\004\351\350\275}\206\213=\242\267\230\272\246\304\207<\350\'\002\275}\212\207\275\023\353K\275\\!\312=\217\242\025\276\t5\275=L\353\245\275\273\026\313\274{1\030>\241\202\303=\214\303t<\367\345\224\274]\271\010=wH\216=|\364\236:o\206\t<\366Z\212=\332\342\324=\313D\325\274tT\025>\362\3015\274VFa=\217V\270<\261D6<\261U\222=8\010^=g\315\313\275\'\247\213=6\224\263\275M\321c\275c\326\007>\263\317l\274\334\025U=\203\003\273\275\303\341\233\275 Yt\274h()=.\332\330=c\016K=.\240\250\274\036\206\021=_\033b=\243\202\272=1\341\003>\034\373\274=~\357\231\275{u\213<$\364\013\274\323\036\322<\347\365/>S~(\275zYO\274S\006\226<\224:~=U\3309\275\233\326\020>\0317\005>\304\017\267<\376#A\274\220p:\276\177\200\237\274\030\031q\275X\006\363\275\001\224N=\334G*>\324\005\241\274P\233\t>\321\352\355\273OW\344=\362I\261;\326,E=\2571\217<\210U\374=\330\275\367=\214\365\017:l|\274=j\213 =\264\210\022>\330\263\n>\317u\271=1\357\254<\2231B=\331]\270\272\373\231p=C\242\244=\241*\264=o>\030=\325\025n\275\303\3004\276\373\216\322=\031\216.\276kvB=\317\002\304\275\344K\216=\336yn\274\202@\302=\352\030\335=\031\336\207\275{\246\203\275\275\007a\275 \220\017<\232a\310=[\366\242=\306\004\233\274q\217\010=B!O=\255\024><\032\022\261<}\307\271=\202\304\037>\n\216[\273(?\215=\223\262T\273\013s<>\007C\022\275\323&\001>3kf=\004</>\335\352L=\307\340`=\371\275\206<J\203\330=f9\256=\216\237\n=\303G\t\276U&\361=ry!\275\314@\374\275\n\301\347\275\252;\300<S|6=o\320\230<Z\210\320\275\311\206\336<\207V&9\327\340\234\274\311\354\271\275\215\257\313\274\022\321\373;\375jn\275\234\242\341<\376Pq<-\2240=h\355\022=>\260\321\275\325\347\224=~hK\274x^\013\275\350\331\333\273\225W\316\275\312x\242<\357,\235<\357G\313<\025%\274= i\242\274\006Q\316=\262\276\301\274\314&\316\275D/\275=a\221\202=\212\247%=\037\030n\274\220;S=\255\230\276=\224p\022\274\344i\270<G\372G=\217\377\024\275cb\303<WpK\274\317S\246\272s\332\237=\031\230B;\305\250\305\275e\242o\275\024\363\234\275\341\330f=5C\003>\206\336\030\274\007A\032\276\334\362\007\275x\344w\272jA)\275\205\357\004>\23293\275W\312\256\273B(H\275\360\255\345\275\006\277\253\274^\3303\27465\220\274\300\267\371=\000l\352=\351A\246\275\377\254\006>;V\364;\327\017\236\274\365_\315=8\356\260=\337\304\322\275\313x\235<E_\222=\313*\256<\013\260\037\274\224\026\004=\207\336\276=\267\322\314\275\375\246\r\276!\341\330\275D\313+<\334\277\005\275\240\036V\275\237\2254\275\326\232M=\021}\365<\372\237\341<\276\374\272=\340\031\250\275\036\242@:\272~L\275?\267^\275o\017\035>\340t\001\276G$\n\275\177\366N=\215.\202\275\036\252\371\2748\333\266=\210\2540<\364\341\242\275\277\021\223=\307\334\220\274\220\304w=\002\346\314;\3043\276\274\222\300\215\275\2333\362\274?\371\002>\270\215\037=s:\311=\331xK\275-\316\235<K\204\317\275\232\224\306=\00417<\274\177?=\341m\367\275\220\306v<<\330}=\303\255\216=\272N1\275\256\036\007<\337#\002\276\024\222&>\324\246\314=\336\265\013>?q\361=\376yp\275\030n<\273\227\023\275\275\257\r\203=F\201\017\275D\233\213=\225&\243\274\276D\231\273v\327}<\204\202D\272+a\254\273xC#;1\032\202\275\177\316\004=\351\237?\273\211<%=*\204\221>o\232\260\271\274\242\006\274\2615/\273\231\002\016\276\312\375\236\272\0208\177\273\361\'\307\274\246O \274\301\227\271<\325v\242<>\033\211\273\002\213K\276\207\343\3139\233\212\003=\270:\360;\031$\201\273\316B\221<\217\350\220<\0237\235;~&\347\271\215!{:\240\273\215:U\361\262:ZS&=9\206\214:\363\312\364=\035\222\313:\323\036\247\275\222~\000\276\267\316=\276\2169z<\312\220\032>V\\\354;\270\364\246\275D\261\032\272\335\225\234=\027\241\2238K\000\222\274(\0362>`\247\030\276t\005\272;\206\333\t\276\2418^;4\214\365\274\007\216:\275<&\302\276\273\274?=(\013\341\274\240\271\374\275M\305\243=o\325\212;\n\266\366=\333\366\224=\236\367\016<\3705\330=\302\322\343\276\261\000}\271]7\261\274\317\346\\;o\316\375\275 \236?\274V|\025\276Vw;=Nt\205=`\277\325\271\331\260\210\275G\355S\273[\245\355\275\370/r9\001\312\030\274\221\341\354\274\362\210\004\275\257M\322;\355H\337<\320\337#\2738\263\237\276\330C\032\276\320u\235;\366\324|<:\242P\273\016\346\232\271P?b<s3m;K\353\323<M\252\037;\306S\211:\327\356\245;6\216\024=\225\303\255\272\221\360L\275\303\'\217<\344\016w<\347\026Z<\352\320\301\273O\356\206=\'|\346<*\265\361\267\031~s;\371u\210\2755a\262\273\337\343\256<k\031Z\273\242\013\364\274\005u\273<\2573u9\207\334H<Mc*\273K\352/\273L\252C\275\267\323>=\'j\204=[\036\005\273\356\361\0049W\017\243<v\364#<\272b\031=\312/\247;\304Re:\262\335E<\362\212\316<\243\306\255;\221\3572=\026,W<\371b\332\275]\255\021\274k\333\315;J\363\030>9\230c>\233f\016\274\025\352T;)\202;=Y6C\274\231\0168<\037\000\347\274\222^\331\275L\202\214\275\304\203_\276\014\300>=QL\003\275xZ\245\276\342U\306=@`F=5\236\322<h\220\373\274\304\273\250=\346\233\246\274zg\344;\333\202\020=C\006\361<pl\037\274\331\035l<:\211\224=\222\240u\274>\260&=\222\322\207;\340Z\371=\277\215\366\275i\017|<4\2770=\177\031\304\275\354\376h=C\253m>\262 \'\274\0375T=\"\342\230\274\n\237\003\276:r\241\275f\303\351=y7\313<\214\212\260\275<\344\210;g \376\274.\376\363\273\277Y\367\275\322L\034=\247\221q;\344\n\000\276Y\265\337=\350\262\t\275\246\371S\274o9\240\275\230i\341\274k\227\336\2758^\233\275\254\0213<\330\000\007=\352\353\224<V\373\324=\370@M>\307\320\263\272=+1>\226Dh>G\354\231\274\003\037\210\275\377 \246\274a\2041;mK\207<Iwp\274\351L\010\276\343 @\276TlU\276\364\375\242=\330\253\245\274\250\276\027\276{\013\307<\345\264\370=\"\225A=\t\n\r\274\254\254\320;gOE\275q\264\246;qS\340=^\357\205=\035%\203\274%\246\323<\340+\033>\211p8\274|\020\206\275Z\257B<\371;\226=\002>\321=\320\'\212=\354\246\021>\253wF>\274\n\017\275\264\251(\275|@,\275\036\223\240=\321%2\276\205\324\356<\005\033-=\360O5\273\366\315\200\2754T\221=\225<\177\274\217\273\016=\300^\251=\004\201,=\310\300\336\275\204\214\270\274\354\231^=\215\031\274<\2227\207=\323Z\020>\261\377&<\310\346c\274\242B7\275u\207G>\263\215 ;=\363\360\274\347\225\320;&\224)\275\330\255\226\275\334\230\351\275\215\3205=\305\304\257\273A\n\266\273\222q\204=B\034\275<\370/X\276\245\013\022<Q\007\375\274M\002\266\2757&.>_\232\374\275#\022\035=\206\316\036\275/#\345<\366\313Q:\233\261\356<\207_\000<\277z.\275\254r\240\274iC#=\\\036\2278\344L\004=\252\353\010<S\361\024\274[\373\t; \372 \274\200t\254;N1!\274\231W\005<\2356\215\276\366\207,<\256z\002\276\277\352\006=\247\303\251;\316i4\275A\3279;\0011\004\274b\233&\274\305,`\2746\\\007\276\\N\234\275H\223&\276\rGd=\316\333k\2763r\235<o\313\007\276^Sp\276\037\376\263=\2614\360\275;^\261\274\315\262\234\275\000} >_\375\322<\340\250\370\2758\273\005=\033\225\224<\272fk=\313\251\017\276f\330+;\313\342/\275r|\030<\230\212U>\004hD\276v$#=\330\010\223=\014\376{\275\006\366\264\273+\036\265=\262#\017<\003\316\362\271\363\261-<\034]\254\275+H\324\275\216\200n>\212G\353\275\247j\211=\327\347!\274\372\0109\276/_O\275\241\376\200<\374s\214<\204\354\"\275oH\325\272m!\320:\263<\314\272\337c\222;\024\304 =\313\275\036\274\020\301d;\362(0<4\010\234\274U4\261\275;\253\246=\210aY=\256\206\220\274\365\374\263<M\321\320=\355\344\236=\264:\252\274r\311\\=\207\230\316\275\213j@=U\257]\275HC\306\275C\217\246\275B\024\312=\363\302f\273\033a\343<b\210\237\275$\356\020=.\320\321\275\216\337\314\274$\244\035\275`V\001\275\223\372*\274\263\213\343<_34\275\352\205\250=q\317\217=\304\344\013\274\262-\300=\305V\023\275\366\257\010\271I\331\224;\266\246\224:\270N\247;`k\244\271b\021\262\272]\237+\273\024}\222\273\306\212\255\272\355[;;\riJ:\"\341e;\230\377\2559\237\273:\273\3761 ;\0225\205;\033`\014\274\007O\017;\0303D\273\212}\034\274jV\361:2\302e;\224k\264\270\361_\275\273\206\325\362\271\312\316e;\224v#;\356-\035;\207\212\3459D\003\004\2733\262G9\351-\277:P\304\223:\203\016z\274h\017\261:Gy_\275Y\n\020;\352\026\371\275\346\315=;\354\031\326<\300\006{8N\177\211\274\255U\256\272 c\325\275z\273\330\272\266\017;<\201v\030=\361J!\275f\322\t< [\245=eOj9*\004\267=y\362%\272\027\211 =3K&;)\343\340;\001c\220\274\233\223\357\272g0H;\315o\020;\247\302\210\274\374?\307\2733\355@\274\377\343\353\275bc\2469\001\"v:\3112\020;Q\230.<\304\373\251\273g\242;\274\014\240\244\272#x\024<\260\261U\272T7\007\274\356B\204:X\346\204\273wr\303:\007p\313\273R\231~:\006\031\272\273\177f\242\273\300+\007<\264\212\006\273t\372\237\272\375ul<\376d\263;\031\026\35792\000k\273R\262\254\272\224\3652;\266\026#;X0\270;j\307\030<\357\337\031\273\300\035A:\027/>;\325\325\241\273\000\365\3049\354\257\320;\024&\343:N\266\277:\2257\002\274\260\345b\272/\270\255;\357\343<\272\262\014\014\273lG_\273\274V\331;oB\212\273]\217\020\273\221PM;<\215\261;\343\t\342\272}`\255;:\231X\273\376\211\244;\271\"\215<\226SO;7\373F\273\024\305\217\273{\314\2679\207\240S;\013\016\304\273\256\316\356;\320\261\230:\006\r0\273t\206\004<6\366\022<\222*\013\272*\n\226\273\376\276\237\271\366<\361:\362\037(=\333JM=B@m<\353\005\253\275\204\334.\272}@x\273\236\226\243:\306>u=\374L\241\272B\255\026< E\007\270\242\253:\275\371\207\0059D\021\304;F\360\263\272\t\355{=H\2358;/\311\r\274)&\024\274\007a{\274\327\030\273;T\373\037<\204\340\n:\3078E<\375\240f\274\304\244\336\272\325\tA\273m i<X\367y\272\t\010K=\025k\231\272\200\222\025\274\016#\226\275\361\220(>7\234\215:\265i\036\275<\\\302:\246\275\273=m(\2149\'\250-\274\306M\013;\305*\t\275\222\250\255<\271*\255\273vN\253;\351p\251<[1 \273\237\025u=Y^#>\266\3159\274\304\333\022=\217!S\274U`\303=\237\021\247\2752r?<\366\t.\275+\272\000>\321\017\264;\345A\250<xh\022\275\201`3\272\331\324\227\274T\310r\272\251[\020<z\376\210=_RG=\356\304\021<\303\266g=\016\006\231\272\357#\026\275\020\314\355:\220o\261<i\003(\273\020\372\253; O\237;{h\004\275\016\254\333<\372\021\013\274v;\212\270\334\003\031>\247\200\\\274\'\362\341;\027^\204\274\'\005\252\274{D\324:\354I\232<\242\240\021;I\354\264<?\025\013\275{\242A\273G\025f\274\363\227\r=V\262\\\274\222\270f\274S\030}\274R/:\274\345;\220=\005\267N<d>\237<]\223\212;\031\343\027\273\001\345\256\274\214\342G<\221\177\002<j\345^<\233\222G<\206\304\010<\226\245\344:\377\366,\273\277\\\267<`\210\036\273\005\016\004=5\010\364<\231\024\221;O\307\002\275zv\231\274\374\272S;jr\304;\303\367\270;\227\030\335;\264\317L\274)\001L\273g\247\226\275\361z&;\225\352\225;+<\335<\250\263\316;\031\243\004\276>\362\261\274\017p9=\326V\315\275\252/\342\273\2666\266\273GY:=\301yd<\224\270\r=\013\037\"<\273\326\t<\016\213\257<p\370\212<4\210\324\274\247\352o\274\315\265V\272\034\226\330\273A\013\"=0b\255;\353\363\224<\312\351\245\274\356\201.\274\250\030\241<%\376\247;\306\201\270<\203\241\363<\252`\022\274,\257!<\266\207~:\247\207A<\017\317\014\275w\030&<Y\203\025\275:\251^\275\n^\021>\306\224\222<\314\341\203=~B\014\274\207\276\010>\013GC\274\004\243\255=\307F\203\274y1\255<\277p\343=\342#\234\275l\032\035=\243\230\345\274\"p\350;\030\317\356\275\200W\333=\204\246\260=\363\0130\274\n\252(\274\006\007\200=\017\353j\275\303\377s<\352Xl\275\261C\270\275\013\240\032\274\332>\226<\233\222\014\275\346\243\313;\357\372\312\274~\3112<VAN=\323\233 =\244\371\024\275X\207\204=\013\204\256\275\252x\334\273<t\332\274~\'\030\274\230\3258\273A\366i<\342\352\221\273\224/\245\275F3\227\272\233@\253\275\336B#\275\0318\244\274\342IN\274\324!\326=A\241T\275\232Q\013=\266\216G\274\3424\332\274\021\'u:OiD:\252\353\241\273\361B\214=o\262)\274\366$\367<\260\322\020>\274\350\235\275IP\203\274a\340\001\273\245HX=\341e\375;\210{\r=\322\246\273<\376\021M=\033\303\217\27456\376<\300\321\002<M3\227=\024\"\223;\t;\250:\024\324\266;\017A\246==\361\202=>#5=\3772Q\275\341\206\253=C\'\214\274R]\374\273|L\263\274\201/\025\274\355F\273\273 q\3708\022$\226\275\364\275\016=\202\346u<\357\244\027\274\263\343\216<\356\207\325=7\352\236\272M\030t\274\214Q\311:2\271%\275\245`P\275\232U\241\275\2350)=\267\277\222=\362\271\256\272\307\027\245\275MO\032;\204\010l\275gw\204\273<\230\345<\200\313\254\272\205\361Y=+S\226=\014\021\351<\246\272E\272SH\252<\210\205\372\274)\340\226\274|J\221<h\034D=\234\003\202\273^\037\373\274\271\367\002<\204\004\310\271o\001\361<:d\261<\374\2158<\306\0032>\312\245+\273\352`F\276P\274):\233\237\003\274\353\275\223\274\313\256L\276\354#0<\013?/=\267O\t\275:\315`=\235\362\276;\022\2124\276\236\223\033;$m\366<\232\256L=/\026\025\2756tj\2741\225>=\205\007\366\274\3537\352\273_\"\027>\tN\202\275\374\240n<\260\211\300<\241G\204=!\337\020\276Y\320!\275\013p*\276+\356\355\275\322\231&=\202\370\\=\346\356x\275\351\252\307\272?7\021<z\211!;\224\331I=G\362)\275\255\331\025\275\273\212\240<\000Fb\275\024\346\t8\356C\003\276\272\371\231\274\322U#\276qv\362\273s\376\251=\304\214`\2747\327\234=\274\322\264\275[\346\010>\206A\356;\017`\200\275\002\022C=\000\003\202\275\201\003\321<\326\363?=\257\245\207\274\370\n\325\273/\235\233;\014\026\365<L\244\204=\254\301\330<|\305\014=:\005\022>\010\202\00683\210\235=l\207Q\275\374\225\363<A\374\271\275\006\311h\274\336\366\342<\030c\214\275\261\037\r\273)$\275\275\257\360<\275\360\242E7\240.\313\274\373:f=\337\277;:\242r\312;\020\300u\272*\000<\275\333~-\274r\307\364\274\264b\370\2749\354\037=\316\347:>\222vL=;j$\274\005a\241\273<\333o=f\016r\273\223\366\233=1E\337<S\370\244=R\266\266\274\004\034\205\271&\201\310\273|\207\'\273\254t\365\274\2354\221<5\222\020\275\211\014\254\274\372\242j\2747\315\034;\rI!;\244V\360;\211V\262=\267\",\272\335\234\037<\246x\025<Q\210\021\275\225\343\035=\327ND\273\30043;\363C\374\273~i\311\2747\326\3739\366\337\271\267`_\211\273\306\236\354\273\344V\035\274\276V\341\272{<\304\273\245\352\3649\212T`:\312\276\2019\352\237\273\274\330\000L\272\327nM\275k\317.\273\313\337\353\275\333\034\321=iU\356=\236?\202\274%}\214;\323\273\205;\253\375\364\275\304\035\277\273\001\317\207>\304_\211:0\307\230\275,\001\227;\347\310\031\276\227;\240:\234U\256\273\260B@;f}\000<\255\365\244=\n3w=\226[\203<\264\217\375<\364\'\004\275\224\361\020\272T\020\202\273\306\205\357\273\264\010\210<\202\\\037;\207T\307:\325\251N=i\010\005\272\232\030\250<&6\217\273\205\276\325=,<\205=\026\340K=\027\017\230\274\211\365\367\275\213\312\314:\r\243\234={*;<Q\0133>B\342\376\272\200_\340;\033\223\210<yL\202\272\332\256\314<d\276\240\274\356\030{:\316\367\265=\231\306\223\275\237\027Q\275\232\334\002:[\206U\273f\365w\273\375\271\201\2744N\377\272\260\327\251\275\324\205H\273R\267M:kV\013\272~\033\313\274\2040K;\357\3524=R(\255;\260\322x;kj]=\340\3614\274\327\250P\274wO;\275+\213\034;G\026\277<@\177Q=\002\365\255<\325Y\200<\035\355X<\317\031I<n!;\274\376\255\376;\322\371\315<\202m\214;\263\373\247\272\347\r\231\275a\005\027\275vg\321;\260\te\273BBr\273\210\367\320\273\334\341O<b\250\021\275\036\303B;\327\026\024;\345\232\366\274\017;\237\274W\001(;#\234\326\273Q\307G\273\224z/\276(\260\n>m\244S<\271\266\201<\245\251\034\275@\261\332\271c\231\372<\312\000;\274\001\260&>~\356\r\273\347d\335\273dS{:\007\253c\275 (\252=>\254v\275VWz;Ciy=\356\311q;\316Y\037\274|\223k\274\253\320V\274\372\005\013<\363\2565=Us\266\273\262\265H=\200\344\376\274\376\r\350\273\327\324\355\273\253+\036<\221\343\247;\236\2210=0\273\322\273\2003-\276_#H<?F:\275\357C\225<c!\266=&\000\\<\234Oz=\306\320H<[\344\324<\201E\370:P\'%\275tG\200\274M\030\000\276\037\274\322<A?\n=\305\354\225\274}\332\251=\014\333\034>\3631\323;al;=\217J\242\274\262\234\024\275\365/\304=\322\337\232<\261\t\221\274o\243R=7\201r\273\2658T=\300\234\241=\232U\230;\211n\210;\271\207\330\273\301\tl\274e\360L>y!9>\024\211]=zr8=>\305\337\272-\036,>\226\313-\274S\367\212>\362!\036\272\222\335\027\275\215\234\226<6g\204\275\rg\364=ul9\276[\031v;h\221\272=\366L\014=\252\274D\274/r\253\274\255\215\253\274\316\002\026<_\021b=|UE;\315\325\235=\362q\225\275\031\2054\274o\324\003\275\206RN<\213\301r;\244E\007=F\213\274<?\010\204\275\310D1>i\201m<=b\262;\311\2352=\371\202~\272m\246p=\216R0<\\\005\006=\363\357[<\343\217\317\274\256<\223\274U\267I\272`\022\n=\302\307\235<\271Q\356;\254|e<\234\260\205<\275\225\266\274~\334\210\275u\013\245\274\312[3<\245X\351<\345>\014\275\302\377\363<VEg\275\250\2428\274\306\025\267\2752B5\274\316\310\\:\227}\r<JV*;\323\377\324\275BC\334\273&\262\324<4>\373\2744\265\234<\254z\345\272)\273\366;!\026\354:e\244\210\274A\332V:\342\3457:\204\306>;\t\212\355;\221\224\311\273Z\231V<\010\330\367\273\322\036\344\274\335\206\"<\304\226<;\177\312\211\271\332-&\274\376D\206::\030\371;\256\333\330;\010\007B<\306\330\231:\360\371t\273P\302\2447\217\244\201<\362\263?;\374s\315=F\205q;\276<\204\275\210\022\354\275w\364\235\275\345v\361;\237-\037=\365\037\244\272\360,\236=M\007;\273\232\265\336=\2545\222\273\254&\035<\203\376\252=\370\352\020>F\277\31687J\321\275G{U:@\t\324<\033\204\251=cU\350<\030\240\262:\366\222\371\272\026}\251:\322D\251\274;\313\253;\265<\250=J}\267\272\233\257\233\273>1B\274x\211\013\276,0\215:\2335\016;V\024\224;>\317\032<\210_\322\273\352_\244\273\000\010\272\274\257\233\360=\370\215\345\272>\021r\274\321\214\360:.O\275\274r\233c;\276\223\220\273\361\222\014<(\n\236\274\207\274O\275\013\317\275<\331\312\246\273q\230\226<\020D\252<\177I\247<\367;z8\273\351\014\274L\322\r\273d\255U:0\371\230;g\257\356<Y\004\222<\0317\253\2739A\2749\177\"\031=\rT\315\273\323\362/;V\234\345;\212\0014<!\001\376;\230S\207;\362\030\205<\2320\224<\241> \273\320\241M\274r\371\034\274~\250\222<w\207!\2752 <;\307$\221;\311\226j<v\327\031\274\003\252?<8\252\345\273\006>\224<Z\004s=\333\006\311;J\265N\271\245i\007\274\274\257w:\236%\361:|\312\343\272[\233\350<\316\264\001\274\325\270\252\273\203?\347\271\200\322\263<\030\020E:z\203S<]X\270\272\205Y\177=F?M=G\301\312<\343\305\333<\343H\307=\205BN\272\370\311\376<\210\237\230\272\334\001\204\275C\223\232\272\334)\273\274\320\261S\274\004\243\312<\030l\250<\035\3140<c\327\302\272\320^f>\264\377\3108\026\353\230<\322\215\017\273\351\2778\274\001\\\216\274e\r\340<F[\371\273\033\377\253<\343\345\263\273<K\334\273\250\310\331\271\361\005\204\275\3346\314\270\262\203\355\275\250\\3\273\001\352\215\276\357\224U\276\254\310t>\365\374;<l\217.=YRl9\3106\233<_\246\343:nH\213\276>\000\331:\373\275\325=\033\353}=P\203m\275`\016\207<>\225>\276\210\336\233:\250\331\t>\324\252\246=\216\327R\276\231\n\026\275|\211\364\274\316\262\204\275\270\023f<\247\371\324\273\345\321\233=\307\233\217=\376\230\327\274\2043\n=\t\272\333=\320\020\3729\361\215=<\037\212$\273\025z\342\275\306#\215=`\264\332\275\200\002\275<65o>\037R\252\272M%\225=\216\235Q\272cy\004:rz\342\272VAW\275\244\247T\274`\267\224\274\2615\030\273\371-\\=\016\355\177\272\010\007\256\275:\270\022\276,\003\211=\370\r;\2749\276\201\274\014 W\274\353\031\341<\347\035\030\274\241u\336\274\260\'\326\274#\246\n\274_\213\224\273Z\306\361\274\\z\354;\343\220\346<u\345.<\302\250\262\274\301\316>=\351z\013<\362\013\200<\354\177\240=\002\315\377\272\004N:=Z\346m;sT,=c\304\267\274\034lx\275\277\321\256\2745\355&<\311D\236:\200\244Z\274\224\301\010\273\313>\244<\252Y\202\275)-\303<(T\342<N.h\274\370\264m\274\272\232\232<G\023=\274t=5<&\3010\275\351g\017\274q\303*<\276\361^\274d?\222\271\314/\233:\237X\036\271:\222F<\002\250\341\271\325\3746\271n\244y\272\221\226\370\273V\210\0168`\220\234:=y+::\275\255;\245\307\326\267\\\334Z:\347\301\274:\304\031\352\271\226\214\232:5\254\2059L*~\271\177\266\223\273\352\362\377\270*\212\274\271\256\006&\267#\3769:{\302\3179\332\347\\\271\231\210^\272\035\347\207:,\325\037\270E\013%\270\263!\0327F\310\205<\2409\3375Qq!\273\270\276]6OnY=k\236\366\273\327\027\271\274\022\002\037\273I\272+\275\340X\013\273\322\000\345<\201\304\260\272\315\233\216;\001\241\305\270 9\256;\326\351\311\274\212\353z;\311)|\272!\025\236;\371\336A;\325B\241\274z\275\321\274\223i)\274\231T\222;i\342\t;\2123\024;\364?.;3\350\'\272\246%}9z\215w\274\2677t98\261t\272\256\223P\275 \342V\271Cf\215:}\214\246\271\242\247\310\273_\251\205:\272c\n\273\316\366C\272]d\256;8K\2368\222q\311:\245\354o:\320\272\265;\310\311\274\267K\210%;\0224\367:!h\020:D\227\r:q\332\250\272\252\tK\2714fN\274\333z\034<~B\213:\237\031R\270\3229;:Z|\2449De\r\272\323\375\200\272\265\251\217;zb\2338O;J8\244-\2177\227\370\224;2\342J9ox?;\364\306\021\273\233F\004\272\037[2:A`\3208\220\277#\272\311\310d\271\207\265\2228\004\362[\272\016\247 ;\343\2722:\206,\365:\310\331O;\330n\022;\250\266\353\2710\n\334\266\374\035\236\272\2568w\271N\225\346:\344\354\261:\1779W9\203j\264:\364\3445:|s\3139<D\r\272\242\272\331\272\030\307\256:\342\010_:\304\007\2738\273q.;\257\332\276:31\004;\322\350\314;\343\306f;\377\032\324\276\030\020i=\305[^=\025\263t=\346X\035<t#f\273w$\232\274S\361\341:\217\2053\275\231\205\007;\317\r\246<\271\344\306;\002\031\202\275d9\r\276\027dI=!b\235\273\036\375^=E\037P<\243\236\027\275;\255\215\274\331\034g\274\276\334\317<l\326\026=H9\202<?\351$=W\000e\273H\352\261;8A\177\273\315q\231=\251\023%\271\"q.>\335\244\302:=}\302;\365\025\204\275\027I\'>[\355\027=\002\364\301\275K\014\276\272\230%\237\274\250\035\327;\251\331\002>\244@\0359\312j\267\275\356\307J=\252\271W\274))\327\274Co\275\275\366\300\241\274}G\023=Cv\313=[U\007>I\356\255=PB\t=39-=\354\206\031>1\035\353<?r\305\2757\027\226\274\271\001\303<q\036\241=K3\323=\206\010\2168\250U\033\274\354\030\250;(\217V\275\256\322\263=\220\342X=\271\212Q=\256\036\342<a\221\204\273\375\373\274<\375\231@\272\t\305\254\275\234\266\231:m\213\223<o\010\203<=\370\336;\355\364\365\275\341\357\374<\377\246\234\272q\255\362=\267Y\205\275\t\014\022\275\214C\343\274\356\254\246\2744\320y<\364\023m=f|\266< O\375=\335R\301\273\002\321e;~\226\202\274j\242\336=r\223\244\273\365\003\366\274.|\343<\\u{\273a\010\225=\256,&;\311\311z=\334RI<\277\002B\273\025\026\032\275P\320\244;d\262w\274\317kR;\376\257\223<\007_\205;\206\365M<\370\302\226\274\310G\332<>\177\310\273[\213\356<\022\013|=\373\005\203\274\036$\314\274\353\362\230\274*\233S<@\340\036<\217K\235<:!\221=P\305\345\273\236\342$;Wp\'\275\037\"1=\334\367\266\272\n_\300\273\375I\007\273c]}=]\342\204;\212\325g;\261\354\013=\341}\273=\214s\322:\225\240@\274\027\261E;EV\316\274\274\337\016\273R\201\236\273Lr\270\273\347\025n\274\271\3566<x\271\027\272f\231\257;XU\340;Zb(\274\323l\265\271n\222)\270\032\\\032<\370W\260;\253W\014\274\271\270\223\273\030y\002\274v\014\246\273\261\036Q;\332A\021\272t\021\036\274d\377{\273O\212\216\275\031ME\273jNS\274\023;\237;\027\034\000\2769CS\273-)\314==\240\371\272tJ\315<i7\001;\312\241\265;\271\346\231;8\243\216<>\010M\274n\357\375=<AV\274t\306(<\376\206G\271\233\362\034\275\372\212\002\276t\203\244\2759wC<\344P\030;\353N|=\036\326\360=\373\352\315\273\365\340\214\275\243!l<\201\203\307:p\200\343<\352\363\005\276\346\222\341\272l\343f\273\036\207l\273\302\270\336<<M\217<\021a\205\275\032\266X\274\243t!\275W\270\010;[x\357\273\234\313\274;\377\206\341\274(U\216\273\204\354w:\251g\017=8\304B=\274\251\327\273\303\215\310<h\025\313;\033\250(\274\261\352\211\275\006\301\326\273\227\377\005\273R\033\347;\265\2722<\035\277\264:w\206\022\273-\232\007\274\022\204\t\275\365a\213;\311>\200\273\324\004\31295\200\302;\220\277g<k\361f\274X\337\221\274\263\177@<\267\370\330\273\n\235\362\273\243\330\005\275\374[N;\202\220\005\273\267:\036=\366\350\353\274\230\301/=f\243\275\273\202\237\004\274D<\315\274\330\315\002\274QLZ\274R0.<\365$\262\274\205\362\231\275J\227\313<n\333\326;*J\342;I31;\035\366\301\274\304wU=Gy~\274fd\014=f\335\205;\304\277\026=\365w\037\274j\245\270\273Jy\366\274\371\210\262\272E@>\2765-\031>2\320\224=\022\363\245<\2149%\276tP\253:\014\211=\274\332\211\026<\335\\\177=d\316\326\273\216r\017=x\000U<\256\275\320\275:O\014=\321m\025=C\035\005<FO\207\275\344\026\020\275\320\251\016\274\357\016\225\274\215J\014\274\273lY<\014(O<w\202\002<A\310\t=\247=\332\274\376\234<;\362\327\231\273(H\212;>\303\250\273.\270\265>\203!r\273\223k\035\276F\223\034>\366\024\342=y:\212;\375\226\346\274\202e\244\274\377\254\211\275\017\304\225\273\332\240\000>\t\275\026<\336\213h\275#\210\226=\227*\n>kWW<^\252\302=\002\023\221\273\271[D\275\201I\212>\220W\002=\301H\002=\332\025\022\273>*\220\275\250/0\275j\311\322;%\033<\276\265!]=\231\347C<MF\307=\343\350p\275\r\006\260\273\3146\323\274bRc\273\274\221\362=\373w<>qhg\275F\212 :\232\221\025\275\236o\366:^\230\245\275fx.<1Z\262=EX\036\274)a\311<i\375\020<\0201;\274\335\305\276\273\230\363\225\275\234\227\342;w\366\377=\266\275@\276\002\261\031\275\262\233\t\275\177\177\207\274\037\305\207<\256\340\347\271w9m<z\005\004=2\371\223\275\261\021\202:\200\215\300\274\244\346\231\275p\331\276;>\370\017\275\030?)\274wP`\275\014\361$>\275i:\274\023\035W=\247/\223\274\245#\036;\245\306~\275\377\374\260<\331\2265\275\335`\"=\'\270\226=\031#\367<c\243\275\274\222\030\266\273\2334\216=u\3656<$N\0178\252\252\350\274\265\321\320\275\274\034~=\013^\202\274\273\010+<*\216;\274\342&\233=#\177\342;\346\303\222\274\\\010\230:\217\311\034\274\342HM\275;\375\314\272\004K$\274iN\'\273\247\350X<*\000\337\271T\n\340;j\247\226<\306$@=Yy\261:\326y3\274\301\205\307\272\252\374\225\274\215,O\273\376\335\336\272\270U\r\273\322\te\274Y,X\275R\246\333;\200l\362;\026\3413\274[\365X\274\3673\207\273\200\203<\274\244\243\271:\247G\t<\376(\257\272H;\t\273\027n\326\273VW<\274\332\321+;l\202\220\273K\264\367<\241o\214\273\366\313\352=\212\311\215\273\010\334t=Le\017\275\007\206\210\275vBU\273\317\356\206\275\003$\373\271\263\367\007>(\360\277;z\357\233\274\222\324\317;\250\340(\273\232\243\000\276\275\320\244\275\004\342\232<)\253p\275fyz\273\270\257\311<\357\351\243\2757\235\232\275\231V\256\275\353!\275\274_\'0=\311H,=\001\227b\274\320\254\033<K\327\272=\361\306\006\272\325\'\353=T\332\367=\312\032\010\273\026\200\356\271\327\255\250\273\310\026\324\274 \356\250;\312\252C\274%\361\223<\325\360Z=\177J\310:x\027\327\274vU-\273\240*O\273X]\276\273W\r&;\'\016\356;\362D\337<\300\217\212<,\216\236\274T\303\320;\263\243\346\275e\026\267\273\356K\221;\364\220\306\274]o\242\273$\331)<X\307S<\260\003f\2717\024\263\273\240\320\n\275\272\004\\;qC\210\274\231\254\371\273d\2109<\3002\013\275}5e\273\273\226\262\274\317K\227:\205\255\020\2745\370\020= \005\302;\351p\001;\204p\207\274\306D\224<\232k2\275\030\256(=\374\331\002\274\314V\216\274\360G\253\274\273J\202\273\177\352\033\2740\004\256;\027\373\261\2749\216\020\275Ol\001\275I\010\270;8,y\273\013$\225;1%+\274/\361\034=c\220\243\274\204p\264;\021\031`;\313Z\256<\206\3662\275\251\221\363:\304\022\310\272\353\224\034;\337B%=Jp\324\274\033~\340\273\362j\240\272jH\022\276\244dU\273\r(\337;V\260\335:o\313\345\274\210\322\317:\203\361\226;\364\226\t<\351:\246<\243\302\263<lS{<\226\222J\273\267\262\351<\365\257.\274\321\235\003:\306\202\237;Q]\016<3\276\014;\"\200Z;\226[`<i\201\365\273\304x1<\213\366\262:pn\021: Z\373<P\243\240:\342\313L=ZI\200;(;\367;\275kb\275\311\272\276\275$\305\324;\261\254\224=+\223\232\273S\263\361<09\270\272x*\236<d}Z\273$\240%<\360C\302<\330|D\276&#a;\3535\"=\302\365\037\274&M\341=\350\355\335\275ox\n=0\3653= \337H<83b\274\"#V;E\223\256;\003\353\271<}\216\257\274\340\031\373;\362\333G=\014\325\020=D\205\220:Q\262_<M.\204;\177\340p\275\327\226t\275\373\257x\275\314/\256\267\351bJ\275\360X\366\2721\342\213<\262\0262;\271\240\035<\207B\r;z\236\323\272L\305\231;p\240\005=\234\214\212<\235\363G=\335Q\023\273\t\376}=\232\307\023=\310\231h<\360\352w<^Fl<+\304\201:\022&\345\2729\326m<\026\3378\275\254\030!=\201Q\336:\302\343\020<\342\213\201<\024\035`:\243\333\323\273_K\014=\201\3212\272f\314\345\274\177B\335\274gq\2409\357\246\265\274\\a\227\2728\010E\274\333\331E<\221\2270\274\261\233\211<r\351\027<\225\203\034<\331\342\350;D\235\026<\323.\370;_I\016\273Y\t\311;a\376\\<\250\253\310;D\2205=\026\251:<7\322];\273\212\237;\330\0336<\333Cr\274\000\231\234<fJ\0319T\005\247=\303\200u;1*\005\273e&}\273\023\376\334\272i\260\214\274\252\213\353<\r\257\202\274\356f\004\275\257\274\030=\024y\214:\360Y\037\274\367\262\226\273!\302\377<<3;\2739!\272;\246K\016<\373>\361\273 \234r\275\002u\236\274\227\001\204;/\025\331\273{\024\255\273T\237Z\271\030\371R\273@\216\233;\014\276J<\t\000\356\273\313\234\247\271\367\367\302;b\003\033\274\327\'N;\223F\213\273m@\020<\216\374\'\273&G3=7\347\221\273\213&t\274V$\260<j\025\264\274\321\322n\273\254B9\275T$\001\274%X\277=\232\343A;$jp\274}%\255;\302\256\227\275\341\220\341\274g\344\276\275\222\362I<\311\337\260\274\242Z\344:\010!<\276u\261\003\276e\032U\275\270Aj\273\361\260\241\274\230g\217<\333\2305\275U\363\223\273\225Q\211\275\243~\316=\036\2360<R\331\013=\023N\340\275.\340 \273\037\030\224\274\30216\273\227[\t\275\246\340T=\374\354!<A\351\010\274\003+D=W\332[:\207\355\016\275\227\356\213;\271uC\275\305\250\210\273\241\256\220<\372\245\000\274\312j!\275\366\344\250;\303X\220<\326\274\201;\211C\026=\300\236\362<\370;c:A\245\265\273\267\272\3709\237\310N<\236\034\303\274\036\326\221:G\n\017=^Z\013\275\236\305O;\245\2736\274}\311%\275\r\371\230;\372\230\212\274\0105*\274\006\275\200\274t\253\361<\177n8\2739\250\032=\325!9\274\n\204\004;\204\357N\273\263^\315<\251\251\277\274\365\340\314\274\351/7<\373\375\332<\332]Z\274Jt\236;\225\001>\274\320\355,:\377\t\316\274x\243}\275\305<\362\274Tf/<\255\036\252:\024\203\376;36\027\274\252\357\022\274\306w\007\273t\201P<\226*T;& 3\275.:\304\274\306\252L;Y\022\021<\210\326\304\273\234%\037?\022\006j\275\225\000\264\275\213k\223\275\226\304T>\221\3725:I~P=B\264\2779\0230/=w\342\374:\342\347\007\275RL\263;P\247\275<\026\343\271=N\277\"<^3\350\273\235@\302\275=\324\363<\200\237\010=K:\345<H\311m\273^\274\364\274\346[\273<\274\302\207\274<b\327\274\363\257!\274\371p\223\274\233\276\2528\333N1\276\024\353\221;$\031\031\276k\035\206\273\211\326};\362w\356\2742\262\"=\256I\n\2754F\036>\220p\232\273\315\272\'\276S\344\032\274juS\276\320\024r\273\032\276\005=\360tB\275\217\007==\371\344P=&B\225=\213\217#<F\001@\276l\322\350=\311FC\276\217F\017<<\244\204\274\221Hu<\252\370\001\276\226\254\222\274Kh)>\3335\005>t\240\375\274*\252F=L}\357=FSx;\213W\226\272fH\330\273\255E\031\275\r>\026=\370\276q\274D\215\250\275\267\023\013\273\307\311]:&\236\332=\237\026\005;\246o\375=[\201\204;\262\235+\275\010E\250\273\320e\\<\242\245\037=\330\342G=\244b\350\273\n\300y\276P\254\205=\025GN\275\r?D=\n.\315\267$\027\227\274\353\306\377:\010T\261\274HR\377\275\276K\346\272\014&\234\274i\253\251;+\266\272\275\244M\243\274q\321\006=A\020^\275\360\352\263\274\013\003\270\273m\027\266;\322\025\204\275\3160\t:/50\272\315|\264=\367Z\326;Z\214\255=\306\323\014<K\334I\275\347R\033\274\250\2448\273i\262\313<\231v\344;\251\320]\273e\371\220;\373M\354\274q\305\237\274\"Y\256;\311\236\225\272\305\3655\274\276e&=\266\373Y\275E\363`\275\211C\274\274\200\350\216\274\262\261\263\275\207P:<\370\262\026;v\327\340;\202w\022;\311\\\215=\307q\206\274\202\215\331\274\333\352\223\274\330:\022<\002\315\346\272\324\2740<\353\351F;\213\257\226<\035\251\357:\236\315w\272\031}\354:<\301\211<j\032h=\005`\262\274\323{!\274.\010\306\273\204Z\025<\312O,<\263\220\'<\177\345\240\2728\235C\274\234\337\257;\306]b;N\024m;\342\231\206<R7w\273\005\222\222;\271\303\024\275|\007\302;\215<\225\274DGy;t\213q\275\243\363}\275=\334n<\"\357d\272Rz\032\276]\270(;~\177A\276a\263\260\273.?\217=\303\t\300\273\317\261\252=&\262\202=8\372\217\275\234\362L;&T{=\022\\|;\310F\301=[\025\330\275\"M\237<zu39\213#\325;\220\307\256\274\276\347\216=L\005\207;|g,=\014o\273=\225Ah\273\240\205B=j)\265\27579V;C\337\306;\215\024\222;X\245\221\273|\333\352\2743\2013\275\261\251z\274rq\322\274\034j\262\272\266\331\250<\n\001\215;\244\2569<\224?\247;\376\306\343\273\364\2160;^\230\262;\275\271y=\323\230\030\275\326d\366\273\330\"\263=\226\204><<_\375\273\221\t\247<,\251\235;W\255Z\274\025\355\315:\024dh\271\224\237\237\274K@+=0\'\223\273H\341\254<+f\217<a\315\017\274\rN\271\274\275\303\342;\354%F<\200\\\226\274\220\331\010;n\037 \275F\312\355\2734~\356\272z4\303<\245\241\003\274\303U\314<>\025\232;\3200~;\237M\010;\027\374\253<xl\254<\007\023J<\230\344\372\273n\272\303<0<\246\274\037\253\303\274\021\375\237\274]\241\206;\350&\362\273\376$`;\211t\224\274l\311\304;\207.\340\273\003\201\226\273g\332\014=\'\323\001=t>\003\273\346\304\270\274y\226K9*\330\001\276\376\026\276\274Vj2\275O\260\325\275W\273\344\274P[B;z&\366\274\377\025\377\273\016&\327<K\021\340\273\237;\2429h\274\014=\030\360\233\275\223\207\346\273\232\240\362<\201@2=yL?=\21358\275\2463\014<8\314^<\033,,=\313\376\226\271\360\207\375;\261O\226<z\252,\275;\343\274<t,K<\334\203\376;\270\316\n>\255,\241\273Z\241\004\276\362{\002:{\306(>(w\247=\227\226\000\276\3165]\274\251\270\360\274\235w\214\274pI\350<11\224\272\347O$\275\000\375@;#\261%>\005;p=\300N\210=\354\312\307\274\013\256\211\274\0027\365\274\320\032Z>K\316w\275\246\273\262\275\272\021U=\312\277\252\275/a\351\275G\263\251<\220@\t=\260m@>f\260\340:\223&O<o\370\330\275\237\371p=\361\273,\273\260y\204\275\357%\215:\250\350_=F@\253<_\346R=\036\227\310<\350\372\345\275\320\237\242;E\260\007\275\003\226\177\2746\3503>>M \274\261\251\212<\002\276\367\273\\?\024\276\314\326\037=+ \255=\026\270\243<7\036\220\275\373\236\370=\264J\374<n\006\270<\303\312A=\203v\340:\330\202^=\363\353\271<\200\007\343\275\242\033R=\020\356\210<\007;\310<o\032\316=\326\001\014=\276\221k\275\333DT=\243\3004\272p\354\343\275\307#\201\275\r\310N\275\346\301\211\275\347\237\330\273I\026\271;\034\275L=\246$\244\275PZ\234<2\302H<\017\021~=\357\275F\275\3761\215=Y\230\325\274\336\327\216=\315\010V\275g\277\034\276\201&\257\275\010.\323=2C2=\256\257\313\272\036\375\332<\021\374\313=\244t\241\275\316\276\355<\350Z\207<\270^f>tf\253<\302\221]\271Fg\316\272\253k\026\271\177\215\226\273\345\\\234:j\274\3459f\006V;\363!\363;\372Ir9ok\260\272-\355\211\272?6`\270\354\313\3516\346\230\2039\333\303\257\272{\007i\272\311\246\344;\212S\2309\374\331\005;\335\251\007:5%Q\272`\343\202\272|:\322\265\373\2479:\237U\234:\314T\016\271\001\252T:\342\271\344\272q\203\314\271&\251\3749\336\037\323\267P3\232\273\234\263\033\272\t\312\177<\225\257\302\271\305\376\242\275\370z\217=\230\251\311\274\355R%:\212-:=\263db:\310w\216\274\206)\225:\262/\'\2748A3:\321:|\274x\n\324;\002\246\312\275\332K\240:`\306\235;\334\036X\273\026}\001\275\363\257\264<b\"E\274\242_\332\273T\356\302\273a\213E<\025\267-\275\234xx:=\200\264\274\003X\016\275\201\261I\272\266V\021\273\314\201\350=\352\207\267\271\213Z\"\272\310X\325\271\271\177\023<EL\256;ii\036;knP;\302t\016<\331\021\0279\3450\235:\\\024\273\272\014\371\027:\367J\265\271\032\013b:q\371\006\273\237R\237:\206\275(\272zRa;\n\203\254:\274\270\270:@^$\273\037\374F\272\203d\217\272i\214B\2714\311\266:\2736\205:\235m\255:I\231\202\273\211\\\377\273\223d\":k\345$\272\367h=\274\034o\357:$d\014\272\264\224/\273\003)S8\030\006\313:$\244\206:\262\231\200;\t\235\201\2728\02269x\321\256\272\270\215\210\272\024-\273\273\331\322\3149\274\373\003\273\254\230*\273\323\021\017\273\036/\267:@\343\014\272g\256-;\006Gf\2730\371\212\273\003\\\016;\347!\262;V\263\3458\346\307\3259{\032G\272\370q\006<\240\221c\273\031m\330:]\265 :\207\240\267\271 \346\320\273\261h\003\273\264\010\264;\204\357\313\272\315\344\016\276\266\226\246=u\276\016\275:\036 =\301?\272\274}\232\005;\273D\220\275\354\005\341\273\355h\217\275m\254\215\273\262(\323;\001\036\201<7b\032\275\363\237\300=\240\356\340=\256\271\024=\366w\023>\337\333\357\274\232\025G\275\\\255\032\275\233\246\363<\247\017\026=\360Y#\275\364\014\375;5\"\206\274`\3326<\230\344X<^x$:\345,\330;g\311\254\273>\273\t>oN\250\273\316\351\373=i3q\275\026\030\254=\212\322\375;hI9>\211\032\333\274\323\215D>[\352p<s\226\274;\377\374H;y\226\257=\321\350\244\275\252s\201\273\370\035y<<\034\374<\026M\322\274\300t7>+i\216\274\200\023\017\275\2630P\275H\314$<\215\217\306\275\024}3\276\220r\r=\214\006\200\275zc\022\275\031.\342<\240\323\343\275\002\'\313\274\3508\025\273\'=\250<\240\340u\273\210\317\201\276JZh=G8\373\275\353\351\247=s\2366>\376]k;\003Y\265\275\230\350\347;\274+\204\275U\270\254\273\273Y_<}4\200=\276\302M\274\000g\256=\255\264,>7&\216<BD)>\377\2429=\031\215\237\274\327\257\215\275\031f\347<er-<\347\003.\275\360vf<\312\332\213\273\025\367I;e%\202<\310\026l\273\242\000\321<X\254\243=3O\311<1O\002\274\342\251\267\275\340:\236=\335\357E\275i&\320=\316\306\260<\314\341\334;\336$\343\275\371\225j;\221\325\357\274\212\361F\274&\240+=\222r\230</\031\206\275\227\313\032\275\276\262\005\2751o_=Z8\004\275\275\236P\275D\001H\275\206%)>N/\311<\374\n\312;\021\300\214\274\202\302z=\223\204-\275\304T\213=\252Ar<\010,\032>\242QT;\347\373\207\273^m\233\274<Q\364\272\"\236\003>\n\203\002=\203\364\302\275(5\256\274\260o\270\274\260%=;%\320u\275L\177x\273\36365<_\301\305\273}_\351<Z\371\247<p\t\\\275+\r\032<\251\302\t\275nGn<C\240\276=\021R\232\273\004\332\307\274o\244W<\205t:=P# \274;9A\275p\371\237\273C3\313\272\235)\205<\251[\225<\203\367\241;\021\375\033=\351\375\360\273tc\002\276\332\220B\273\237\360r>\214x?\276\203\343K\276\202n\217\274\021\232\177=Ai`;=\357\215\276\240~\227;Le)\276\330\001\006<\226\263\250=\266\331\021<\0353\327=\345y\323\274b^\203\275Q+I\274\342\376\306<G\217\t>\221\343d\276\362`\r<\317\'\376<\2739\243=40\006\276\272\276\330\274O\270\004\275o\247\032\275\211M\251<\244V\335\274\303\210\274\274\227\322\210\273\323\335\356\274\306\331\026\273\235\201M<\332\037:>\023\360\223=\023\303\302\273\321]\027\275-\354M;e\200\'\276\"\254\242\273Z\364\023;l3\333\273\235\021\266=\214o\222<\267o5\275\214\253H<%\203\375\275\353\252M<\334\014+>\345\375\274=\303\340\010\276\0343\272<\315\232H=\314i$\274A\376\204\274\002)l\273\030\341T=\200H\254<\266\264\260<\372u\311<+\344\205\274 \314\336<\t|\210=z\377\023\275D\352\001=\260\361\370=\217[F=\037\327\'\275/\300\320\274L3\026;-\336\201\275\024.\261\273@f\202<\362\224\\=\345\t\274=\311Q\006=M\357\261\274-\236\003\275\0134\201\275\227#{<\247\027F\274\264\310\r>\031vS\275P\335>=g19=-(*\274pP(\275\323\356\032\275\335V\032\274\316\304\317=f|\260<\373 i\275\372G\202\274m%\026;\336\020\2659\232I\n:zE\036\276w\342\305\274\330\273\211<.\236\202<\327Q\334;nZ\326\272@(\"<-\330t9\311\352\240<I\027\216;9\205\327\271vv\267\273\354\337\262;\030N\317\275W\347\310\273\032r_\274=\302\353\275\223\312\024<v{\336\273g\253\275\273s\324\373\274#\'\005:/\013\001<\"\205g:\036&#;4\312];\237\034\017\274Y\223\271\272\220<\034\275\207\312\207;?\335,\275%\321\235:\311\270\356:!\034W\2759?\270\275_\271\343;\245\240q\275\035}\210\274j\215\325=\346\277\004:\350!\n>h\035\205\273\\\310\312\275RZo=\211\320\304=\223k\230\273\250\202\241=d\305\262;\022\354\237;\254\221\220\274\324\260\026>\370\262%\275\024\301\306<\347\343\257=\353\234\200=\252\000)<2\353\t\276\206)\007\275\021\264\223\274a\274\302:\304\320\034>\341\223\031;\336\261\"\274\227X+:z\364\027;\320\347\230\275\201\031\216=\301\n\340<v@\273\275\253Y\030\273\235S!;\024\013q\273\307\301\353;6j\310;\356\305\223\274p0\327\274[\r\360<\370\036w<)\203\027\274\203\320\020\274\267.\017>e\374q\274,\337V\275\000\203n\274=?\001\275.\352y\273\035\356\266\272\222\010\3258F\226\247\273!\264n<I\2629\274s\365\305\273i\324h=\224r\005\275\365\374\202\275\342\376\027<\235&c;>\337\374\274(\025\n\273\003\322\010\275b\254;\274egt\273\361\324\262\273\250c\327\274\026\366\260\273\356l+;X\303\267\274\255\265\367:\311N\252<)^:;\n\342\'=&\232\274\274\207\364\332<\217#\270;\t\254%\275\007\344\306\274Oh\360\274g\202\001<\314\"Q<\331\000\025\2734\223\006<rc\243\274<\303@\274\300\004\202\275%b\361<D\212\r\273^vF\274\360\010}\272\365\244~=vm\254<\370N\211<W\351\201=\263GT=5\375K;>g\217\274/\266W\273&V\\=z\341O\273_\'\005\273F\327\262:\n|\033\274\305\333c\275\352%\326\274\376R/<\021xh<\0317\237\274}\\2\273\031fd;\033\227\006=\324\304Z<oD\212\273?2\016\2733\004\322\273\016\374\232\274@\353\024<\024\2269\273\271\326s<\037y\262\273|\362\255;\241\031\370\272\024\256\340=\242Y\257=\216sR=\010\005\244:a\267\214\2745f\031<@Fg\273a?\205;\2238/>D\233\223;\220v\273=U\313\365\275y\214\017\2767\311y;&n\n=Y\034\017\274@\242\331\275\201{J<V\020\026\274\242\222\253<\2374M=\263\017\370\274g\367\372=h\226\\<\001\027\246\275\013\032\331\275\272\231\235<9^\275\274\250\375\246=5)&\273v\201\023\274\376\016\334\272\017}\001\275\201\202\213<\355\367\353<\265\024B\274z\326{=\031\030e;yk\023=\375Wx;\372\306#\273\rkh\273\007\233\265;\'\004}<6V`<\035:I=W\206\211\27556?<\007%\275;M\273\242\274\345\227Z\273\000\004\336;\320\302\r=\220\247;<G\256\001<N\022\036;\267\317\302;\355\372]\275\212\0131<I\255S\274\336\202;\275\204*\317<{\232\224\273\213e\000=\370R\301\274\322\021\206<\340\354\007\274s\247$=?\250\000\274<\334\365;\365E\003\275\350\202p<H{\346\274\017k\245=\215\326\327;\314\365\344\273\274\307,\275\017\267\270\272\314\322\030\275!c\254<>\213?\275\367\032\004\275\346F\357<T\201\301:\0365\376<\274\356\364;\232U\005\275\337\241\260\274\271I\310\274/3X\274\322*)<~\323\220<\032\352\263\274\347R2\272\225\'\035\274C\205\215:$[_<\325>\323\273\366\201C:\'\375\023<\201X\200\272\361\003\252:B\322\007\274\036\212\2509\236\340\034\274a\322\014\272\037\240\035<\207+\305\273\201\013\210\274\300t\220\274\213\364\207;\333\336\313;\220\221\306<o\023!\273\031%\365\273\t\361\r;=\332u<\220\355\272\272\233\376\206\273\264bH;\3676%9\327\214\362\272\351\231\317;\2176\005:\346\034\037<\013\330\256\272+<\032;\344\336\300:\001Q1<\307\n\265<\330\210b=C\233\001<s/5\275\322\217\310;\316\263\221\274m$\232\270\213V\362<\233\\\373\271G)\203\273\232\246M\274\332\013j=ZB\205;9\233\001\275\r\342\257\273f\234r\275\252I\214=L\273\001\274\251\210z=\"\"\021<p\274D<\222\\4\274\332M\332;\346\220*;\217L\256\275E\265\206<\312{K\275\360\021\003<\026D\335\272\'\322\017\274q\312\021;AX\327;\330\022\367\273\007#\262;\333\324\365;\005\246\306\274B\305b:\345\024\377\274 QP\270\266\320\002\275\372\271E\271<s\225<\215\033\0039\242\237z\274\372+\204\274\231\336\346\273\374\365\232;1:\234<\371]\030=\343\236\t\274b\356\000<v\006\210<<\271\020\271\317j\210\273,\253\251;\345\247\312<\r85\274\3172\351;sW#;\356\300\325;/\351o\2710\241\201<1\221\253<2[\004<5\036\325\273\214d\241<\365\034\010<\273k!\274\201\2504:\234\025\302\273\252\272\201:-\351\311;\006\217d<\217W\213<\316o\317\271\265X\'\274\035\013\372\272\222\377\204\274\371\211v;1\276<\274m\224 =\363\251\333;\264\250\245\273Je}<\030\000\242\272\220\306\325\273\256~\210<nZ\210;0\357\333;\003\336\352;N\010\300<~H\002\274\202\033\3659\032\330\223:\007-\3159\377\371\343=`\037\240;\314R\301\274i\014k;\321eC=\220\030)\272W\025\3519\327{\330:\241\234\242<sm\2629\014\276!\273\007\037\023:>}A;b\254$\273\304!\273\273\373\017#\272=\215\241\273(\206\0139Q\232\245;\276\230B9\254\375t\273\275\204\364:W\256Q;e\31459\337\030\355\272\020\246\037\273Z7\335\272\361G\024\270+\217n\274\204\363\3249\377z\273\275\2718\030:\210\022\265=4/\321\274\221\250\364=]N\344:\233\254\215\275Q\021\224:\266\017\204\275\343\314\273\272\242\221\n>6+p\271hKz\274m\372\023\275\236\210\305=Q1\005:8\370\263<\207/\003:\230S_<\'\326\246\274]\320\036\274\003\355|\274)\325U;p\260\354\274\265\037\337<\310(\252:\300c\244\274\027\r\207=u\217\007\274\216q\276<D \265<Z -:\030\302\223;\351#w:u+\204=\247y\266<m8\223<oB\345\270YQI\275\016\303\350\2716\255\303<\350h+;g92=#\312\301:\267zc\273\351\223\357\272\246\222\221<m;S\273\273\277(\274\332\006T\272\252 \340\273\356\312\232\274\314[y\274\314$*;-\3302\2730\260\216;Z^T;\376Ia\271\324SA\274\345\250Z\274\300\217\026\273\222W\311\272\222\014\237\273\332\210\234\271\n\211w8ND$<\363\324Z\272\341\'\201;\256f\276\273I\2366\273k\301\220\274\2354\2278\324Z\225<K^c<|V\225;\"\004\212\273\247\316\222\273\nB\013\273\367\234%;\352Z\215:\003\2362;23\366\271\377\215\"\272fBz\274\021\377\206\274\324\035\037\272\240+*\273.\330\222:\341\024m;\277\3072\272\211C\032\273\202Nh\274_(\010\273\245\022\316\274\335\3016<Z!r\2714\243\215\2707o\3719\305\306\347\275\227N\026=\3634\345<\"73=\333Z\230=\354\020\271\271z\347W<H+\350;\304\266|=\242\353\0049\024\220I\273\222\303y\273\325\365\345\273F\347h\275\177\253\202\274\257b\215\273\353\335t\275\003n\001<3\227B<\270\200\376\273\230\274\310\273\211d\233<\253\327\205<\336x\026;\273t\232<k\265\037\274^2\016\273B\336a\273\236\024T=\320\032\212:}\360z\274\037X\315\271\312\260e\275Q\352\302\275\313\226\"=\004\027j<\367H\310\275\244\035\227;0X\305=\204\300\260\272L\245\n>\326[\253:\024`\216\275\023\254\200\274\245}\311\272R4J\275\2628\002\276\331\236\210;\332I\036=\006\216\251=P0\342=w;\362<\2010\335<\255\004\277=\230\376\231\275\304K\247<\263\276\206=\331p\002=\302\005\n\274\031\001\225\275\245\370\234;\226\355(\271\270}\241\274\247\336\2759HS(\274\224\3526;\370\322\216<\373{\373<b\'\213=\220D\026\272[\270\233;\2758\346;5\010R=D\326\2239T\276\205\274\221\'\200;\371\353Q\275\3543\301<\301\352\260\275\3179\364\272\264]\214\275-\254\002\2759\256==\364>S\274nq\033\274\272\251\207<\304d5\273BM\211;\315\307T=\263\335\371\274\032OV\273\031\251=\274w0\035=\004\301\027;\344\246\216\275\3629\200\273tw\253\273\307\010\327<:E\374;\253\3601=\266\004\345<8\227\005\272\\\240d\274\275\217\253<co\333\273\237\373\235\274\312Qf\274\220\203<<Mvw;\351G\220\273fb@;\255\325\345\273(\026\212\274=\036o\274\263\002t;\"\311[\2758\350\375\273J\250f<\354\231\356\273\\\201/\274\304M\302<\374\260\354\274\203G\200\273(\242&\274\263\277L<\305L\207:\330\007\347;\311\367\233:\r\356\200\275\315\2611\273\303\274`<7v\216\2743\257\001\274\211\336\203\272\363\361\325;6\246\305:P\022\217<\376\300Y:\267bc;\034\322\':`\206\250;\305\241\200\275\007\363\252;\'\004\335\273h\332\367\273\250\234\304;sn\204:J@/9\307\257\243\273t\203[\273i\336\016;\264\2270;\207\260\263;\220\201\273;\330\003\377\272\014\000G:\223\332\"\273\324\2167;\327\246\334=\346\014\006;\211\354I=T\367\003\274\371\317\231\274#\265\344:e\277\271;\014\344\003\273n\204\226=&1)\273\301D\261=!\360X\273\207QK<\246X\206=2\240\232=\206\343N<\243\252\234;\327\365\000;\204\300\313=>u\r>\225\213\035\275\373O\354<\340\001U<\237q\023\275\217qH=\363\272\2349{]\346<\213\364\327\274\024u89\266(8\275\345\020j\275\223\307\251:R\\\3438\273\202\031;\370fl=F\315\200\273\032\252\032=\200O\317\274\247\315\261\274\346\345\225\272fs\213\274\351\037H;\211H\235;5<6;\316\004\2409\017\362\237\274\307\020M\273\254\026.<9K\220<\332\353\232\273<g^=\033\"\246<\035-3\274\236\360\313:\261\177.\273\325<\345\2737\n\342\273@M\\9\375@\274;\2528\000=#N2\273z%\304;\213Aj;\212\262J\274\231\345\257\272\247v\377;\344q\203<=M\001<\2540\326;=\021R\274-mT\273\201\356\"\273\307\322\006\273\032\307\256\273\016\261\302<\321O\250\274L\200\376;7\266\003<\031Kp<\037\026\007\274[\211\026<\022\255\372\273\034t\221<\335\245\024=\025\262\233\274E`D\274\014h6\273\242\2500\273U\225\375;\262j\023\275\035\353P<\335u\211\272y\3514\273\323\3517\274\n\355\305;\367\331\300:\314\220\365<S\311\322:\232\242\000<)\315\\\275\022H\244<O\026\007\2748Vk\276\300\3320\266\006Ro=\353X\313;\004\326\213\2751,\301:#\317\241\274\277s\264<\267`\252=g\026\257\274\003H\323\274\234\361>\274\271\363\302;\002\035\204<\253\200d;\346\276q\272f\r\300\273\273R\300<ab\237\273\326\265!\273\310\235,\2728\261\027<\222Z\351\273>\334\352:\304\001\210=B\214\001;\252\024\027<\216\\\344:r\254\300=\3331\337;=Y\226\275P\022o\2740\372\217<\367\357B\273l\336_=\322|\365\273s\237\001\275\312..\273 \274\356=k\263\013\275U\255\201\276d0\372\274 \022\242\272AJ\231<\"\017\002>\363\027.\276\226f\n<\365\234\343<p\320F\273\232\306\t\276-5\226=\005b\277\273\267{\001\274\311A\242\275\203\317\n\275a\300\240\274h\037f\272\301\336\263:\360\026\351<\327l\240:Z\375\235\275&,\215\275m\266\306\275\005]-9C\346M>~\007\2419\347\246\204=\277\315*<\351\232\267\274\n8\317:\245\351F\275\245\207P<\371!\200=_5\373\274e\211\357\274\301\250\014\274\340\362p\276u\344\027>\037G\274=\227t\202\273\030z\305\271\264\363\266<b\021\235\274\222\345\230\273E\006\r<%\346\002=<<\364\273\n|\344;G`i\274\2668\035<%Bx<V\264S\273J\317\347\273\177\262\032\275\014\005\277\274]X\251\273\216o\014=\337\031\2159\315\307\233\272\264F\031=iV\312\274\n\343$\275<{ \275\203T\350<k\304\032<\227\226;\274\245\332\000\275\217\324\034\274\">K\272\305g\374<\327\243\036=\266M\367\273\256\347~\272SPe<\3147\224\274zP\014\274\372(C<\037\200B\275\242\305-\274\320\024c=\273\000\320\273?\265;;J\020[<\001\241\314:\177\207t\275\270]9\2725a\312\273\234\001\271;\2719 =\261\333\224\273%3\027=\235\300F<\354\226\355;\310*\244;\317(\017<\334z\242\274a\277\360<\017\2350\275\177\t\325;$\322\377\274\315\001\254\274\344\375\375<\345\325\023<\334{;\274~\370-\275\355S\004\274B\234[\271\215\224\244;\216T&<\372p\311:\2069,\274!\240.\273U\305\233\2753\007\376;b\244\252\275\363f\357:d\330\003>\362\366\247\275\335\344\356=ix\352;\177\364\260=b\236\242\273\313\204\034\2751\200\266\273o7\245<\032\021\000\274\334\231\312<\300\321\324=Ev\001>\2322\252\274`L\314\274\030\267\331;\t\243<\275\372wI\275b\234\n\276\344e\277\275\001#P\275Oh\325<\272\022\216\275\211\324\316\274N\304K;\r\314\277=\317\3247\275\032\314\213\273\304\n\235=X\247n;f\241\007\275\320\215\002;\033TT=B\230\310\274\331\260u=d=\231\274{\242Q\275C \265\273\335\334\207=Qt]<\036T4=\374\316\301;\025\272#;Y\311L\274t\265\215=;sa\274aK\367\271:U\216\274{\376(>\347\n$\275\346\226\335\273F?\373\274\232CF\275\310\231\003\274\243m\325\274\370\204#:\355\376C\272n\255\256<WqR\274\256\335r\274\252\260K;\370*\305\273U\261\265\275\223\277u\274{\001\275<\340\273-<\343F)<m\006n<\207X\337<Jp\337\273\320\022\325<\372\022\267\273\317\221x<\312\366\301\275#Z\323\273\365\331\302;\221\246B=M\313\200\274d\255E=e\354\302:\204ak=C\323R\273O\013}=B\035-=\37270\275-\302p;\250\354w\274\267\244r\275s\000\344<\305\032\217\275 \363B\274;{\303\275\245(\245\274p\217l\271/\237J<U`\003:\213\177 \275X\020\303;,\215\r\274\227\302\003;\303uv\2729X\343\270\032-\300;\204T\032:I\373\266:\3712\'9,\345\007\274\245\301\305;\001\021E<\306\010\255<\314\2575\273\202L|\273aY\252\273\370`\250;\233<~\272\323\331\372\270\237\"\360\273\"nv:8\'\362;\213\355!\273)3\017\273\237\215\212\271\375Z8\273\r\036\2718:\026\002\275\342\234R;h\374@\274\365\222l:\253h\363\274G\211?\275\276\325\034;\303\305\216\272Mj\330\274!\"\006;l\260x\273\314R4\272\264\353k\274\324gL\2736\377J;\357\271\032;G\202g\273\223:\321;\220\233\312:\344o\201;\333\322\014\275HzD;t\030\343\273\323\231u\273Q \324;\237z)\274\255\214\356\274\353\254\031;\363\352\241<\266e?=`uA\274l\234\014;i\362\254<\203,+;\341iv<\302,\242:E6\236\274\217\014\000<^\014\217\272qGE;&\216\357\273\203C\r\272y\350<=\212V.:j\2365;\306\224,;\210Dm\274Fy\235;\251\255\212<\353\261\250<\2270\361\273\365#=\273\213\306\350\274\200\235\302;t?\300\2735M\r\271h\377\217\273\246\331\3419\353\203\004<_\025\202\273\375\000q\273@+\032<a\263B\273\242\314\2159\303\230\271\274\311\020\237;J2\217<O,\353;\331\032Y\273\262\020\236;0=\217\274\315\271\027;\257\256\3468\321W\227\271\200%\0239\307\257\3009\014V\034<\373\371D<Ft\021\274\251\361\005<\213hD<\353;;<\2557\366\272\367\2306\273\371\273.<r\373\250\274\t\332w\274\330\263\234<\364\262\226\273\215Ce:G\256\242;h\272\016\274<\003\216;\242\322\354\273\n\346Z\273\346\231\\;Z\021e<%\230\361:\016N\324;\266\003\213:\355\007\252\275\213\314-\274\246\333\324\273x\020\017\275\024\200\315;Q\200>\273\232N\217<%\361\202;\200\302\334\274\022\272\300:\323\210\357:\357\030\006\274@\336\351<(\224:\275y\263\365;\250\302&\274l\377\201\274cD\027<\315\250\227;$\232\271:\344\\\000\275\331\266\232;\0336S<4)\345;\210\003\003<\'\037\013\273\257\212\335\273\247\211\2038\350U_<M\\\215;\323!\003=j\"\212:X\250\030\2767\331P\273\320\271s=\361X\006;G(E\275\255M\237\273\230\233*>\337\314x\273_;\021>F\177\206\273~+4<\207\355\037=V\022g\275,\355Y<\225\377V<\361Oq;n\3410>d)-\276l\223z;\375\220\014\276\254\351\255\275\025\373U\275\004\316\342\273n\'\013:\242\211\342<\274\0179>\217\331\\\274\335wf=\326\376\312\273Se\021;\227\326\006<\r\007\313:\264r\305=\257j\375\272-\031\321<(;\033\275\301K\253\274C\326@\2737S\236\274\"U\273:\020\327\n\275\302\317Z;\265\306)\274\\p\010\275H\234J=\344`:<\275=\364<\t\211\020\274\362L\014=Q\322\303;\354JG;\3509k<\261g\n\275\366\374\244\271\233\254\371\272\246\261i;\313\'\202\2747cd\273\372\343\r\274\036\273\362\272\325\267\250=\362\264\231;\214\345H\275zmQ;\023z,;\010\360d<\260\177\005\274\321&\356<\327!\227\273\230\313L\273\032\346\246;\302(<\274\323\221r\273\001\267\241\275\270\036g\274\030\261\325\274^\203\001=\005h\234<\341\027\004=\332\240\252\2742m\026=\232\201\203\274\220G\342<j\303\265\274\241\375\351\274\\Gr;\\\315\233<\300\260\274\274\314\271\226<I(8\275\217Z\007\274\251<\020\275\335\224\352<n\316?;\367\265\254\274\rt\243\273\304X\300=\334\303\225<\000\001S:9[\234\274H9::\201\327\217:\252\271\226\274b\027 9N\351O>-\371<:c{\006\275+\372\004=dBI\275\247D\r\275\035HH=2Z\241<$\"\360\274%\010?\275PI\t=\326\227\255\274\224\232\217\274\201\360\'\275nV\223=\220%\320;\r_W\275n\365\240\274\244fx\274A\202&\274q\212\220=\376\003K;\r3O\273\365\327\263\273\325\362\273=T\364\000=\334D\252=\0248\206\273J\210D=\024\346\016< \2307\274pj\004<}\222\273=\206\333\303:fP=\2732\364*\276i@5\273t\335`=\323\037\354=5\035(\275\340\320\222\275:\274\332\275\341\361\304<\276 \271\275\364?\002\2746d\302=\246\252.<\254W5<T*\331\275\014P\332\275\036o\231\275~<~=\026\262L=\366.\204;\361\030%\275\220\335\024\274`w\201=\032\032@\270#\235N=v\365<=8\351w\275s\255\000;\267\315\001=\375\252\n;\010\357\256>S\370\264\271\000\271w\275c~<=\271v\216\274L\200<\274\334\244\245=\246\310\333;<\300X=\334t_=\313ET=\014\234\032\275:\010\256\274g\022\270\274<a\231=\306&\374;\303\321\r\276H\370\361\274N\270\205\274\354~\014\275{\302\027>\263G\216=Gt\363\275\365\352=\273\204}\332\274\255\257y\275Y\364\006\275m\024D=\275y\215\275Ti\033<\035\204\303\274v\004|<\024\005\312\273vy\213\275\312\327\210\275\261R\023<\202\265\"\275\261\016\344<\341\341\027=7)\342\272\3613\017\275\200\347\345\275\330\032*=9\205\221\275L\\\273\274!:d\273\374\264\266=\362\265T\275,\242\267\275Y6\370\275\255?\212\274$\253\005\276\273\216\312\274"
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "\244H\260;\334\370\213<\213\"K<\375\345\033\274\372\374\240\274\364\206d\273\243\222\231\274nA\377\274F\372\347\27381\017=^\200\007<\362\017\333;\356\261N<\004\014,<^\271\323\273lX\355<F1b\2741\037g<\325\261\250\274RP\205\2753\367Q=\n+r<\245;\274<\202\035\231\274+\263\233\274\252\222\034<\222\007\272;{\327\276<\206?\016=D\207,\274\277\304\224<\201\'\257\274m#S<\001\000};\223\205\244<!\3774=W\233\007\274\206\\\256\274\023=\255<\244BM\274\037\236\247;\354\'4\273\372\337{\274\275[\215\274\361\271\237\274\331*\343<Le\350<$\247\300:XJ\276<\317\265\023<\034\232%;195=\037J\230<N\340 \274C\376 \2721\337T;\273\335\347;W\253\312;\177\310\231<\034\010\036=H%H;\251\350!\274\355\374;\274;\2623;-\025\353;.\205X<\345\346v<\207bk=v\206\014\274\216\211\313<Z\333p\274\343\257\215\273T\264\r\274p>\332;\241%\230;]9X=0>\211<I\342\301\273I\241\267\274u\262\001;\335\026\237\273\033v\361<\251\324\204\274\320?\227<@\010\357<\356\3723\274\212.(=&\337\036\274\267\332\255\274x\353\212\274\313\3272;gd\220\273\264\351\222=\265\"8\274\313*\034=\350\037\217=(X1\275x\307}\273\001\004\300<g\366x=\223M\341;1\262\n=$\204\262\274x7\343<\346T`\274\213\\\241<<\210\014\275\236g\240=X\3728\274\226<\204;\233\371j9\322\014|=s\026Y<d\035:=\342N\237\274\333\255\205=\016\320\245=\344\257\t<\337{\227\272\220\232\313\273\340x\212\273T\373\263;\265S\001\275\203A\037=j39\273$\312&\274\340\023\320\273,y\244="
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "\205\366\314;\347c\274;\023\304\204\271E\236\336\271\276\252i;\254\240\034<%\227\225;>WV9\276u\036\271x\241%\273\333\211\352;\272\262\';\230\351@;\322\027\020;#\241k<\314\357,;\005\204\273;]\230\220;\340@%;\374\314\352;\230\251\324;\300\257\317;j`\335;#c\245;^\334|;\353N\305\2724\207\252;\202\272\335;\204h\235:\007\245\306:wf.;\314_\355:lZ\277=\372\251-=\014\\\212<\203\247\276\273\333D\311\274\202\312`\275>\360\005\275]\002\037\274\206<\033=\322\312\333<\241;\232<5<\263\274\324of=\220\322g=\034\322\346;N\003f< [\034=\213-\206\274\034rx=\322%\340\273fW\246\274\201\024\014\275V-\204\273\313J\t<\320\240\'<\342\245D=\240\027\020\275\002\337 \275\214\242\022;\"8\010\273\331w\216;\274\340\230<\327\3025<Y\206\000<\030\313\210;\2227\034;\346\363\216<\332V\232<\375J\022<\n%z;\336\2700;.6\214\272]^]<ss\242;\247\357\177;dp\025<\016\373\251<\221u\335;\312\356\214<\234Q1<\277\255\025<\344>\211<\234q\003<\326\006z<X\374B<`\234\200<\024\223\342;U\373\300;o\0059<\327\276c<\343\\\332;\242\351C;\004^\370;\035\362^;\350{.<\213\335d<\226\3246<\251^@<&\225\216<\375\324\306<M_v<\231\226N<\272\367;<\213\247o;B>\326<\253]0<\237\007\277;hm\240<\204\227\261<\312\350)<+1\242<K\217g<\001\030\205<\215E\267<?\037c<\344s\316<\376#\301;\266\222\237<\013\326L<\260>\036:\267\355N<y\350\224<j\306s<\315P\304;y;\263<M\265\004<\327w\310\273\014m\355\273*\032\037\274\215\026x\273\206\202\357;\226P;<o\000\343\273\036=\304;d\370\246\273l\356\275\273\223[\201\273L\024\235\272\241\030\353;{\275\263:\357t\217\273\256\211 <uQj\272\033\250\001<I}\010=\365\275M\273\014\322p\274\242f0\274v\2657\274\317]4<\327e\\\273\367\004\027<\344\210\036\274$7=<R\251\006;\350S\212:G\024\005<gn?\273\006\261\016\275.GA\273\242Bf=w\377v=iKY>\025\366\245\274\334\306\371\273\307o\222=RMe:\007#\255=\343Y\027\275\000\331\003\276\366I(>,\025\243\275]\342\216\275\311}\017\275\353\252a\275\342T\260\275co\251\275\320\027\261=\221\263\224=\207O\327;\003\246\223\275\336P$>\274\316\217=qs\310<X$p\273\235\321\241=\030\325\342\274\277\347\352\274\020\232-\275i\262\234=\303q\025\274\334\213\217\273dq\303\274\321$&\274y3\240=\005\016\2579\317\341}\274,\200Y<\354\364\034\274s\211\227\274a\016\232\273\332\303I\274F\236R<\231*t\274\332\346@\274\tw\235<C\332\200\274\366\233B=\010Y\206;\324$h\274\002\006\235\274\336\232\377\274\262\227p\274C\350\273\273\212Bf\273\223`{<7Zm\274\037\325s<\250 \213\274\342\\\311\273\372\361\215\272\034\342\263\272\234\233|<\3137\250\274!\236E\275\344\023\226\274;]d=\366\205\235;\005\343\334\274\332\326\345;\243?\343\2741_\344\274\240\273\002<\234\372\006\275\351\005J<\271:\211\273\013\344\236\274\255g\347<$$\240\274{\344\003<y\227\231<\321\377\2169\032\027?\274n\017\033\275\230\260\034\274\207\030\335;\224g\324\274\325\307\333;\022-\343\271\'\302\271<\177u\022\275\327\201\r<\372i\255;A!\215\274u\200K=\243\210\004=f\273\376;\032\315\003=\324\250,\275\222\242\211=\037\372\014=\2172V=\306\334\257<{\354\327<>\350\016=\240o\243<-\010\375\273\364\257?=\326\330\213=\005gZ<\321fk=\215\312\022=\027[\251<\327O\210=\374a\257<Y\376(=\213R0=bl7=\014\252\320<\242\"&=\373W\000=G\037\200=\202\2425=\222\305\372\274\335\232\035=\037\335\306;u\253\021>\030L\230=\314\342\211=\200C\346<\315\265w\275\215\211\367\274$\310\022\275\n\025u=\351\240\360\275U?\363\275\250\317\371\275\'\276\322=\022\340\244\275\341O\324\274q!\344=\t\353$\274\2028\226=\301\242\036\276&\323\255\275\307\030?\273|\306\366\275\313\362\235<h|\215\275F\366w\275h\310+\275\001\231\026\276\304&a<\251\363\272=\262\366\337<\2654\242\274CK\021>U\314\355=\207<\231=\335&\237=\346\234\333</v0=dBX>\'\240*>\250\312\205=\211\014\321=u\341\213=GM;=\022{\315=-\031A=HY\347\272BE\002>\322\232\303=k\206a=\257q\226=G[\246=C\301\023>j\253y=e\357\001>\237:\000>\273\316h=uP\376=\017\014Y=\224\273\003>\301\346\211=L\273\323=\235^\263=\322\"\367;\276\354\375=\257_?=q\366\261=X\370\240=;Y\230=f\033\351=\327k!>\373\335.>X\314\363=\030\351\352=\020\005Y=y\353\205=*PC>\257Q\230=D\177\343<1-g>\307\001\371=W\310\314=c!5>\210\211\317=\237e\016>b\217\252=w\201\315=\314\326\002>/\377b=\312\036\034>$\354\275=\336\352\237=\036\233\246=K\\\017>\313\273\330=\223\322\366\274\220\037e>4\013\302=\252$m\2742u\333<s\2566=\227\021u\274\360\371_<\027\037\212\274\215\302F=\367\260&\273b\240\271<T\223\202<bt\302<\220\366\366<\n\225l\275\0074;\274\004M\004\275\243\255\236\274\370\340\006\275T\323\371;|\224\351;\342;\000=\316\252\r<\265\326(=\232\311\315<\321!R<\340\017\320<|\231\220\274\330\300\215\270VNm<\314\"\036=\377\363\013\273\273\373\222;\350I4;f\3149\274\203D\240\275\311\300\217<\357\332\212=7\023\'\276\026\306#>\3210\020=\210r\273\275\354$\220\274\355\213\277\275\320\250\350=/?b>\343`W=Tg\270=\036\352\264=\271#\211;\307s;\2738\255\234><\323\217\275*\002\362=\024\257\316\275\260\245\316\275F\004\251=d\226C\275Z\2575=+\264\216=.\037\374=?S\352\275\007B\211\273\343 \371<\332+\334<\007^\266\275\242o\361\274T$o<\212,\310=\212Y\351\274=H^\276w?\276\274\204.\227=V\332^<E\273\202<B\353\265<\343\255\203<\315\257\212=\346k\251\275S\211\300\273\027\222\351\274\264\373\351\274\344{\350\274\246\342\n\275\023\366\037\272#\310(=\231\216\326\274\3660\240=\2245\032=\364\032\231<\252<J=W\033\321\275\347\304\332\273\341\312\201\273\2160X=\365\324\267<uo\037\274\334\035\310\274\035\330\217\274\244\361*=[\217,>3\372l\275\311\211\t\276\303\362\006\275U\257\'=4X\312\275\206\364\212\274\35630=0\377?<nN\367=\n\310\327\275c\202\370\274\207u\025\275\351\277<\273\303\264\224;R\262\373<\332\001\002\276\265\205\270=\2335\243< b\275=\261w^=\227\223X=?\221\004>\355\252A\275\305r\023=I\000\001\272O\222\010>\340/U\274m\364\234\275\344\357\224=z\350J;\354/\006<\240m\360\273\350\317Y;\355\010\205=f~\372\273\002xf<{T\230\274m\331X\274|\010\341:\206\027\331:b*\025\273}\006\003\273\334-L;C74\273\3178b\273x7_;\207\231\"<]\266j\273\202>\020;\010-\361;!B5\274\304I\324\273\025\241r\274C\370\204\273\013Z\241\273\375\307\256\272\335\336\335:,\3033;\356\370X\273e\232M\273\205\363\235;\370&\022\273\340V\014>\336\017\2339y\362,\274\021\026D>^\033\217=\302\330\001\275Jo\244=8\032\030\2757s2<\347\354L9\346{\223=\032<+=2\335\013\275\200\235\316;\234c\336\275\373\271\231=\310\374\236<\316pr=\261\312\352=\t,\014>1\303\202\275&G\355<d\247\005\275\334\302\200<2\207\237\275\265;\004=.u\200\275\346\010_\272\335\000p=\234\210\231<h\373\230<\340\205\276;\252\220K<4;|\274*1\000;\246L\264\274\274\376c\274m\225\250<IR\336\274\264\365\307\274q\321\325;\322\247C;J\262\270:\201$\361\273\300\355\210:2\336j\274[S\017\274t|n;\252\276\311\271k\301\351;\0329\255:@b\232<Ap\264\274\371\311\033\274\314]I\2745q\'\274-\374#\275F\272(;#\332\375\273C\004\254;n*\023\274\331./\274\345\302%\272\220\017>=42o<&\264\302\274\376\000\307\273SI#\275\032\003\231\2745X\224<Sa\211\275\3613\277\274\321\303\301;*5\014\273\035]\350\2732{\375\273\023\037\377\273\002\246\250\274$!\304\274\373{?\2759N\001<\036\017\004<\242+\220\274xH\324\274\r\361c\275\025\033%\274cf\007\275z<\240\274\215T\370\274$\333k\274\201\303\342\274&\213\001\274\371\310\221\274\351\331g\274\"\021\324\273\337uC\274p[\272;\261\022\307\274\'I\253\274\251M;=[\240\215=\346L_\274\201I\305;\215\374\005\274t\307*\274\237\307>\274_\0310;1\004\323<T4\357<1E\035\273\251M\023=k\262)\275\354\357\237;\364\024V=\225\356\023\275\277\321\336\274\326\213\374\274\221a\241\274\257\010\364\273q\265F\274\014-\273\273s\227\266\274\023\027\021=\030\365\013\274`VT<\030\222\347<e:\n\275\364`\212=d-\340\275\345\327\033\276+)\255=c\326,\275E\321e\276\354G\230\274E>\020=Y\230\026\276?\346H;w\351(\275U\272\363\275\262a\243=vq9=\237\354\000=hK =\245\235\321\273\333<B\276\272\006A\274x\274\366\275\260\004\214\275\333\367\312=E\206\371\273\005VX\2768^\346\273i\321\374\275\"\217\222=\252.O\275\371,\034>\336\350\221\273[,\237\274\032l\024<\232\362\244\274v\325\356<+x\261\275\322\3355\275Lr\265\275\243\370%=\n\003\002\275]O\244<x\016\225\270i\221%\275P\236\026\275\005\347\t\275H\0365=`t\325\274\266p\345\274]\226W=>\"\341\275\332\241\025\275\216#\247\275 \t\321\275\324\345\033\275H\352\275\275\274\366\305\274X\363#\275\317v\034\275\273\221\"\275\311\323,\2752\224E=\335\2746\275r\007b<\267\362a\274\270\010\216\2752\374Q=\372\262\r=\373\351\034\276\360\177\364\274\313=\031\275}j\332=9\351r\273\361\265\003>\210\232D\2731x<\275\225\314\276\274a^\257\275Z\214e=\300f3\274\351<\327\274Kc\230=\253\262\243\275\370q\235\275\356\202\\<\342&\251\275\353\372o\275t_\334\275L\353\224\274>\263\203\275\213\224\303\2754\037\036\275\224@\330\274\301\374\201=ds\232\275\231\246\342<,\267\210<\344z\231\275\366\222\037<\022\036\344;\256\317\206;\270\307\263;\000\306\241\273h.\227<\235c\374;\266\275\204<e\334\357;ZE\';\005\362><_\256\324;\261(\246;]\200\337;\224\223\337<\371\206\017<\322\034\200<\\E\210<LG:<r\306S<\204\r\207:\n\002\216<\017<\200<S\335g<\330nC<-\327\016<w\nO<\205\317\202<w\331(<y\301\205;Y\007$<e\237,<\\\013A=\017\'E;\322\034\334\274\311\247t<\002n\'\276\r\274a\275^\344\021=+\341\214\275\263Y\275<B\0170<\007\3078=\303\014\250<\032\3539=\331\255\334<\225\367\031<X\237>==I\232=8S\233=^\343/\275\2461\271\274l\364\031\274[\225\234<\345gD\273y\322\367=\374\321\017\274c\372\343=\230\354w=\n*+=\201\305]=m\204\033\275\304\221\275=\n\356\240=N\350\227<\324\010l<\215\2110<\253\355L<H\200\263=g\243\027=\200\266{<V\316\377<K\033\203<^C\336;\267\237\347<L{K<s\361\025<d\247\327<\002W+=s\252\232<\246P\027=J\240E=B\221\235<\274\341\032=\371r\226<\265\370\030=\334T\306<\017\221\034=\374\006\267<*i\002=O\300\327<\233)\351<Mt\255<\204\222#;#\221\276<\212k\262\273\255\2405<4$\252<\304G\341<\257\276\346<Ji^=\202\230|=\202\327\311<b5O=qD\353<\240\246H<\241#`=\274\351\312<\265\316[<v\215Y=\245\2634=\217!\301<\330\227e=\235\321.=\227S\020=\375\006-=Q\226T=!\377\217=\300\372\245<N\033J=U\036\n=I\216\341;\303\340\022=\206\247O=&}\001=\240\361g<\311\340M=5\"F=\326\270\257;,i\216\272\331.4<\214Du\274]\362\003;\231\205\201<UH\240\274J>D<%\342M\274\220\251a\274\274%[\274\365\022\270\273\242\233o\273\276V\250;\272\263;\274@\325?<\357\225N\274Z\332_;n\205\005\275K\236\251\274\335\010\307\272nG>\273$Z<\274\323\274\333\274\177\242q\274<b\207<\364\0051\274\272\"+\273\031~\260\273\301\215\373;\357!\316\272\010\023\261\274\305s\373=\031\022\261\274Z\330n\275\242D\350=R<f\276\020D\n\276\177\355\241<\325\330\205=\267\271\334\275R\240\223<\340c\241=\3158\034\275\342ID9\274I\264\274<Da=-\344\335<\344\010\203\275S(\332\275\306\255g<$\205\"\276\006K\204\275\3729\021=\264at\275A\354\273\275T\315\214=\003\345F=%\026\302=\376},=\203\216\317< E\225\274L\272\223\275g\215~=$\316A<\265\325\035<\325\304\317;\267)\257\273^9u<\220\275m=J\006\t\275\204\004\365< \342q\274k\376\310\274\376z\311\273\332\273\350\273\303\312\255\273\004L\275<\305\034\304\274{\356\020=\326*\331\272\322\363\002\274\014{\260\274\374\r\360\273\373`\200<\'\303f;\023:\227\274\\\3652<\320\217\230\274Q\304J\274N\n\346\273\232g#<\336\335\005\274\272=\203<\205Pg<\\\363\020\275\233\344\200<\213\035\242<\300q\225\274\255\310\217\274|\3561<\231\030\311<]\343\225\274\025\016\215=p\326Z\273\334\233\001\275\316-\226;4~\234\274\317\230\372;{b\254<\033\2355\275\361\214M=\336cH\274\033\360%\275\330\357\256<\216\343\006\273\377\332\275<\233\017\325;\334\322\327\274<f\321\273e_\036\275\303\321\233\274\005\374\264:\263p\342<,#\327\274\350D(=S\373e<\276\327 \275P\005S\272\002\032\034\270Y\307%:\247\311\007;\336sM;\316S>\272\017\255\020\272\033\320\277:\010\260\221:\312g\03480\307b:d\221\017\272\2238\236:\255\013\035\272V\315\310:\314*3:\270z\014;\005\000\301\270y\311\212\272\331f\027:h%\032:\302\355\252:\311\206\354\270z3\023;\370j\353:\224\213\275:\014Qr:\334\266Q\272Z\216\324\270\354%\3369Q\336\021:\200\026\231:\220+[<\270\233\020\273\r\202\013\272\003\220+;\315\005\202=\324\014d\275\033\325 <\035\260\213\274y-!<\234[\260\2731O\271;\010\200w\273$\370\023\274\020\313o9\2436\376;\365\350\240;d\2328\273\363\367\024\274\333V\021<\267O9\275\370W\345<\224`\254;\331\230\006\267\375\373X\273\264\313\003\274cV\307;~,\311\274d\237\356<\364T4;\214\355\226\273\332\006L<j\221\306\273\234\356\252\272\372\351\0238\246H\210:\303\2438;\374J&;\277\315\033\2734\346\r\272la1;\354\377\301:\017\370\3758b\325\254:`Y\'\272\213F\306:N\331F\2720\236\t;\366\353}:\341z:;T\235\016\271e&t\273\243x\324:\372)y:\243\224\010;\254\276U8\256\266\275:\334\0245;\312\'\2739\341C\206:s\325\236\272\373\371\001:\340]O:\0002\332\271\312}\372:\372O^\273\370:\317\272\262\004\320:\314\317\201;\035}\336: \0146\273L0\225\272\2110\271;Z\251\000;\227\265\213:GpK9,\217\022:\356]\301:\374}\2318\367\304\233;-:\261:\375]y;^\373\3639\327\014\230\272O\337\317:I\255\024;\321\360l;\030\313\031:\327\356:;\375\2735;\276\222\306:\306\237\346:@\2730\271\262\367R\270\257\351\223:w\254\213:\367\0208;fI\034\275^k\245;\351\233\027;\'\003#\274\306\241\227\274K\373B=\312U\016\272!\214\256<\370{T=>\035\r;N\371\373\272\343\255\333;|\361$=U\017\023<\3423\337<\203\217R<q\230\312;1\313\027\273\326\263\350=\220\177g\273b\035P\274 \370\313:\2315\250<b\356\375<\365z\307<\"\260\225<\3139:\274\362\347\032<\205s\244;\275\325\207\272\225\223{<\003\232I<5{\216\275K\003`\275dS\354\275\261n\366\274\201-\322=\362T{\276\316\251\365\274\375<\211\275\333\205\'\273\032\212\236=wDZ=\352\202\205\275\316\245w=\306\217\276\275\332\331\027=\037G\t>\377U\335;v\317R=\205\004>\276\210g^\274\211A\201\275Y\340w=&D\207;hq\013\276\347FC\275\000\332\017>\301\004\366\2745\353\342\275\253Q\220=\331\310\232\274\204\003\037>\005\370`=F\255`\275W3\004=7Pq\274x1\347\274\2644\303=\247g\025<\254\"\203\274\r\t\023=\003\323\256=\270\321\240\274\242\230\317\272*\313\377:\277\374\202=\370F\303\274E0\025=0\005\324<\326p\272\274\311\024\036=\002h\314\274>\256\206\274V\270\325\273\262\360M\273\245X\347<\225n\326<\212\261\347<\233\350\003=\373%\262\274\332T\325:\277\272\375\273\353%\\<\034\375\"\275\301IL<\265c\263\275\330\243\t\275\273z\207\274\272\361f<k\231\324=<\277\266<\234h\212\275\330@\243=c\264\227=\212\321\240\274\255_\251<\241@4\274\343\245\177=\024S\246\273\356Z)=\035\220\r=\247\024\257=k]\"<=\373\273\274\230c>\274\"Z\314;\333\317O=\210\335==;\2761=\322 !<6XV=\373z$<\306(\265<o\332\337\274\003\341\312;L\211>\275hA\203\275\310_p\274\227by\273\270\0020\271)\230\321\273\3142\372<\233\322\236\274I\2554\274fT}\274\216)\356\273 \252\313\273\307J%\274\013\017\257\273\002\302\017\273:\263\035\274@\200\350\274\221+9\274.\304I\274s\277\206\274\333c%\274k\334\235\274\224\333^;\346\215s\274\372\030g\274z\n\220\274\370\'\320\273\210\235\276\273\274\310\014\274\030+\205\274\216p=\274\237\206!\273\324\237S\274\274h\'\274#\321e\275_\316\252=.25=\031\032!< I\335\274\356\332A=s\256\266<\265\301\320\274c\260\330\274\\\214\310\273\306\237\271\274\265f\004=\t\351K=\001j\222\275\3761\270<\220\262\270\275{\000\324\275\225.]\275\256t.<\032<\232;aG\244\275\016\336\235\275\353nv=n]\312\275 \352^=\013m\302<\'T\363\274\246\022\023;\323\335\334\275\331\320\222=\346%\036=\311\231\313\275\315\324\341\274\357\025\272\2748\246\320\273h\274:\274\251\335\230\275\313\241s\275\037\241\256\274\374\256\027\275t*\037\274\373!J\274\211U\374\274*v\350\273\252\322\017\273\004b\363\274<\261/\275\253G\000\2747\026C\275m\366?\275x\217\014\275\301O \275\260%5\274\250\000\017\275\376\264\257\274|4,\275\301\324\212\274\260\210\013\275}\312\255\274\340\'\353\274J\"\327\274\021\350\220;x.\'\2754\234Y\274\300l\275\274\302\005\340\274\306\245\202\274\tF\350\274\305`\232\274+\324\213\275V\250\345\274\357\346\213\275\225<\247\274\016`\227\274t\331V\275\360)\264\274P\t4\274\363Gu\275\217\232/\275\357fJ\274cJ\227\275\304\243\033\275?)I\275,\024\222\275\237\024\026\275\002\221:\275.$\206\274\377\360[\275\266\246\350\274\346\320\317\274k\363\317\274\272\304\003\275\345!\376\274\030N\365\274\234\310\300\275\240\354)\275\347\211\222\274\266\224I<K\315\334\274y\376[\274qx3=\013W\274<\345\375\"<\213\006\r\275\367\260\023\275\233\326s\273\206\nJ\273}\000\013\274d\253J<\000\270U<R\313\320\274\351\223(<\364\337\333\274\337l\234<Dc\266<\326V,\274\330\352\301\274zM \275\030\260/\275\323\223\225;r\346\026\274_\373\303:\305\226\002\275_ha<\211c=<\343\361\300\273D.\214<\370^\020<\177;_\274\372\266\300=\320%$>\376\262)\274\022H\r>\370>0>v\320\006\275v\017\033>\223C\247\275\266\324F<\007\360\215\275\277X\236\274\210\353\304=\377\354\321;\362\000\006=\325}\373\275|$\304<8\r\r\276\321\3431\275\203\n(>\003\366\026>0\214\274\275\225\000\256\274\225\247\253=\270+e\274\223\304\002>\373(O=\013\315\323=\344*\020\276\244\237\212<\235\261|\275g\300o=\255\331\266\274\375\210R<\376G\206\275\321>1\275\332^\302\274\272\262\032\275\252\344R;\3323\\\275\340K\210\275\026\227\260\274\241\376\026\275\311\212%\275\332\255\016<\312\257\362\274\373\336\"\275n\224y9\202\256\367\275l\375\360<\3632\236\274\301@\032\275\177um\275PR\323\275\332\203h\275-\204\264\275\301e\313\274\005Ml\275\365\267V\275\313:X<\370\010D\274<w\272\2744C\255\274\305\322\226\272.\242\370=\325\023\262<\202\247\350\275L\037\237\275g\014\232\275\303\016B<\010\373R<F\031\217\275\364*\315\275D\2347\275\302Z\026\275\035\246\257\275\217|\202\272\260\211\023\275U\201\007\275fS\017\274\025l(\276\276\204@\274\\E\323\272\027\317\036\274n\014\007\276\002jQ\276\252^-\275\276\357\247\275\271\257\214\275\325G4\275\260\013u\275+\347\014\274pD1\274\237e=\275\352\370-\275XFH\275uR\234\274[&\030\274\275\251\013\274\304\"\203\274\r%\201<[{\341\274\020*\240\274\235\346\246\274t(\022\274Z\242\036\274N\370k\274r\247\033\274i\264-\2739\027u\2740\263\033\275\203,\177\274\023-\267\274\316\266\244\274P3I\274\266\235\014\275@\251/\274\326\365\314\274\331\334\276\274\317\264\275\274\321\376(\274p\210$\274\330\342\230\274t2\261\274\247\310\201\274\016\230\373\273)>\235\274\230\317\354\273\017\243\200\275\003=D\275\302\347\307\274\363\264%\275F\342\014>\346\242\347\274\017\202\314\274\276\341\022\275_\r\357=(S\200=\0133\325=\307\347{\274\211\251<=\247/\243\275KTD\275w\353\210<\t\202\025>\020\331~\274\t\2303\274\324\260\247\275\340E\260=\241\247\260\275*\277\201\275\017\202\002>p\324\374=L\247A=\221\3004=a:\267\275\005E\017\275\260q\243<l\021\213\275\322D\211\274G]\017\275\371\311\346\274\026\336I\274\350\202\357\274\nx\215\275C\243\217\275\204\206\037\275|F<\275Lbj\274p+\303\274\272\273\023\275\247\300\257\274j];\273\301\000F\275l\032s\275\312\243\017\275=jH\275\256N=\275\303\207A\275\312m`\275X^\'\275\300\375L\275:\251\023\275\255\'\213\275U\240\302\274\014\230\'\275\026\242\027\275\216\253i\275A&\020\275\033\255\005\274^\325\214\275\327U\276\274d\347\347\274\357LL\275\214\303R\275\037\3559\275\304\227\332\274\250?\267\275\035~\202\275M|\231\275g\2373\2758\352\030\275\000w\204\275\363iU\275\033Y[\274u.\263\275W\002\206\275\320=(\275\211\326\205\275UIk\275\024Yo\275\010h\266\275\262\037\243\275\306\207\252\275\t$\356\274\ti\241\275\377\002[\275x\306@\274\022\2151\275U\303h\275h\265p\2752\000S\274\037l\310\275$\357\324\274\342\000\276<7\371\335<\331&\017\2748\210\000\2732\020\257<t\357\030<\205\323\227<*E\313;\353\270\272\273/B\265;a\002p<\023&\010<\007\277\322\273\035V)<\300\341\332;\\}\016<l\ni<Hq\232<\260G\235\274IK\245<\2158\367\273\034\024f<\343)x<6\037\221<V\032\241;\340\374\224;6+\230;\364@\217<\334\370\311;\004?\010<`us<\376?\222<\237\315\204\275\274\316\224=\307\005\247\275\201\013\300\274\177\226n\275\010\306b<\021\2440=\342\225\023\2758\232.\275\307\350\242\275L\026\335\274\002\234\306;\247s\363\274\267\303\355<]!\"<\344\336\223<?\301\356\275\366P\226\275\261\311\242=\2439\332\275\273\303U=\317\234\n=\3509\333\273R2\026<Y]\301=\032\311s\275\324\0012<\2131O<\306\202\334=\216\371t\274\264|\203\274\'k\216\275\353\313\022=\221\362-=f\r\313\273\336\272\r<\312\217\234\274\016\230H<\'w\006=\222\2309<\273\322Y;81\216<C6\274<\002[\032<\272`j\273\306<\254<]C\302<Y\256\221;Ap\256<\376\230\372;\235\230\037\272\373C\316<6\365-\274UH\n=i\233\323<\006?\230\272\024\311%<\177\264\026\274\2343\021<)P\333<\305\303\207<0\354$<\304\204\317<\343\211\324<\322$\226=\336!\252=\2378f<5,+<\275\000\231\274\261y\312<ZJ\224=\362\2345=\206\373\016<>\301\374<\014\264!=\036\\\366<H\206\260\273DpQ=\357\363\322<\302\374\217<4\034\226<6\336\362<.\220l<\026\276p=\321\036\023<)E4=\330\234\215<p\003\271<\301\000\000=h\336f\273\353\234k<\002G0=2\300\357<\\\262u<\354\276\010=)0\013=i\3104\274\255%\311\273\275$J;=\210\317\273>Z\313:Zv,\273\262\240,\2741\373\035\274\022,\002\273\037\356\000\274\3617\203\273tV8;AxL\273\326!\016\274\234C\320\274\322c\000\274\344\374\t\2741<8\274\246L\271;Y\020\\\274\030\30509U\317_\274\364\2060\274\211\232\251\274\241r\365\272W1\202\274\321d\322\272|`\274\273\204f\031\274}\206\271\272\017\233\330\273n\tK\274\035\024\016\276\237\'{=\350\365\'<\375\370w=\256\036\024\276\204\252\001>\234y\361=\373\001\014>\3404\275=\361O\340=\236\'\267\275\306\205\205\275\372K\331\275\344\231\214\275\207\013\202\274k\371E\275\235\316\275={\267\365=\323\243\342\274\247\023,\275\363>\365\275q\242/\275\340\n\261<\367\023\024\276\373$\360<\351<\354<\026\204%\275<[\341<\252OH\275@\273R\274\327H\302=\204\267\215=\026%\266\274\330\363\253\274\264\034I\274\372\264\221\2747\265$\274z\031\026\275\025\241\337\274\235`\t\274\360D\236\274\320;\271\274{\211\206\274\032\344\327\272q\220(;\216\017\360\274Y\363.\275\253\364M\274I\304\027\275\250\345M\271#\332\013\275[/U\275qrJ\274\324\307\365\274\327\nu\274V\324\010\275\033\260\353\273\310\352a\274\0102\007\274\025\036\357\274\206\205\267\274\360j\022\274\211\017\371\274\3407\017\275\374\267\342\274T\260\005\275\2469\330\274\353\200.\275~Z\302\274\243\214r\275\253\3637\275\310\246\253\274\030^\364\272L\241\341\274\303\033\000\275\237\353\210\274\311\375\200\274\300\252Z\275\376\255\"\275\314\274{\274\375S\316\274Y\225\200\274\351\347\036\275_\202\341\274s$\335\274zRK\275A\256!\274\272\372\031\275\233\357\177\274\303\203\212\274\361\305\030\274\r\223O\275I/\361\274/\272P\274\034$t\275k^0\274\031\035\026=2\025g<\335\203\205\274@\340\001<\006\200\232\275\224g^<h\225\345<\326:\276<\370\262\242\274\255\005\247\273\032~\214<\235\030`\274\232\204b\274\222\354\311\273\210\325\271;f\326\252;\013\324\266;\034b\270\274\225\"_\275\264ZT<+\020c<#n\365;\262\351\316\273\332\221v\273g\276\213\274\310\343\227\274\006!\255:\271\370\221<etE<\244\317u:x\2342\272\236Kp\2748c\216\273\257\256\005=\21093\276\303\000\330\274\224\367\355=}\200\035>\321V\234\275\007\352\273<\236\322\307\275o`\330\275\251\301H\275U\207r;ai\316<\3469\357=\230\"\017==3\206;\205\014\342;\264\341a\276\202\357$>\356\224\272=\373\3062\275R\310\301<\313F\266\274\\x\311;\262N\241<v\3233\276\331\247\371;\252\372\327\274^\322\330<\327d\306\2733i\272\275\322\343\021\275H\036w=\266\320\r=\345\202\223;1\217\254<\261\234\373\275\240U\317=\031Db=kV\031=\221\014-\275S\210\205<\314\rE=#\2535\274Db\270\274=\333\324</\333\300\273\260\265L<\311\264:=\377\372\305\274\231\003\263=\n1\034= \212C=\016\272\\<\250\222+\274\013\230\257<\202W\235\274\341\342(\274~\234\226<\344\240%=k\254\370<\271I\214\272 \326~=\232\3239\274D\237\343=1\221\265=\372T\304\274v\262\031=\033\302\255\275\373X\304=\303\336\300=\272\035q<@\306\213<H \226<\270\253\205=\307P\337\274\302\210\245;2\2478=_\202\251\2741>\020\274\337=J\274\022\214\234\274rr\307=\007\t\341\274\373\252\236<<\025\344\272\344\271\305\274C\006\270\274\3508\274\274)\232\023\275\354\374\244\274\235\035\014=\313\270\030=\250\240\252\273y\025\n>\221\303*=\252\203\357<%\221\023<\342\313\014;\226\266\256;%O\251\274\233\330\221<\374f\223<t\226S<\2306\337\273\244\245\257;\304A\201<[<\255;\372#c\273\021\237\316;\350\204\037=\356\3705<2\\\231<\257\271b<\274\275\371\273\337J\367<\265^\370;\300}B<\271\360\260<\241I\246<2\'\003;\376\305\302;\220P@<\010\233\357<\375\226\202<\320\223\213;\013\016\211<\201\223\030\272\310\355\212=Bp\262;\212\005\224\275\264\203\217\275\300K\035\275\266\261\022>\352\335\360\273\210\205;=n\200\341\275\334)x\275-\362\246\275\236\376\224<$X\343;\260\231\014>e*\211\275\241\006{<\037\2564\275\317\215\353\275\210\255\n>\247\300\275\275\203\356\316\2724\353\001=\006\025X\275\345:\312\275\2664\177\275T\223\251\275\320(\246\273\014\274\031:\344Mo\273\223`I\274\303+\246\274\035-\000=\315\346Y=\361\201\362<\346\211\232<\372\014u<\t\234\031<\027\n6=&G!=\004\245\005=\305wB\2733\213\247<_!\031=\311\037\221<C\036\325\273\201J%=?\177{=\220\377\251<\024\320f=\206#\357<Z1_=#\216z=s\234\317<\177\013\005=\211\022\t=zgf=K\214\016<9w\353<\240!\323<\215\334U=\277Q.=\234\2009<\353\030~=\002A\023\274F\326\243=\237\320\216=O\0046=9H\002=r\365\337\272\346\313\320=K\261\256=\001fZ=\031O\363<\325&\006=}\032q=\004\336-=\256\0147;\tW\260=\207s\177=k \344<.UA=R\2122=)N\231=\006a\274=\031RN=N8{=\241$\304<\200oi=\365\220\004=*\250\014<\270\251\333<\244r\225=\323\020\221=F2\224<\307K\330=*\265\002=\212\203Y;\030{\347<F\2311\275\026B\013\275\224\352\324;\267&\031\274\010\273D=[,F:\206t\244\273\267$\254;\030F,\274\376\274\344\273\220cT\274\2053^\274\205\004X\274\355\214O\274\257.5\275\021E\234\274\345m`<<\266j\274\205aL\274\276\2368\275\026\344\325\273\204\265\235\274\304\003\364\274@\212w\274\313\2763\275M\301\210<\345\327\037\273\352\303\253\274\321\306\240\274\030\247\007\273c9d\275\251\300\367=\327>\233\275\217Q\225\275Ym<\276>s@>(\311\257\275C\352\017\274L\353\346\275\034\320\235=\017\337)\275\017a\322<O\'\016>\353*\215=p,#>=\243Y\275\377Q\201\276?\260\037\276Vc\345=\312d\316\275\302\362:\273I\225\016=\310\327J\275\201f\'\275\204\036\370<\307\005\010=\035rC<^&\022;J\337\200>h\235\014\274\265#>\276t\305\300=\353\362\024<\"\242\266<\205@\214\275\240\355\250\275|\204|\276H<\007\276\374\324l=\2417O\274f\326\206\274\007\030\247\272\033\300?\275\334&6\275_\032\203\275\375:O\275\3579\t\275@\377\n\275\032l\014\276wv\203<\207\000\353;oN\215<\204\277\000\276\tF\344\275C\"\t\274\255\227\275\275rs&\2755\nP\275y\021\241\2756\373\267\271O\240\213<h\362\177\275\321?\027=\207\347\223\275\363Bo>\226\255\t>\310\343\t\273$\365\204\275\233\243a\276B\211\226\275T\314\013>t\235\231<\361\205N\275?\313\202<\346P\255\275\365\273^\275\024\021\231\275(|W\275%l\365\274Q\330\230\274\216p?\276\357\342\215\275a\204S\274)@\367<\373R\n\276\336\366V\276m&W\274P\272\361\275\2355c\275\370\354 \275\272w\273\275Bwn=P.\275<\3314\216\275TK\235\274&l\232=D\340\017\273\226\346V\272fe\222\272\241V#\273i\370/;\251\314\356\272\225,\230\272\277\361\355\272m\354\3678\2303\217\271\370\323\322\272\327\314\377\270\234\200o\272\310e\0279+w\344\273\353\250\215\272\321Ci\273\351\004\332\2713\232\1778o\031e\273\220\364P\273.H\340\272\366l&\273Q\035;\273V\036\307\2727\005\017\272\220M\271\272\335bX\273\271\'\310\272\032>H\272X\210#\272+\247U\271N`\256\274F\235\231\274,\336\337<\025\033\322<\373\252\324\275\314\'j\2753\3158\274\222!_<\223=\326<\023s\305\274\273+\350<v\025\335;q\n\023;pS(\275%\255\026\272\324\246;\273\262^\324<K\272\375;#\266\251\275c`)=\325x\207\274\032]\t=\r\224\236:\"U\370<\357N\274<\345&\314<\256@\010=]\347\203\275\3633\277\274q\255\364\273\267UI;\t\321f\273\377\250\233\273\306\307\031\273\026f\222\273\027\016\230\273\271\260\307:\373~\371\273n\242\213\273 5\210\273\310F\240\272\007Q\010\273\206\346?\273\223\340\236\272\324\033\242\271\273\302J\273\333\330A\274\260\233:\273?C0\274\216c\017\273u\236\237\2737\236\"\274\226Mk\273Z\010\254\273\216\365\222\273\342\371\033\274\311\227\037\273\304\204\255\273\316GJ\273\027\277\001\274\350\035\316\273b\212\340\272\002\213\344\273\030\375\343\272]X\001\274X\306\262\273\265m\022\274\000%\036\274\007p\024\273\357\004V\274\001\034#\274\2573J\274\331\007\332\273\255\n\212\273\270z\314\273\345\246\313\273\345\303\257\272\214\237\021\274\201\030f\274}\333\214\273\327\270n\274\250\315\204\273\374\244\024\274\263*\202\274\201|\001\274\271JP\274\222\002T\273S\036/\274\351\375\250\273\230o\'\273&\213\221\273\010\347E\274\365\"\035\274\217\002D\273\323*{\274\261\244\020\274%\230\265\274\252km<\260\264<\274y\372T\275\013\322\000>>Vm\274#\272\014\274v>3<|&\346\274\317\310\220\274\007x\267\274\244`i<B\2532\271Q\320\271\273Er\364\274\033#\224\273Le?\275\312\316-\275C]7;\201\360\022=9b\004\274\365P7\275C\203\003\274q\242\247;\227\2015\273\306\367\274\274f\254\357\274\023y1\273jA\311\274\320\007\333<[\316{\274\377\327\004\275P\357\022\275\003\314\363\274\222\266\024\275K\031\300\275\005\3766\276l\250\367=hu\277=\275\0015>\020\016\266;e=\t\275\253L\213<\177lN\276\324+*\273i0\252\274wF\214=!R\020>?\316\343\275\335\035\272\275S+D\274\323tl\276t\304\363\275\350g\201\275\261\210\230;\311\231r\276\236/\177=\377Q\013>N\221\036\275Gd\335\274`A\375=O\302c\275j\355\303;\364\252&\276F5?\275*\303\216\274V\213\010\275\245\245\266\275\361\016\227\275\002\373Y\275\371\315\264\274\234\030u\275\036\202\307\275o\3174\275\334\315\247\2758\237u\274,\300\220\273\005=[\275\366\333\035\275l\'\375\274\257\303\025\276\366\252[\275\222t\242\275lj^\275\326\325\343\275Kt\303\2759xJ\273\334n\362\275a\360\361\274\241\245\013\276\345\340P\275D\030F\274\337x\205\275\340\304\322<\032\373\007\275V\211\270\275\232\300\202=\373\002\177;\330\t\211\275rP\003\276\177\000\256\275\377\022<\276y|\014\275\023\306\002>a\334\345\275\362\272>\275\234\005\r\276\034\\\340\272\211\024}\275c{\341\275\005}f\275zm ;=\345\275\275\001\201\326\275\365\273!\276\201%\245<\271e\321\275\034\202\017\276\335,(\273u1\233\275\346\013t\275xX\264<1G\376\274\361\252\032<\364\006\013\274\267\253\255=\263\322\224\275\321\2455\275\003?\215\274\272\341W\273\274\352\010;\r\200\032=\311\n\021>\036\367p\274\220M\347\273\005\010B\274\177\310^=\315\236\263<\032\256q\274\210q~<\355\346P;bO\331<\346\276?\274\r\231\006=\346?\226\274y\265\030\274q\336\014=\001\350\024=\002\361j;/[\034=df\367\273M\233\270<\035\225\342\271\3773\252\274\3719\005<\324\234@<7\213V<\235\316.<8\225Z=5u\254;\310S\311\274\005\234\253\274\360\303\014\275n\240\226\275\231t\n\276V\330.\276\r\020\306<\0210A\275\261\361\271\275\262)=\275\261|\244=h\227\223=h\305\270\275\370\255\205=\243z\036\275\357t\013\274w\324;<O\300\026>\317\377\022\276\230\201-\276K{\367\275Q\2736\275\220B\001\275\275\0078\275}l\260<0\372\002\276Q\363\024\275ILU=\0000\303\275\230\240\202\275\003H\007>1\360\364\275\234\320\022\2750R\245\274\026\232\307<\023q\255<\300\276\267\275\212k]\273\247G\223\2743\216\024\2746\327\221=\223)\r=\230\204\207\275s\337\316<\247*G<\344\317L;\317\335\226\273\300[9=\301\242\227\275Nt\005\275\327|\227;f\r_=\356+\240\274\342\013p<@\215\203\273H\276\'<\361p\254;\35512\275\n!P;\370p\201<\264e\261\273\200\332u</\336\247<x\007\3418.p\\\274\265\307\277<K\024\226=\272\014\216<\225\222\204<)\336\024;h\263\325<\016E\014=\022\2358=\025\362*=\036)\243\275K\244B=\254\212d\274\266z\334\274\257\257\307<Z$0=\360\340M\275U\320\366\272\025\230\343\275\251n\250=\222\377\243<\201\020\271<[\227\201<0-)=v\326<=]\317\020\275\350?\261<&5\323<\360\034\010=<\200\260<\262\367\003\275(7\020=\024\360\007;V\n\024\273H(\327\272\002\321k\272H\010T\275Un\263<\321\344\261;\3124\312;\355\346U\274f1\362\273N/\360;~\020\200\273,\266\251;\2063-\274\346\236\001=`\206\344\273q\260f<5\3376\274EN\030<\350\032Q\273l\257Z:@0\310\273\030\021\305;(N,=\031\322\266;\215\0148<\007.\033\274\331\313\223\272v\231\343\273\310?\005\274v\345E\274\300\001y<\246\025\274=\020Mz\275@T\t>\221\255\223=\276\352C=\010\341T\275\035 \266\275<\243\275\275\325\364\224<W\"\246\274\265\006\222<C\036\231\275vXU\275\362 \216=^p\341<\214\r\325\274\262F\326=\250!)<\026\004H\275\276\304*>7\345\232\275g\334\372<j\362x=\305\325\014>\3137\227<x\314T\275}\250\257<\021\257\357\275\037#\320\275x\325\367<\322\246=\274eq\345<\242.\375;\316\353\226<\320\272\n\274\3714\350;\203\364\313<\257\223\t=\334pS<.\214u<\036\335\301\273\022\242?\274\256\353\314<`\303\t\267\035\231r<P\263\233\273\245\225#=H\312m\274\363\223X=\350\271\216<L\221\353;\322\354\'\274\360^l<[\356<<\035\036\n<\277\3743=\0043\343;\235\377^=\365~L\274\343L[:\3339]\274\037\224\206\274/R\205;\320Z\236<z\337\211\275\365\3268\275\243|6\274\3661\006=\014\347=9w\305S=\243\320\345\274\240\244\220\275Dt\021\274\004\341v\274\302\345 =\227~\226\272\212\210\372<S@R;{4\324<,\003\257\274O:\203=\235=^<-V\020=\n\344\031\275gF\311<]\373,=\350\340c\272\325}\215<\032\266\217\273\235Y`=\001qY\274\235D\373\2746\261\006\275S[\365\274P\273\017=C\020\351;\372\315!\275\3319\220\273O\255\252\270\254\254b<Q\230\270<,:\311\274\313>\244\273A\220N\274a\231\304;|\220\343:\017W\354\274\220\333\236\273\242\022\227;\3547\302\273\363\032\000\275\251\333=;\0065\252\274\026\016u\273a\243\317\274\236\320w\274\n>\';bQ\253\273\302\036\\\274\351\235T\273\245\035\232;r4\224\273S@8\274\271x\236\274\217\376\221\274w\201\222<k]\304\274?\231\305<Pb\326\274K-\264\275\000\n\001\276\214\037a\275(\206/>-\317e\276\334\220\262=\307\237\345<\204\"\313\273N\217\007\275\332d\r>\210\354F=\016^\'\275\177 \203\275\277\243\247\273\0069t=\263\t\'>\244\271\002>j\364\243=\257\352\014\276\202`\343=\365W&\276\242A\277;\214\230\036\275c\235\370\275,\321\235=\211\224\022\275\034\345\334\275\316H\206\275r\337\002<\301\232i=\236d\324\275\356\211\217\275\235(\263\274\025\241\010<\331\247u<M\346\000\276N\177\252\275\252\333}\274\362?\246\274\227R\016\274\023\231\377\2736\030\245\275\022P\214\274\323\024q;r\202H\2757\3304\275k\375\211\273)\013V\275C]\353\274\355W\310\275\224\216f\275\031~\350\274t\000\250\274\376\005\225\274\177\307M\275\367\2478;\262Jd\274\024K\346\274 N\351\274M,#\275\360\267\001\274\324\r\206\275\020\323D=\024\345\254\275k$b\275\312\2465\274\342\237\351;\002\327\201\275C\301\023\276\376$Q\275#\364\276\274n2a\274l\2203<\272g\374\275\201\024\311\273\366\206\276\273x\022\310\275\217\002\211\274\265\374\225\274`Ur\275\242TS\275\273L\n\276\t\205\331\274\330\340\027\275^\037\311\274\270\004p\274\017T\370\274\325\3633\273\314|M=@\247\262\274\347\025s\275\202\335\210\275\\t\220<\206\372\342\275\321p\322<\260T/\274N\344\031\273\002\242\246;\250\0336<p[\307\274,W\261;\237\020\023<%\226\227< \264Z<\357Bt<\345!\000;\226\344\310;/\3637\272\260d\031<5\223\256\274\020\322\365;\232\034/\273n\tc<g\253\312;z/\014<H\2725\274\350T\031<\342\332\330\272\2766\"<8\237\003<\342\277a<H\270\340\270\246\016\203;\375\343\240;\010\301\264;\037\321\223<_oY<:\2732\273D\002\362\273\313\355\215\274s\016C\275\341\177p;/\306\220\275\033\240\260=0\334\343\273\0003\"=\203\357G=.\304T=\231A(\274|Th\275u*X=,\2040=\303B\014=\276k\360<\0359_=g\"\024\275\200\371\225\275\026\260\252\2740\374\254\275yN\354;\315G\257\274,\335O\275\216\347[\275\313\257\352;\261-\177=\301\325\226\274\273n\333\274\000`\035=G\033\252\275y\001\217\274\332\367\022\273\241}\r<\0055}<-3R\275\344z\003\272\370m\225<X\271\322<#{\215<\367\027\233<\tC\250\273\234\000\001<\265\371\037\273t7-<\376\343\245\274~@(< \r\222\274\215\373\237<IC;\274p\322[<[\375\223\274\035\312p<.\034=\271\231\362t<\001*n<i\324\223<\363=k\273J\210\255;e=\352:\312\006\026<\235R`<\262\316\227<;\301\226\274\332\230w\272\027T\330<5`s<\221!\021\275E\235z\273\214\307\300<-:==\262\315*<\252\346\325<hA\262\274\262\234\305<\246\002s\2730\350\216;\353Iz\272_\275\013<\007\330\365\2731\337\322<\216\340%\275Q\006\261<\342\337m;M\206\374<\r\027\256;\370k\302<\233\335\312<\236\312\261<Q\227\332;\305u?<\231\004\242\273\222\233\020<\375\235\364:2\370\r=D{\2559\267\026\321;\005\372\250:H\220\232;Ms\244<p\362\002;\261:\325:\r&\247:\323\306\267;^\245Z\272\036\363\314;5An;]D\224;r\203\030\271C\354\305;\313Z\274\271\260J\330;x\226\371\270\237\025\304;\372\037\307\273\277\200I<\375\355\265;\326\001\221;G2\242\272$,\003;\317\232N\27334\257;\241\013\r;\337\3556:\352[\240:\257\210\214:\217\242,\273\215\316q\274X<\226;\370\nF=5\330i\275:<\026\276\371\376\005;\230\216 <\023\221\362\274>\r\226=\235\310\";\350\036c=\372\242\370<\236\263\037\275\211\'H\274\221\242$=\253\201+<\223\263\256=\257y-=\343\304\330<~\316\334\275y\354K=\251\265\223\275\231\020\006=\316}\225<_\353:\274OsC\275\037lf\275\210\332\200;\026\377\340\272`\027\341<\345s\"=\343\362\036=\037\232\314\2717\340\030</\261\327\272\322\034\367;!e\323;B\321\221<|\235\337;-\370\261;8h\367;\275\246\242\272f\255+<\240%B<\254\227\010<q\017\002;S}\373\271H`\001\272\255b\222<`\246\005:\373 ~<\007N\211\274\365\261\264<\313\247\036<\266\350\367;\303\200?;\321y;;\216\240\r\273-\334\321;#\033\373\271\007h\242;\207B\227:\277\271\032;\234\350\004\274\306G\215\274%;\352;\361\307[\272|\236}<\216\034\276<\254\014\207<\361\350@;\365s\224\274B\243\222<\253f\355:\306\320\302<\224t\017<\203\356-<v\035\211;5\032O;\350\201S\273\206>\266<\324\371\324;\345\200\211;\271\350\246\274&E0<\253\035s<\262\003\200;\273\371\302:\216V};\372CV;\276\036\274;P\324\335\273\244\r\305;,\021q\271)\300\002<\260\022\277;c\272\216\274\356\007c\272\327\263\226;5\243\363;\340\275>\275\217\210A<\311TN\274SW\216\2736\375\010<\203\372\223:\263\261\262\273\306\004=;\211\205U<I\002T;J\"\335;\346\373\002;rT\004<\302I\206;IZ\314<\302+\264\274\r\202\202\273uO\250\273\227V\273\271\026^\001;\256\354\346;n\200E\2739\376\275\271\226\260y\271\335\222\200;\210\302\t; {\270\273&fF\273z\202.\275\227c\361\275\024\234\215=\013\345M<\005\356\215\274\265f^\275#\264\355=\016w\004=\326\376\347=\210\024\'=1\341;\275\201\272\013\275\247\002N\275\212\354\232=\335\230\217<\212\244\021=\000?/\275\260zZ>\031\203\025\275\262s\200\275\220\362\342=;\204\355<s\252\213\275\267\216-<<\ro<\24171>g\321\335\275\002\256\"=;?c=v \220\275\320a\227\272R\341\244\2754\227o\274\3508\334;\214g\036\274\205\035x<\3406h=L\273/\275t]\241\274&\002\335\273\320\321\233;\021\002#\274\t\253(\274:\254\360\271^\037\323<\0333\362\273\262\337\267;X)Z;\254\311\226<Z\307\'=\325\2606\275\356C\372\274\362\373\360\273\2325Q\273\031\377\2729\t\254`\274*=\357;\210-q<)e\256\273\273r\336\274\364\201f\2739\336;:\213\n\226\274j\256\266;a_]\275~P\010\275$\277\246\272\356T\337<c\220\036=/\352\317\274c7_\275\ng\276\273\001{\r=\331\"<\274\0057{\271\246\224\024\274\326%\367<\255\375,\274\303\234_<D]\034<\351t(=FiA<R\367\207\274\363\341\t\275H\310l\274\004\237\334<\tm*;\373\376\200\273A\216\263:\333\0268=b!\027<u|\334\274S\372\367\274\377X\350:\357\201\372\274\240\200\271;,\373;<\353TX;Z\276M;\347?\321;\234\310W\274\232.\177<[q\002<^rC<Q\251q;\2568\250;\373,\350;&\\c;\310\035W9P\341\271;\320\177\271<,\241\010<&\254R<\005\372*<{z\004<\367\240\236<\302\314Q\272\306\371`<@\306=<\245\267\212<8p\254;\266i\315;=/\336;\0006\204<\363\013@<w\255::\377\231\010<\201\200-<+C\177=\0230\341\274\217\377i\274d\274M\275\367\036\022>MN\270=1\315\230\275\027p\212\275\340Ji=\211\227\200\273\322\373\211=\316\327\326<\260.A=\035\347`\274\344\215\273\274\347\213\204=\354\234=\275w\342\226\275\361\346\330<\376\336\'\274\306\272\007>{\"\345\274 \205\362\274\213QW<\037\325`:\247\305\020\274\266\241\211=\270\007\227\274\210\357%=\242\214\024=A\003h<\272\236O=\376\035\255<m\213\201<\254\236\356;\377\022p<D\302\275<\224$\003=\373\200\205< \346\252<uf\n<9$M<\223\203\263<\354\000\032<%b\202:Eh\321<\257\302 =q\'\247<\336\336\034=\026|\307<\035M\374<? #=\241\344s<\034o\352<\356\031\232<2\2563=I\270L<\235#\303<\036\350\202<&B\372<e \333<|\236T\273=|2=d(A<\216<\231<4\233\307<r\336\332<\006D\353<Wm\240<\'<_=\351^\007=U\371@=\212s\301<\375R\223<\254r\026=\205\212\303<\354\244\300;\322\270N=\227\363\022=x\234\231<k\034b=+\201\033=$\002*=N\3726=Ov\025=6Kl=\343?m<\301`G=5#\312<o\007\267;\235R\252<\225\240\031=\250\254\033=*(8<0$}=\371B^\274\201\2476<;\321\352\271\200\252,\273^Z\\\271\231\346c\273t\237\223\274\256\271\223\273\000\243\346:\374\344\267\274\274\333\242\273\257\364\323;\372\226\025\272\031\250\267\272m\343O\273u\354\366<}\216\242\273\213\230\021<\230\007|<\224n\341\274T\210g\274x\312\037\274\207\201\376:\275\235\023<\205OI\274\341\311\222<\022\226@\274\213`k<\355\213\002\274\252\365o\272\245\261O;\007\340\273\274\225f\001<\375\241#\275o\244\245=C\351\304\275\307gZ\275\336\214\367=\364/\004\275\343\205:=\032\003$\275\364?\232\275~\267\370\274\211J\214=}S\375\274m~\255=\375\331S<\207\010\022;\302\361\306;\017\026\243\275\231\252&\276\026\2674=\333gt=t\324\334\275\345 \354\274\027\177\217\274\276q0>\372\026\020=\222\007#\27574?\275-k\000>\007+\220=:\215\007=6S\244=\025U\227=\317#\216<J\312\204\271\376?\301;\203P\377;=\246\010\275\021\372\235\275\240l\235\273g,\262:\213\305\313\274\300\005\023\274\206\322F<\223\\\227\274\275\274=\274\217\220\037\273C\014%=\346\232z\274\367^\300<\013\275d<\021\214|\275\024\030\322\274\000R\256\274x\216.<\\\346E<\261\360W\275\204\001\311<\2415\021\275\306\035\275<\240\352\243:\030kv<=\021\256;\202Y3\275\201\347-<\321t%=\377\250\244<\230\324t;\313\202\016;\347zM\274\377\013B\275@}\000<\363\353^=\2238\026\275-1\320;>\356\t<kK\307:\214\342)\274\367\212\254<\256\323m=\313\347T<eA\350\274ch\364:5\205\"=\274\233\277<\2545\005\273\223\005\026;i\016E\273\252\006E\274\311\371\r=\223!H\2756\271\275<\262y*<\224\361\024<\217\203&<;=\030\273lu\243\273\246\202d=\001\315%<>x\000\274\201B\310\273\322\302\233\274K\307\271<)$\262;\213I\356<\n\336\201\273\003\260*\274xD\371<\257\245\036<\367\312k\274\324\260\204<\341\006\313<\320\337\312\272`\324\337<j\021\221<y\214\332<\321+\025=|\333};\310\270Q<,\245\204<2\004\205<\335j\376;Q\243\267\273\273\300\312<+\263\333<\332\'\314<0\343\363\274\335,\264;\000j\037;\346\276\267=\002M\365\275\243z\264=U\026\367<>\265==N\362\005>\246\204\315\275\260\367i>\252\221\225\275\332\370\223=\032,?<j\233Q\275\311ne=jlJ\275\214\000O\276qs\254\275\343\361\024\274Ua\002<G\235\016\276p\306c<\340\313\023>C\231E=\220\254\366\275m\202\233=\371^\013>\031B\266<*A\211\275\026R\257<\376\376/=\330\371\210\275\215\220.\2757l\370=\030\031\245=\\i+=\234\250\220\274\204\331\002;zZ\t>\314n\251=E\316\300<LB\203=z\2741\274j\022\"\274O\230\325=c_\374<h\272\226\274\337+\205=\244\255\335<\344i\022\274C+z=`H\264=\274\262\n>\272d\254=\207\350\212=\272\2070=\212\232\315<\260\353\234=2\332\347;\324BZ=\215)N=2v}=\037\036^=\232>\335;\232\203\227=\304M\206\275\ri\224=\321\2651=\375\252t\274\223\352\266\274\366\265\347=\320\3371>\0340w=\243C\032=-8b<\235w\272\274\317?6>Z\245\201\2749~\244<\364\001\002>\301\366\326;\004\352\\=\326>\310=/\002\243=\t\275\'>\236\"\221=\253\340\214=\324:\246=\250\270\261<9{\211=\263\314\025<\227\306\r\275\347\313(=\022\335\214=\217\364\260=_\224\036\274(\003\346=\023\313@\275\227J\243;\001\325\016<h\\\211;?P\030;b\236\337<\006\232>\272QQ4;w&\241\272\374\326\006\274d\262\240\273\226\377h;zhN;\004\367\2269$q\n\272\033\262\327<\336n\3638r^\245;~1\304;U*\252;P?E;\250\033r<Z\303\252\272bA:<\207\314\233\273\346\243\003;\343\326\303\273\\\273\270;\264\267\013<\215\336:;\347\225\216;\210o\246\273v\202\257\2732\200\021\275\240\356\317<\350\331\006\275;\334\323\273!\373\225\275S\014\376;q/\327;q\267\223\274\025W\232\274\232Z\004<][\212\274\341-\232\274Q\253\007=$\350\020<O\362\244\274\225=\020<\206\362\231\274\314&H\273\352\220K\275S\361\250\273\301\344\024=\306\006\241\274\375\266\003\272Pe\240\275\314\314\371\274\361t\324<n\344\312\274\246\333\245<\313\003\321<\367ho\274%:6=\310\212\341\273t\244\034<\013\204l<\270\214\371;\353[\004<\240\357u=&\370\361;r\220\350;4\211\257;..\222\273\263=\317\273{%#<\361d\020<\276\345+;[\r\245;p\030\013=\031\356{;\371\204\325<x\034\247<_L\006<YP\006<8\017\351<\260\313\334;\017\255\243<\374\224q8\233\205\275;\0177\001\273\027\024\201<\2445L<\265E\036<\206\220\n<\362\031\220\272\207\262\313\273\355Uc<z\033\264<\016\360\226<\361&\212<\2100.=\306D\220<*\377a<R\347\213<g\277d<(\\B\271i\274\307<\232\264\233<)(y;\263\241\252<C\264$=M\371K<\266ow<\035\213\224<\277\322\330<\275Z\325<\010\277\364<:\021V<\233az<Iej< \254_<\277\360\223\273\016\273\270<$h\271<)^\325<WtN<\2732\352<%\227\325\272\225\231\004=\033\352#<\316\363\021\274s\335{\274\\\271\206\273\243@\376<\337\206\371;\331\322\222<\2758\227\272GW7\274\3068\345<\034\342\233;\230\200\304\270\320\305\3779:\'\217<3y5\273\341\016\243<\205\260\t;a\177\233<?M\'<\242\326\244\271\364\204\";\362\366O<\373\274\010<\332+<;\202\177^\271\240:C<Z\271e<tWC<6X\025\272\031<l<8\251\266\273R\376a=\255\357\251<\254\220\273=\375!J=\237N\030\276Ne\247=n\361\367\275\361f\354=\252\205\260\274\253e\273=\200\367\036= ]0\275\252\334\204=\205\360\220\275\004\021\333<\034{0=r\243\356\275@\303\225\275\252\355{\275\345\027\217\2740T#<>\373\212=\356\327\253<\202?\251=\360\274\225=\373j\316;\265Sh=!\200\350;\215\2546\275\271\025\272<kd(\276\302lz<\235\025k=.\266\272<\310{\203\274v\251\233\274>\360\274=*\313\202=\253\313\213<\355P\014=\352\245j;\252\206E\274d\274\211=\263tr<\013\324(\273\227\231\373<?A\307<\364\230T<\217\216J=I\004\347;\355\254\220=I\270;=\332~\227;\202/\231<\367\235~<=\013@=\241\3074<.\241$<\000\021\345<\303\356\251<\211\251\373<\006\345%\274Vl!=\235\"\215\274\311\225\214=q \023=\311?\216;\225\235T\274d\347\233=I\251\270=\230\355\245<\024\032\362;\271B\336<\365\256\272\274\375\017\335=Qn\326\273\255\245\327;=\326\214=\003W\211;\306w\313<$\364\223=\036@\364<~\230\312=\035\241\275<\27487<\271?\271<\003SB<&\016\203<\030D\007<p\362i\274\337\"\275<z\227a=\253\321==\335\202\314\273\024wK=\217n,\275\313F\177\274y\242^<\270\241\266\274)\312\266;\306\304\204\274i\242\217<\350\361f\274~b1\275\337L2\273%$\335;x5\035\2743\317\200\274\300-\236<YD\224\274\262\375\344\274\t\225G\274\3453\247\274%\014$\275\000\246{\274l\210\347\275\025\205\003\275@>\t<\341m/\275\271\331\205\274\201\360\354\274\330\200<\274>&h\275\314\023)\275\250H\315\274\257G\266\274\242y\022\274\320\276\231\274\335\311\223\275\267\376\367\275x\367!=\257\370v>v\236&>\222K\010\275}+,=5\254]\276\342\225\225>:\241\237\275\007\2777\276\357\014\302:\1776f\276r\370\'>pPw>\346\267g=\031\006\235>0\005\367\275f\352\244>t\332\257=Y\262@>\320\026\271=%w\253=\336r\t>\210D\223=\237H\035\276\'\257\205\275\227\200c=\323@\305=\343=(>\267\353b\276\0009\273=\023r\206\274\325\232X\273qN\343\275Q%\030=\203\026\373\275\266F\242\275\005\014\317\274\270l\257\275\230G!\271\025\312n<\031\306i\275\034\331P\275\001e\323<\212]\206\275&\345\033\275\235\346\272\275\244$o\274\261\266\013\276\317\rK\275\331\2167\276l\237\200\275EX1\275pu\211\275\263.\276\275\'B\203\275 ?b\275\310\307\314\275~o\224\275\033\335\217\275)\360\014\275w\223f\275S+\214=\245K:\275\235\002\300\275Fi\025\276\344\032\263=\032\270%\276(\017\300\274\367|m\275\034\325\302\275\327\257y<\272tK\274\304\316L\275\367\316\261\275\206\363\033=X`\001\276\331;\216\275\006\035\247\275\224\314R\275\311\364\354\2758<p\275W+\226\276\376\014?\276bb\260;\017M\214\275\325I\037\276\205;\310\275\244|G=i\023\017\276\364\356\324\275\217\252\261\275\241\272\027\275\002\374F\273v\220\233\275LX1=$55<\306\352\206\272\177\375K;\353\245@\275\244\371%=\246&\314<\037;\372<\223\322\033<O\363\000\273\r\317\252<|\023\'\274\275\306\236;nN\206;\306Z7=\223V_<%\276\306<\362\255\200;\005\212\230;\200\255\224<`\207\204;\030\207\023<\350\\\222<9]I<\216\020\251\272\037p\364;\030\227\342;<\322\277<\035X\236<\032Q<\270\227P~<\255\356\233\273W\273\330=;\267\246<\2101\"\275\022\240\330\273:\231\335\275FL\376\275q\310\241<Z\010>=n>=\275\177\t\216\275\021\362\371\275Il\240\274\323|\215\275H\273\320=y\341\246;\252\3401=27\310<%\371W\275\373\364\356\274\253\250\033>\333\200\002\275\347\356\222=\036W\306\275\026\3216=!iD\275\365nP\275\227}\203<\212\367$=\305S\246=eV@\275\222-H\274\232}\303<FB\216=q[.=\035\241\340;no\217<\316\016\317\274\347\\\200=\010\201<=K?W=\326\373\336<\266\253\351;/$==e\373!\274W\342\213;R\215\013=\241\205|=\037M\272<\330\020\233=\320\013$<X\236{=(\372 =^8\\<\3674\321<\266\257\272<\245cU=\032\014\207\273}4\333<\272YD<\020\035;=\001\315t=\001\311\024\273\341Q]=XA\025<\253\177\236=4\313F=\235\265\332\272APQ=^#\002<\214\257\014>Z\371S=Q\357\027=(\265==:\330T<\021\227\310=\252\n\375\273\000\342\345<fU\322=;fP=\212\272\023=\251a\226=\216\230\262<\325D\021>q[\367<5`\025=A\375\"=\375&5<966=\210\355\231\273\036\357\365\273\237\236A<A\177t=\331\326\225=C\213\367\273\233\221\013>yX\254<\231M)=\312\364y;\233.\372\273C1k\271(\304\r\274\033\3268=_\352\351<\302\013M\273\312\210\007\274\024\220\321:\24546<\030\301\337\273+5\036\273\351\245M;\271\025\354<s1\3279\320oL<\266T\002\274\334\303.\271\301:\224<\001\252/<!\214\031\274\354=\250<\177\003D<d\372\251\272\260\301\327\272\005\235(\272\031\327\236<F \016=\313\235\363\272\203\304\236;\205\036(\274iu\256=T\312\021>uM\200\274\226F\336\275\366\341\331\273\022\2513;\027\235-=r\306\334;\323V\307<\274\265\004=\266\230\001\276\213\345k=\000=\345\274\300U\037=\356;h\274\014o-\275\325\223\372\275\346\252\r\274\277\210\t\274\251f\231;\363\274\312;\360\'#\272\032O\302\275$~\227\274\3107I\275\204\211\001\276\200\300\243\274\306\014\027\2743\322\275=\301\\\267<\274D\\\275\245\266d\275\272\274\214=k\256\341;\234\267)\274\362\376\031<@>\334\275\324\2544=\343\256T=\355~\003<\236:\177;\026\3442<\003\333\242;9^R\274\344~\021\274\253f\227<]\224\002=\002]*\274\275f6=\261\231\311\273\246,0=]\366><]\206\247\273\031\317\231\274\353\333\333<\264=G\274E\2202\274h\374%\274\277b-\274\tH\326<\304\335\255=>>\374\273\001\216\225<\353\330\276\273\260\030\345=\345\225(=1\250\277\274]\374\301<\213T\207\275bT\227=\220\224\226=^\264%\274-7.=vG\364<w\025*=\314\001|\272\370\026\367;\257\016\227=z\"\033=\201\3678\274\005t\217<\002w\225;[O\355=\027\227\234<\311k\351\272U\2033\275DLF<\326J\237\274\367\024\260\272\345|\005\274\252I\332\274\364\207\253<p\215\265=\026\327\312\274\277\374\310=\302\302\220<\237a\256;\037\253Q\274\306c1\274\300\274\310\273\211\201k=cA\302;Q\375B\274Dv\375\273\014=\361\273\304\277\252\273\242\277b:&S\321;\231\364\022<\210\032S\274\244i\330\273\245\304\017\275\201\265\217\272\031\030\360;G?\354\271\013<~\274\037\277\206<\373\352\007\274\244\2272;\201r\270\273\002}E9\002+\217\274\357\334\016<\260ea\274q\234\214\273w\013\207\274U \224\274\324\312\306;\243\223\322\275\310\004\242\275\205t\002=\214\263u=\303\330\243\275\321\341G=wJe<\365|\342=u\351\032=f&\204<\005\267\023\274zFf\275D\"\221=HV\310=\355\n\027\276\014>\235\274\311#\276=\276\004\212\275{\244\025\275QO >\r\367\315=\026\327\255\275\307\017-\275\252Zc=\213\213\035>\230: >\030\345\222\275\331\273O=\002\264\030\275\013\036\216=@\217]=\211\220v=\371\223)<\315\366\346\274\t\020]\274\341\024J\273w\027\326=\000\345\322<\202\323n\274\230\301\035\274c\210\232\274\277M\342\273p\244\251<\354bs:qGv<\177\205?\273\007\266\310\274\236TL\275F\030@<\226c\r=\263m\346<\225z\017\274[\'\341<\346\"5\273n\306D;\257\213\242\274\335T\304;j\201m\272\332\273|<\222r\344\274\261B\207\273\227\027?\275\245\354\266:\247\341\322\274\353\014\204\275oE\242\275R\\\224<\275\375\271\274u\236\177=\314\244\303<0\251[\275a\235\346\275.\224\223\274\337\346\003\275\021\353E=y\016\2509\215\350W<\251\251\256\274|\261&\275\000\025\222\275-\323\212<2\301A=\027A\203:\250\3040\275\220\242\214<\0055D\274\327c\274;\035\0224\275\010V\207\273\026\306\031\274M\013\207\274\207\371o\275\333\345\304\274\034\231\360\274\214\205\235\274^\330Z\275\020e\201<u\020\240<ZvE<v\213-\274r\270:\275\027\243\302<q\325\201<\016\022\236<3\275\270\274\354&,\273y\313\177<_:1\273,^\230:\001\r\314;N\020\004=w5\224\274`\270\321:wC\326\274\236\265\354<\000/\353\274z)\230<\027y}<\024W\255;\206R\312\2746\220\370;c*\026\274\316\202\373\273\202EU;U\373\007<\247Z\324\273\240I 8\251\330\003<\222\210\213\274\275\337\340\275\335\350\322\273\235)\234<\305ly\275\375m\302\274<\302\t\276z[\267\275\246\205\033;Q\346\235\275O\216\021=lM\232\273\222_g\275\347W\214<\327?\241\275|\377\262;C\353\005>\323\204N\275\262\005\337\274\334\264\204\275\322\034\256=\005+\r>i\216\236=\360T\357=4\327\036=L\031\211\275un\365\274\225\326\331=\006\225\241=R\343(\275\371\252\361\275\255v\204=v\271\301<Ye\017=\261\211H<z\024\030\274-\371R\273\323\236\366<4J\326<&t\301<=\344\024\275\030\031\352\273Z\304h=Vr\334\273\\[\204\270xJ\265;\3679\000=\303\254\276\274w\234\030=4\203\001\27510\036=\004\n5\275|\351\022=\315\207\310<G:\202:\'\361\316\274m\361\340;B-\3769^\226O\274\335\205\376\272\032H\221<\377e\372\273\353I.<\203\207\264;\261\315$\273\207\305\273<\t\222%\271\202Q\250<\022\262\r\275\320\005\237=\210\361\267<\013xN\275\014\227\013\274\\\232e\2747\244\341=\342\024\277\274\344\361\372<\330\233\207;\340\003\317\271j\005\265\274zS\244=\010x\200\274x\2433=\371\223z\275\nY\002=\010\230k=|\0243\273\232\336\010\275\377\2574\273\213\':\272\2065\214\274\005\246\315:\225\035\023<Ud5\274H)*=\207h\r\274\010M\017<\212\257\021\275O\210\370\274,\255\244\272\3063\327<;nU<\371T\274\274O\274\305\274\235/\007;\235\247\375\272\365\026\202\274\336\277(\275\000X\254<>\313\223\274TW\363;-\223~<u\244\377\271Tg\213\274_\210\r<\260~\353;\235\214C\275D\302\360\274\337\345G\273\020\275\005=\206\024\227\274\365\220\351\273.\364\340\273\036\335\261\274\241\245<\273\242O\350\274\246\374I\274\000\013\247:\322S\264=bj\235<R\217\224=\246&\247\275B\344s=\222qQ\276\256\n\363=6v\005\276\303\262Z\274G\362\312=\254 2\276w\2613\275\343B\310\2744\r\"\275\344\227\246=*\233\351\274\350\037\320\274^\305Q\275\247\346\221\275\357\343M>\276;c>X\324\030\276\357x\026<xD\232=\017a;\276\327\340\245\275V/F\276-\024U\2764H\022\276\026\363\203=\277-\320\275\330\250#=\263\342\250<;70\275\2064]\275\030\274\'<\215~H\275\272\346D=\260\373\031\275K\203T\275\346\020\212\273\272lM\273>V\004\274\273g\233\275\231IZ=\300}\340\274\347\313\353;6\201^<D\237\254\273\355\r\377\273G\221\375<\303\205r<\214{U\275\341\242S\275\241,\301\273\232\316\"=[\356\365\274H\227\243\274\251\373\014\274@\024\014\275\234\030&\273\271!8\275\307\376H\274\326\367\2048w\201\276\273}\252u\275\343\001\005\276\366\tE<\356\013\210\275\317\371\235<\206aT\275\004%\346\275\201\336P<\360\007\033\274\341{g\275\177\211\315\275\207\003R=\373\030.\274\216\240\223\273f\345\264\2742\353\213<\032\000V\275\036\004\271=#\367\213\274i\036\246\275EP\345\275\344\003\216\274Z^\'\275\246|\256\275\347\177H\275\004\343{\27548\245\275If\014\275\317\215\220\275\200\214\352<G3\335<\r\344==\353\273\236<#\'\352\273B\3246\275\371\236\200\274\031\005-=\272\364\314<M\275\355;JEI\275\263\231T\274K\340\304<,\006\244;\323HE\275\343H\344\274=\210\034<\304\253I\275\376F\256\273\352~S<t&\232\274H\337\350<x\272_<\030j\020\274`\375\301<\037S\010\275Gc \272D1\030\275K\254\230<Wy\243<\310y$=\373\231\251\274\3151\356\274\342\261\261\274j\335\006\2756\376\004>\0336\335=T\277\335={9;=\331\225\232\2746\234V\276\266\2101>\212\237\036\276n <=\335\350#=\014\362\t=\240o\351=\272\2342>\252\030\314\275\224\004\002\276\320\363\274=\243\177\270=\377\337\311\274\241\021\016>,\025\003\276\013\220\374\275\265\"\007\276\274\"f=\365k\215=\203M\244\274Q\212\007=U\352\332=\n\336\021>\212Q\234=B\306\000=\367\357\236=\262\200\237=u\005\342<\274\303\273<\207B1\275\363\027[\274m\227\343=4\315x=:\241f<\320\220\232\275\232\322w\274\036\245\227=\312\260\315;\177$\301\275y\310\270;\003\007\007<O\332\227\275\360\317O=\234\031\033\274])\244<\323\345O=\225\210\371<_\\\336;-\267\377<\261\\\032\275\331S\232;P\317%\275\327\313\014=r\374\032=\202\242\346=\217\264\363\274\316\372\023<\201\355\014\275\371k8>+\320\\=A4\330<\312\316\260\275U\363\306\275c\032g=b\036\317=E\223\322\275\355\210\261\275rQ\247\274\257\272\315=\222_\210<G\237\260\275KN$=y\245\251\274\262\354\224\275\371\375v\274\225Q\204=b\323\231=\265Y\362;\rH\224\274\323y\267\275fs\307<_\357?\275\\\270\274<\207\315\277\275%\022\022\274\201\237\t=\346.\020>\350\377\017\2752\304\t=\241\335l\275\320`\031\275KW\306\273{;\270;\025\254\223<\235\027`=zb\317\274\231 \216\274\217\250\t\274h<g<\206x\363;\312\367\264\274\343\022\211:\251`,<\310c~;\266\020\006\275;\362M<\036sZ\274\020H\315;\006\316G\274Af\210\274D\033;\273\267%-\273[\211h\274\362\242Z:\332e`<\321[K<\203\325\214\273%3\233\274\216\033\215\274\025\2034<S\022D\274\332\320\200<D\223\356;4\003\305=\357&a\2740\366\302\275\\\366\375\275\033e\242\275\324\023\337=\371m\212\275TQA=\272[\232=O\000p\275\213b\203\2737\221\365;\250\202\375<\234\010\027\275I \211=b\226\037;\265@\242\275\200\250\231=\311!R<d\212\240=\017\367\353\275&\3570=\242\305\204=\232\247B\275\374t\344=\204bM=&\314\231\274+\363\271\273\032e$=\346\235\021<\007-\020\2751M\212\275e\204\003\275\267\005\322:4\346\203<\215\322\033\275\006\002\353\275v\\\337\274\376\2723\274\232<\220<\336\200\207;]\314\243\275\251\314(\273N\013\203<0\'\000\275\213\244#\275T\241\202;\200\266\016\275\207\'J<\na\266\275\2046M\275\357a\t\2751(\177\274\355&\211\274\357\324O\275\'\316\230<K\022%\274\260\250\236\274\371\337\230\274\2225c\275I\020=<\254|{\275\333\016\205;\267U\242\275\021\031#\275\374\335^<\310\236p\274\213<x\274E\302\030\276W2&\275\270\275+=\347Jm\273\r\304\236<\\\226\005\276\\\230\243<\317\023-\274\243U~\275\234H\020<)\nf<\006\224g\275\322ax\274\225k\000\276+\r*<\315-K\275s\274>\273W\256<\274\301\035m;\317\242\307<\\O\010=^\361\353;6\271Z\275MR\206\275\327Jt<m\355\311\275\364a\023\274\232\025\277;\250\021\236\274\361\232^<\212\257\004\274\260p\003\275\2177\'<\320\322\263\274\311+^<\033`\217\274\276/u\274\335\025\202;\201\267\004\272\205r\256\274\201Y \274\201\023\254<\340\272\202<\206\021\005=CJ\251<H\206\220:l\332\364<\017E\2339\241)\007\274\253\215W<\3325?<\327sq;\303\247\037\274\256+\315<=\321\316<\210\274\217<\253\3338<\37431\274\240\026\027\274\335\367;=7\t\032\276\213%\227\275\230pK=\230\247\321=\2142\325=~\014\005\275M\231\257=\377\302\234\275\342,\243=\271\037\215<`\000\\\275\007E\037\273\236@-\275\233\347\375\275\003\0334= 3\374\275\346%)\276|\330\246\275\2562\033\275-\245\264=\225\364%>\217A]<\tw\243\275\242\310\334=\n\252\n>\367n\315;\220\365\250=D\247\332=}\351\254\275\2323;=\350\347\350=0\240k<b\244>\274\021\365\034=I-\202\274jsI>\'2\262=\332K\353\274\231\353\263<\226\'\335\274bn\313\274\237\360K=\321a\242<\034\302\341\274DL\240<\032\221\330<\356\362k\274s[\230=\013v\277<\014w+=\"\310\225=\231g\240=\255\224\222<\223*\305<\372\336\312=k\360\223\272JdD=ZkQ=\213\253L=\310\306;=N\377%\272?~x=.\255R\275Y\345\235=\224\366+\272\3017\026=QZ5\275hw\013>Gx>=\377= \274}N-=\311\303\261\274sY\037\2757\227j=\207Y\303;j)\005\2753\3445=\017\205~<|r2<c\206_=\224\317e=\257\010\311=t\367\360=\233\006\230=\207\224\200\274mk\264<\254@\213=\254\333s\274\034\020\251\275\204\356L=4\225\230=\005^Z=\260\001a=\257\004\307=\031Q\234\275\366\302V\273\242\024#<\251|\241\274$d)\274w\214\317;\220\032\\\274<\334\245\272\250\354\231\273d\357\375\273\036\343\r:\276\034)\274\354-J\274\212J%<\001SN;\025\037\330\2740X*\274\217t\364\274\347W?\275\212\305\243<\263\212A\275\026\274\364\272L$\250\273YH\224\274\034zq\274\277]\200\274\260y;;\376\372\325\274T\226\267\274\274\332l\274\271\330\003\274\215,\334\273\300h\261;\220\343\252\274\274G\231\275\016Q\350=(\363\247=\361\346\357=\211-.\275\030\314\365<;\030\022\276\277\254\231<d\023n\275\241\222\216=!j\273;\353x\332\275\322\371a\275.J =S\0271<\202\210\234<^R\023\275\337\377\262:~h\311\275\027\223\310:-5`=R\207\204\275\310b\316<\031\013\225=p\037\232<\0170\023=\352\212C<\342f\324;\344.j<\254*\375\275\013\320\334\274R \027\274Y\234C<\216\301;\27548M\274\201\202\342\275\306\363V\275F\247\026\274\334\310\333\272?\313\022\274N\252\261\2730\247\021\275\323}\357\274\356i\232<kN\303\274\350)\036\275\227\023\351\274\267\025~\2756\231\261\275\230W\261;:|\246\275R\220B\275\347\232\337\274\023J\022\275Z\243\206\275H\321\027\275\226\273\025\275\217Nb\275\t\334k\275A\323,\275!\225\314\273@\266\335\274\2038o<93Y\275\204YV\274j\306\252\275!\245\262\2734\344\342\275\033;\200\274\376\306=\275\344o\254\2758\374\377\273t\000\222\274S\337\313\274\206rv\275\353\214\007=V\202\231\275\221\313\206\275\302\232\021\275\206\'\013\2753E\266\275\274\3655\275\263\314\026\276\224MY\275\233h\014\275\313\353\024\275s\253\321\275V\230\201\275\0028\272<U\244\220\275v\224\263\275Z|\232\275\276\2717\274\353\2020\275\023c\"\275sD\372\274\267\341\326\274\331T(\274\271D\001\274c+\301;\344\007\300\274\221\276\371\274[&6\274N\316H<\250\236\203\274\320\313\271\2745\360q\273\227\025\"\274\177%x\274\\\225G\275|\235\344;h\331~\274%\020M<pA\346;\037\332\325\273\321z\277\274R\000\244\274E\177\342\274\270\376\005<\374!\254\274J\267\207;\335\252\031\274J\225\227\274\367\257\232\274\231z\276:\310\205 \273\307i\204\274\354\245z\274\333B\211:\302\360\307<l\266\024\274\231`\213<\265\213\347<o\300L\274g\023\305=\320\006\301\273\341\341S=p4\t\274\347ov\275\035h\260=\353\\\001\276\005\027\311\275\220sP\275[3\213\274\ta2=\274\321\365\274lyK=\343\004\005=\332<\333:\225OP\275\261B\333<\335\026`=\267\037\224<\215\260\362\274\300\252\304\275\347\327u\274\211\263\257<@\230)\273\031j\301<\034zI\275}\300F\275\020c\304\274\325u\310\274E\277==\2268C\275\230\"w\275\010\237\255\274\226\017\347;;1\001\275\360\220c\275n\373\036\274kaT\274\333B\r\275(\017n\275B|p<\017\230q\275\024\235\020=P\r_\274\210X\202\274\267\0008\275\356\320H\275\241\273\026\275\276;\243<\013\324\373\274\222\3552<\244z\214\274\267\022\313\274f\273}\275\224\037\275:\340\032\240\274\351\221\010\275\240\304\225\274`\235\230\275V\330t\275~\376K\275b\353#=\270\221\320\275\004\236\272\275\341)\002\275\376\263\031\275\242UY\275\343!\277\275Q\2468\275\242(\337\274\364\320\204\275\370\345\220\275\321mT<\230Oc\275\3647t\274|_2\275\t\033\374\274.\017u\275\t\353\302\275/\234\343\274\3008\324\273\377\260z\275\256\244\3749\212\034Q\27412\020\275O\230\255\275\202\310\265:A\240\235\2757@\227\275\007$*\275\246\2050\2740\350\334<\036\216\317\273%\250\013<c\335(\275\233\304\316\273O\321\331\273El\245\273[{\001;~P\004\274\207\351\203<[-\317\274\016\232\317:\207\023\324\2741\202 \272?\245A\274;\210\337<\260x\3728\032\251m<\261\202\"\273\222\357\250<i\240\317\273\330o\303\272$\263\275<\354\330C;\273F\033<\224\006$\273GmI\274\270fC<\337\356s\274x\304\177<\220\321\025\276\310p\276\2754\200\033\275\031\377\256=h\024\361<0\257K\275fp\207\275\032\177A>|J\311\275\264(\036\273\014~\374=\037\341\207\275)\200\027=\210\250\023<:\215\302\275\241\315\235\274HUO=\271\027\220\275\375\030\215\275\245\254\276<^\304\372\275\227\201\300\275\030\203\353=\017\3347=V2\300=\rJ\256\275\205I\253=[\240\326=\340\320\222\275\277\357\333\275MR\031\273)<\205\274\304B\210\275`\252\202\274d\370)==\313\021\275\3145\014>u\205\212\275\200C\211\274\277\306\277<\325u\307\274\r\362\205\273\024\025;<!o\020=\274-\002\275\252\264\360\273\021\377*\275\"N\204<\237mC\275\376\027Y=\000\303A\275F\333o=\3630O=\302\260Y=\202\010\023\273\333\002g<\2305\\=\346=M<l\201\r=\010\244\230<\351s\312\274\240A\213<\340\206f\275\301\017>\274U\306\210\275,D\251\274\224\206\343=\246p\252\275\213\t\242=?I\327\275i\251\372\273\315Y\206=\254\207\240\275R\320\346\273I\312)\275\350qM=\331\225w\275RfQ\275\234g\025\275\003\252\000=\037V\313\275\356-\227=\206\000&\276D5\254=\177\311\312<\355d\245=\362\343\001<9\236X=h\332\206=\254\026S\273\000pw=\277.\245<-\324\223\274\034\314t=\316)#\276\351\027\214;wM\226<\315\365\212<\347\2112<\342v?<\321\276\315<y\276~<\366\206\250<\3402\343;;\224+<>%Q<9\326\217<F\254P<\324\351\263;\254M8;\353\337\261<\rB\226\274\370C\356;\343~\212<\266\206\233\274\372\025\211;\001}\331<\306\305\230<\327\272\332<7\204v\274\244F\211<qo>;\256\206\220<\324,\303;\014\023\237<\373\214\007\274O\203\326:\374\0272<\332\rw;S\244\313=\311\177\231\274\277\2161=\356\265\005\276f\010\302\274\230@<\275?\325r\275\330\212g=U\243\230<\321\342\237=LuP=T\212o=\334\220\305=\274\233\367=3\270\262\2744\251\244=F8\247<\246!%<\344\330\376=_\271\234<1v\370\274\022\340\337=P\270\355=9W\210\275;o\262\275\021\267\211=&o\307=P\233M\274\236| =\023\353\202=9\002\272=\023\227\372<\2115\311<\234\006\311<\373\331\323<8\267C\274a\2567=u%:=\233\206{<\030\256\312<G\362\003=g\227\004=N\227\322<H\203\322;9^\t=\377{\340<\315\"\002\275\345w,=\231\353\001=~\274\206<\t\2021<\214\253@=\337\356F=\351\200\033=H\334\247\274\231\312\005=cH\247<\207^\321<h\0074<\227}q=(\207N\274\365L\002=\312\233\330<\365\320\246<\004\352@=nI\306=\005(\037=Q;\214\274Tu\301=\211\316\221=\333\030E\273cac=\006O<=\tr\215=\335\225\214=\364\271\033<\371\242t=\351\222f=/\213\013\275F\300\201=\3304\230=\372\202\225<\212\\4=\304\350\216=6\362\231=\247}\r=\304bz\271\243\005\241=\2420^<S\236h<b+\363;\233\364\230=\331\362\211\274\353\336\241=+\347V=8\252!\273\024\227x\274\035\274\202;\262\002\033\274\037F\212<\210\3008<\2170)\274D\227\233\273\200\210s;\361\337e\274B\320\023;\251\230\236;\304j\263\274\304e\222\274e4#\274o{\016\273\337\230\010;\t@\207<|v\204\273]L\350<\201\005\274;\241\034\000\274\240%\027\270\246\324m<P\305\242;\3273\"\274\321\260\222<\277\\\262\273\267\004\345;\352\002\205\272aaK\274\335\003\230\274\367\214M<\343\223K=&H`\274\nf\245\275\270?\224=i3Z\274/\2310\274\233%\033>\306\270\363\274\371\261\024=i\352\202=rZ\213\274\233\332\310<\313\211\352\274\336\220\313\275[\376\210\275\350\033\226<w\025\305\274\0364\265\275\r=\026\275\256\355\346<\021\2436\275@\021F\275\360\375C\275\025\336\022;\234\245\270=\315\242\355\274\370\201\221\275\220\253$\274\262v\030=\316\002\266<\243M\246\274\207\217\274;\003\330\326\274#\311\013<\236\353\240\274\257\001\203=\025\270\t\273UZ\224\274\261\2676\274\272\020\253;\240b\255\274\204~\227;g{\255;\333U#\275\276\022h\274\276H\220\274\210\354\306;c\346\377\273\336v\026=\007\326\221\273Y\267N=\255\351?<\337\244\007\274\251\356\313;#\\\"=b\367\034<\016\363\367\273\301d\031=\220\257\342;\203\307!<\314$\240\271\250\330%\274\235\007\370\274\203-\265<@\273\373\274\217\351\025;\214\252\023\275U|\\=\213) \275\311\224\337\274\255\n\000\275\236I\210\274v\003\350\274rI\215\274a\261\327:\236\373=\2750Q\016<\214\377m\2742\206?<\030#\264\274\323\236\230<\240w^<?\010_=mb@;\021y=\275\304\227\n<Jb\034=\031\220\273;7y\004\275\340\252\013=\271Yi<M\345y<\307\356\325;\253Fm\274::r\275n\343\360<4t\035=\254\021\217<\321K\021\272 ,\006<\255\227\206=!\3501=\300\252R;\372\210\302\273OQ\270<\004\260\003=\027\357*<\013\261\000<i\tF<\303\266\t=\2125\370\274f\212/;>\024\255\274\272-\207;*\024\352\273Sn\024=6\355\237<J\316\351<L\226\021\274?H\306<\355fM\274B*\035<\347\\\033<m\345 =\316\241I\274\266G\212\273u\326\020<~\261\214=\316\350\321<8\021\276<\245\253\261\274\237R\345=\242\364\255<\202\022\367<\222\243\240\275\354\300\207=x\274~\275g\261\241\273\353\326\244=*\013\004\274s\245\002>\325E\227=d\007s=*\212\010\275/\254\'=\346\366\211\274T\344+=\2738\020\276\246`\230=i\240D\275\036\231\375\275{K\017\274\261#/\275=\332\256=\311\013\254=<\2311<p\027;\2750\241\027\276S2@=(\333>=\305\211\213=\361\317\241<\222\201F<lc\340\275/z\365=\"N\241=\003\223\n=@\324\210\273\204Q\035=F\324\207=\316\255o<@\270\247:0k\003=u\316#=\216\034J\275\020\231\\<\372\2056\275\257\216\357<\260~B\274\376\251,=Q>*=\344\216\036=\362\374z\275Ez\022=%\336I\274O\324d<L\n0;\243\225\307=\355\340n\274^\030\324<o\2201=\370\273~\273X\236\177=\254\256\230=O@\217=\027G\375\275\356\301,>\245\363\303=(\337\222\274q\324S=\r\324d=\225\000\002>\035\302P=\233\221\025=@O|=\216\031N=\220\224g\275\341\337\025=\271aO<\253\3278=\306\3436\275\321\232E=E\001\246=\264#\031=\260u\373\274\317\311\242=(\205\322\273\342\332\036\274,\366\007<\263\327\336=\026Z\030\275b\212\327=\373\344C=\370\352\246:\233\204\361<\016\261\023\274\035\216\017<\t.T\274\026}\016=\022\375\346<tX\206\272/\3549;\032\016\257<\326\306\005<\312\247\265\272\306\220\216<\252A\233<\243\301\025<\226|\205;\304, \274H\352\275\274\344\017\214<.\252\211\274\316W\272\272\247\036\204:W\001/;p\033&;\245\202[\274\274\271\016<\201\332\340\274j\337\021<sQQ<{ka;\241B\243<\3304\220<\307\327s<\206\365\004>\375\266\033=\331e\241=\363]\360<\203\204\243\275\217U\347\274n)\321\275x\276/;\263^\350\275\213h8\275\rJ\314<\256o\371\275j\3769>\257\017\237=&\306Z=9\200\330=F\272\204=\346\364 >\305c\301=|\024{=\033\317\226\275v\355\355;\315\261\032\276\232_$\275\nmX\274Atc=6\324\341=\262\301\376=5\315\214\275\372V#\275\024\364\n\275t^\304;\222JJ=\251\272w\274\266\352|<<=\356\275\r)\t:\304LC=H\236\326\273\221<\203<c\302\005=_u\215\273\313\225A\273\251\246\201<A\007\035<\014[\257<)dn;I\211\303\274_\377U\275\004\031\332;\365&\213\275$\261h\275\371\320\'\274\271B\007\273\035\036-\275A\232\351\274:\343\302\274q\273X\275\236WB<\235\244\235<\207\323\024\272\354e\304<\3376\032=\340Y\223=\242\025\255=\001C\016\275z\353P=\217/(\2763\206\250=V]\267=\023\242{<\314;\330<\203!I=l^\331:k\365\206\272s\346\035=\205\335\211<2\r\037=)\221\245\272%\215\233\274\204\267(\275\351SS\274$E\210\274m\004\266\274\215a\236<\356\225z\273\'\306\333\274t\277o\274\223\363\037=\355\212F\275\004\235R<\330\211\300<\320\375[\274\031\216\364<\202S\261=\201\221\"\274\270d\225<a\316\305<%\226\001<\004gd\275\271^*\274Q1k<\201?\361<d\362\014\274\372h3<\210@8<\242\003\207\272\274\272\'\273\211\206x<X\367\227<\013\371\225<\026Z\272\273\366\340&\2737\336\200<\034E\277\272\367J\332\272\360\253\357<\203\272k\271?\350D<H\223\233<\256\202\250<\342M/\274\336vH<\204\222d;\2141\256<O+h<\r\316\215<%\350\322<\027\003\324\2748\025\233\274\372\004\274=\306b\010\276\371\177\314\273\030\275i=2<\037\275\260WM<\350\031j=\0322\023=%\351\351\274|Y\207=\273\235A<$g\233=\205:\212=J\270\207\275\341\014\215\275\321\026f<\221\204\356<>\372_\275\222\356\342<\235(\225=4\343h<-\334\220\274\200&\021\275w\262\247=PW\n>2\237h=\364\213\270\275\232p7=\305=\244=\'\254\224\274\007\226\030=\270h\006=7\325\025<\007K[<\344\256\325\274\000s\232<\312\346>=2\220p\274\353\367L<\367\224\225<\247\313\003<\200\225@;\201\tZ<\267\2208=\370$\'=1A\010\274\232\t\263\273\232A\212\2742\227\321<@n\241<\263\375S=T\010.\272\t\3743=\2735\375<\266D\366<\016,i\274%\360g<\211\202k\274\363\364\301<%L-<\376\365$=\377\034!\275{\252$=\271\243|=y\177\303<\270\307q\273\016G\345\273n[\026=\250S\024>L\223H\274@\235\355<6\245\246<\224z\020=\327\202\232;Hmj<Zuh=\215\232K=\0259\317<\251(\354;\231\246\021\275h\356F=\013xX=\232@\374=o\265\322;\n\373\241=C\337R=\274rX=\263\314\000=\235\325n=\264\267\240:Z\230U=\220\216R;\366b\225<-X\234;\032\2255;\260w\364\273\033\271\204;,\352\212=\216\022\314<d\340\n<\336\374\215:\264&\276\274\336\177\014:\310-E\272\317\023\247\272\240\307\003<I/\355;\306(\317;^\023\002\275\324\343\362\272\330\337\014\275\245\017A<\376)\333\274\261?\006=\360\237\276<q\250\314\273\030\322\004\274\030e\034<\370\\\213\273\373\205\255;=\\\362\274\264\037\023<\357g\207\274\014\202\334\274\331\353\263<\341^^\275\010J\260\274IL\230=\204\342\240=\3207\335\267\'\216\326\275+\016\2069WM\235\275\366}\232=\263s]\275\035\247\212=~C\305=\264\220\247<\253\2659>\237\020\213=Z\001\262=i\273\035>O\312\207\2741t\351\274\352\271\355\2742\333\243==\272 =\207\375\360=\372L\231\273\270\304\276\275:6\265=\211Q\342;\027\022\254:W4=\276\334\237T\273\334e\210\275\245u\r=\316Q\302;2.1<q(\201\273h\024/<*x\r<\003\353k=N\257x<\231\222\360;>;\005\275\roB:-9\226<\343j?\274\240T\260<\331.\r<\213E\240\273\312u^\275C\006\257<Wm\260\274\276mz<\"\304#\275\262\006\032=\022\272O=9\010L\274r\202J\275X\316}<\025g\022\274i\361\240;\252^g\275\314\244\372;\256{\301\274\246\242B\275w\303\352<\312t\356\275\375VG\275\271{\022<|\034\246<\222\327\230\275\211\277\216=\245\301\217\274\326\334\026\276_\235\227;%\005D\274!.R=\232-Z\274\263\007\020=\322H\024\275\333\373\251\274\035p\207\275)\312,=\353\337\307\273Jk>\275/\032\360\275n\341\340<\305\003\222=z\343\255\274\273\227P\2753p\244<\333\232\207<\021\353\000\275{\206\324\275\272\266\313\274\016\244Y\275\361SS\274#4\216=\337\0200\274\303w~<`m[<\265\n+<&\345\301<\260\036\232\273\001\2064<\234\314w\274\212\252\244<\351\360H<\236e\004;\200\255\244<=\2114\273\202\0343<\001B\261\274\267\265\307\274\307&\013\274@e\013<\376u\224<\3714\004\274M\203\223<\233\236\351;\371-\336;\306>\344\274\013\257z<\221\324\007;\345\025\302;jzx:\nm\321\272|.\r\272\251\t\036<>ss\272N\353\347<\373\372\362<\227\361r=\304\203\250\274Xt1\276\371\311\223=\004\211\274<hd\324\274\327G)\275\302b\033\275\327\306\350\274\370\240\353=\277\357\315\275`,\264<\354\356\230\275\002\022\003<\353\245\226=\373\020\306=6\217\003\276\001\272\333\275\244\0019\274~u\216\275\013\334\267=~[\315=\004\251\314\273\213?!>\017\254\r=s]\244=\016\352\036\2748 g\275\024L\222=v\320-=9\370\272\274\364zY\273\376\340\006=\321\263\026<\200\025\007\275\300\362\244;Y\274\226<\326\265\005\275\376\233\327<Uo\230<\236\363\351\274\3442!=\357\351\213\273\344?,<\301\340\321\274\267P:\275\346\363\330\274\036\350p<\236Z\320\274\207\343\235\274Xk\024\274F\321\220<\356\0024<\2036\225\275\022\322\365<\256\217B\274\311h%\273Km1\274N\204\207\272kUV\273\360_\214\274\202B8<\240\213\025\275\207K\001;\322\252\303=\277\211\377;\264\035\236<\306[9\274\372\254I<~=\242\275n9e<\253\230\263<\017\252\250;gC\220=\244\333\223\274\3624w\274\354c\344;\266\3352\275U\365\233\274}\270\021=i\306\270\275\343\270\030\274m\226Q<\204\034A=\205\364\315<\273J\032;\013\344\247=\334\222^=\017q(<\303\256\257\274\301\r\234<\000\321\265:$p.\275\272G\201\273\tj\007=\244]\376<\202Sf;\2742\275:\326\301\205\274v\307E=g\307\016=\001`\203\273\002o\361\274\262\305j<\204\234E<#|U\273\244\350\257;\305u\325;\026\025{\273\320\277\272\274\252ke</\026C\275l\361\007\274\205\247\232\274d\212\340;\204\"\326:F5\020\273u\336\266\274+\332\375\273\210Y\372\2738\330\315\274\r\005o\273\267\272\357<\332\214A;}\324\327\273\256\370W<\003\332\206=zn\021=5\231\216\275\t\333\312=\3607\t>\022Z\230=\033\\\300\274\024\363\236\275\336\250\'>s\374\025\276\270\026\224\274A\005\307<\255\200\224\275\214\t\347=\270\245S>\241h\001<\357\373\024>\353\220o=G\355\347=\271V\223\275\223\014\304=j3\204=\250\002\007\2755\367\030\276\347RI\275f\233\301=\370\311\020\275D\346\237=\357+\326=\203\364g=\001\326\035\276\033|\274=\030~m=\345\212+=|m\316\273\021\366\003=\211\225\320\275\336\021\213\274\222\220d=\270\000\016\275i\344:\275-\305\356<\t\243\264;\321\030\245\274\037\013>\274s\335\257\272\303<\007\274!2\207\274\206g\230=\321\007\316\275\211\016W\274\002\222\030\275\306Z\203\275d\271\244\273w\265\023\274\r\003\322\275\034W\007\275\375H;;1\316Z\275R:\253\274\245R\224=\037\262\001\275\005\274\320\274:\356K=\364\377\223<\001\357N=\311\006,\274\315\205\213=\223\217\312\275h\244\002>\034\310\353=\\\314y\275\027\177\333:\031\322\026=\313\261X=\201\225\334\274\311\245\032=D\336\215<B\247\366\273\326k\203\275\377\017\210\274g\276\223\275\222IP=\330l\216\275Y\356|\275\310\357\331\272@\030^\274\2175\252\275\200\342\344\274\024\000^<\351!\215\275\r\007\244\274\243\354\216=\276\271N;\253\223\305=b\254\025<%\354\360<\200\237\240\274\217\313\252\274v\360\210\274\205\311\027\275\034h;=6\377{\273\212\014\212\274\"H\241;3\020\355\272qv$<\241\211\030\273>xL<]\274`\274\362\026\026<\301\330\017\275\243f\n<I\362k<hp#<S\033\325;\234\271\230\274G\260\262\274S\200\253<(MG\274\350]\222\274\374|\301\274B\275\022;\220e?:\353\273\206<+\"0\275l\360r;\352\212\331\273K(\340;7\373\232=\360\236\326=\'\216\344\274~i\261=\177\372\376=\235\021\320\275nw\235=}\232\321\274I\274e=\036$\212\275F\010L=ZZ\315<\376\205\276=gy\251\274M\323\313\275\3467\002\274\024\001\021=\266>7\275\225\200\025>\344d\357<H\216&\276R\254G=\324\024m<S3\222=\317\225\364<\236\303\352\275<O[\275T/\256\275\'\306\013>0+I=\352p\001>\022\301V=\036V\266\274^\206t\2742dn\274,\023\277=&\254\317=\201\004\324:\335\357\316\274\3740<<\330\306\210;Pj>={~6\274le\231<\246\222\356;p)\253\273\267yi\275\267\005[=\270\301%=\206\215\206=pt\201\274,D\256\271N\220\377\274\316\300\365<\324f\023\274!\275\264\2741\221*\272=u\024<<\321\210\273\242\005E=\302\223\200\275\177B\266<\365\346.\274C\030\027=m`\251\274\211\323`\273!vT\274!\357\023=\002\023\n>\317\0204\273\313\361>\276\314\027$=\327\031\227\274\316\007\241=\010C\317\274C1\272<\326_\t=\307\200\"\275\266\030\256\275\026\217\202=\341\273^=\275\313\266=\354\006\244\274\025vV\274\245\312\215\275\277x\327<(\377n\275\260\376\364\274&`]\275X\262\034\275\311u\346\274U\034Z=\214j\246\275U\023\213=\376\233e\275p\253\241<xnk\274\262w\340\274y\027\256;qU\311<F\002\232<\352\353\325\274\317\210\014\274\256\215e\273\027]\307\273\035o\230\274|\322\264\274\247\347\345<\321A\004\273\360T7\272\344\301I\274\221\033\313;v\203\023\275\357\342\000\272!:\023\275T!\232\273\311_\022\275\'\371f\2744T2\274\366U\353\274)\242\323\273+L\214\274\t\n\247\274\225\003\2709\370\205\224\274\331uQ\274\214\023\235\274\031\037\006>\356\346\366=!\335\025;\365\302\264\275\263\362\247=\220\330\272=Ox\206<\027\014\263;\t\245\000>Z\353V\274\021\236\n\276\036\217F=\303 \353=H\362\022\2763\257\305\275\331C\277\2750\355k<\023t\205=r\266\200<q\334\356=\020t\227=\276\265\216\274\301>\265\275}\232\034>\"\372\032\276\323u\355=|\022\007\276O\332\027\276,H\274\275e\206\"\273\371t\304;\200\334(<d\374\006=\342\026\232\274\345\325N\275\307\314\200<\3001\t\276\005?\201<@\266&\275\364\341\331\274\2731\262;\242,1\274\200\213,\275\246\267F\275\013\260I=\005\215|\273]8;;\367\0043\2755hK=\020\354&\275~\264\025=k\363\241\275\215\323\223\275\004\335\226\275\034=\313\274\342}\203\275{Fe\275\340\236\256\274\255\t?\275\007\372.\275\n\237\355; \005V\275\002\302j<\320\027z;7\3655=s\251\335\274r\300\016\276Z]1<\360\3211\275\353\253\243<0\201A\275LS\337\275\014\357==\026\232\242\274j%\007\274\355\317\327\275\313\270\201=\277\351\331\272\205_2\274[\356g\275\316\204\035\273\360\036\241\275\245J\372=&\316\340\275\\2\367\274^k\371\275=]\020\275\234\324\316\275.\376\327\275\024\025\260\274\263I\245\275l\244\261\275\tr#\275\375(\227\275.oR=\364\260\030=\275C\327<\226s\255\272\036\205\235;p\234\365\273\004\276~\2755\227\023\274k,\020\274\356\217R<}&\260\274\376\314\275\274e\241\370;\222\271\t\275~\267\360\272\314.\315\273GG\016=\264w\255<\214Hq<\211\325Y\275q\300\200<\227\306\227\274\312\244\207\273\314\344\263:\017t\365\273\005\3014\274\322\273\235\274\223z!;\332i\340\273<\256}\271E\233|\273\253\325!<p\264\342;\216\345T\274\335\245\r>\322%X=wn\327\275@\222\301=\200\266\213=+\204\271=\370\005O\275\234C\034\275.\322\363=\'F\351=/\007<\275\363\036\325\275T\325\220<7\006,\275\206\266\354=5\263\365=\243\225\006\276\237\315=\274\243\020\230=\n(\023\275\025!\177\274\003Q\024>\024\361\t\276jdK<\177k\307\273\226\266\225<;f@\275\274\0322<\260\216\024\275\\Z(<\240\014\333\275\326\234\221=\rs5=\017\310\316<1\254\362\272O*\020;Vc\314<\352\\a=\346\027S\274\271m\022=\337L\361\274\227\376\021\275BQ\312<\037\007\037\275[\021\307;\323G\334\273\266E)=N\212\035=\263\r(=`_\200\275\367\000x=\223\324\263\274\312\331\000:RYU\273\374\266\242\274\332\003%=\334k3\275K\313\330;\327^\205\274\254\236\251\272\300\2065<#\311\256<\347L\312<n\256\273\274*<;=\034\214\345<Y\302\222\275\305\226\244<\325\213\322;Ce$=\256\353*\273\250~\034=\316\272!<\226a\'\275H\364n=\224E\257\275}\002\365<\373F\350;T6\373\272\332\2246=\247\265^=\242\253\304\275\270n\360=/A\374\274\235\241\342:\270Z\002=F\227\007\275+\007$\274\341h\253\275W\364\251\274*3\213\274\376\024\000=\2568\202\273yJ\315<\232\003j=]-1;\220\322\376\274p\360\032;\315(^<\326\240\207<\306\203j\274\321\206C\274\270\226E\272<\271\367;\023\022\267<_\355\244<q&\250\273\035\'\034<\025d8\274\346\314\200<_\224\335\274V\317\330\272d\256\031\274%\'\205;\0210\314\273V\025\271;\337\004s\273\254\325\227<fc\343;\335\242\314;\335\301#<Z\016\'<4\376\237;D\370\';\306\342\235;\336\000\222\273{\3149;\246\225\037<\225\303t\275\236 \210\2759d\035=\245\352\006\274\212\216\245=18\274=U\317W=\217\017\2549\322\2071=\335\255>\275\316\210\336=\005v{=\223\275\001\275M\312\213=\275\255I\275\262\210m\274\352.h=\314rW\272s\300;=\325\022\231\275\367\350\000\271\004Go\275\341V9=\333#\334\274m\361\236\273n\225\243\275TG~=\376S\216< e0=<2\252\273\362)\032\275\346Y\033=\225a9\275\252\317\207:i\007\331<\327\213\211<\032\353\220<[L\314\273\017\202\240:\034t;;.\337\313<\351\t\365<d\321H;\230\327\216<\020\3117\274\325RB<\035t\223\274\346/\013\273\033\366\366\274}\215\327\2727\364Z\274h\t\222<?P\255<\275<\030=\333J\027<\260m\\<\017\367\311<\246\335%<\316\001\035<\237\306\240;M\206]\274\330\"\244\273*53\272\254a\214<G\305\'\275O@\303\273\271\343\211=X\3332;\371\317\231\273\326;\256;\217r\000<(6\310\274\004\025\305;\005\340\367<C.\355\274\001\260&=\010K\240\274\013m\216\274\350\275$\273\361}[\274^O\254\2740\r\013=\261\030\303\275%gg<D#\346<\210\355i=\023\274\235<k\362\255<\216m@=Cw\027<\275t4<A\007\351\273\250\347\025;\001Q5\273\205\021\036\275\271\237\336<;\351*<\010\300\317\274Q\246\311\274\231\026\352:\372D\020=\344IJ<\013\033\264\274\330\272\252\273\350\032G<b\352Y;\3758\033\2742\356\'\2749\277\260<7Ol\274\340u\346;\310\360\002\275Ji\250;h\373S<@\347\312\272G{\'\274\226Ys\273\262eY\274\272\257:<I\271)\274=&\352\273\320\245\213\274L\375\024<Un\247\274\021N\206;\312\237\026\275\333\274\363\274\261\227\021<\350Y\210\275^\242\3118\036L\305=z\'b\275`\3155\273\031\'\253=\3450e<\335k|\274O\230\374=h\206\312<.\201=\274\202l\327=\273\277\225=L\257\242=\315\207\363\275[\027T\276\270r\020>\022\304\357\275\314\307\025=\300\005\340=\274\324\037>\274\253;\276\331\200M=:*K>\007\345\225\275 ;\315\275}\232\013\276\306|\017\276J\002\236\275\371\010\210=9\352\035=Tf\013<\310\255\227<?\303/\275?\262\300\273\201}\\<\323\030m=\201K\345<\215\257\363\274\036\010\230\274\330\222\247<\321\262d<`\373\250;\271\262\275\274i\363\030=\212\254\271;~\315\033\2743\277u\275\246\337.=u\307\232<\252:K=\357\266\234\274_y\003;\010\r\033\274.\232s<L\252\244\275\314t\036\273\312\312\305:kr\204<=Z\365\274\265\223\242<\3711p\2750\301\272\274l\214O<Q\007,\275\314\243\243\275|F\260\274}\203?<\331{\"=\303\037/=\274\207x\275s4M\276~\245\031=\260\211\255\273\372\357\'=\346\206\023\275K\260\027=\234,\031<\360\264\371\274\271\013\255\275\315\020X=5\222a=\321\332.=\035\017\226\275m\311L\274;\371G\275\353\026%<\222\365\266\275a\366S\274\204\217\357\274\"\257\374\274D\026\256\275\231zI\274#\254\265\275\366\353\312;\222r\220\274(\2055\273?\023\204;\t\2360<<\000z\274\202\313\235;\275\357W\274\242(,\274\214\002#;L\332/:\310\220\360\272\001\244h;9KI<3\237\255\274\227{\267\273\242 h\274\035+A\274\372\337\301\273\313\004\236< !\034\273\300M?<t8\300;O\320F<>\260%;S\352\352\273``b;\200\374\213\274`\033D<\364T\333;\323\36479Kc\22685p0\274\352\301#\274.\354\227\275\013\302\024\276BjV=F\267D:]\024I\274\345R\214\274b\037L\274\267k\204=\347\354\t\275?\375[\274e\004\201=PNj\275 r\025=f\300|\275Y\"\266\275\025\307\235\275>\323a=\n\311\210\275\242\030\016>\212\316\331<\314[l\275>$0\275hb\246\274k\t >\222\200\301=\370\3504=a\327\245=\205e\\=\031U\017\275\316\242t;+,\276<.\325\215=\357\201\251\273\246\370\342:i\377\t=S\205\354\274\023\375\321=N!.\272\266\257\235\274\224\023O\273\230\247\032\274]\310k\273E\205\010=\330\213\270<*O\013\275\232\243e;\026\315\254\274\336\014\210\273\363i\242\274A\245\033=.\017\037;\255\024\352<%e\034=\026R\351<\"\234\321;\331\300\017=\037\347b<\2503\030\274\022\265\375<]\262\262<0\327\026\274v\303\306;\203\344\007:,\336\320\274\337p\000<\032\211-\274\010\340\277<\276\367m\275\262\366\207=\266\325\2438\"^\221\274\023\223R\275`oW\27504\302\274\327!\016=2\375B<\305^+\275o\025A\274)_R\275\"\220U9\027ZY\274bo;=\274\342\017\275\224 U<\200\214\244<\347\206\266<\237{W<\216\327d<?\\p<Q\225+\275\003\302\005=?8\327<\304\006\026<\021i\236<ShX\275s\320~\275`\013\213\274\205\2572\274]\3508;9\037\026\274\347\207\227<a\372N\273\0076s\274\013S&\274i\031\324\273g?3\274YD\263\273\025\277\201<\377N\247\273`\217\242:k\030\032\275\231\233q\274a\206L\274r>.\274(\350_<44\006\274\373\261\205:\n\365\221\274\340\3676\2748\313i\274\022\322\210\272t\307\207\273\224\206.\273=\302\013\274\345\350U\274\256\220[;\300z\\:\336)o\274Y\326\010=\002\360\253\275\324E\240\273a\n\034<\300\342[\276\346C\316\275\356\342\"<XR1=\323\352\232<i\0361;\344\214x=\216k\322\275c\032a\275\232\"\003;\334\372\342\273\265\251{\275\217n\335\275E\200\312<\243\030S\275\247]\200=\203[.\276\373\345\253\275#Z\206\275\201Ib=y\203\302:liH=\235n/=\335\356f\274\360\214\266\275\206-\342;\254\021\024>\371\n\207\274\005~\010\275-2\372\274d\362\034\274\355V\321\274>\302)=\025`/\275\"\013\005\275 E\323\274,\317\033\274]\242\337\274\353\217\353\274Q\372b<\353D\226\274\017?\241\274\262\341W\275\240\363\360\274\340\013\024\275\"/\305;\026\232\363\274\016s\231\274k\374\007\2750\206*\275\210.P\274\332X\211\275\306g\207\2731\321.\275ljA\274b\211\332\274\374\317\023\275\210\310);\037\270\304\274h\320\342\274\233(\304:p\200_\275\315\233\241\273\316\272f\275SA\337<\3116\263\275\006>\213\275\305v\007\275\203M1\275\027\273*\275k\352\373\274^#c\273\232A\357\274*\322L\275%\262<\275\332\370\217\274\225\t}\275\\\355\330\272\354\007\200\275\362a_\274 ]9\275\242\226\232\2756\":\273FS\351\274/\323\205\273\242\310\330:\271\036K;\372$z\274{\3643\275\231\022\020;\020\240\247\275\2419|\275E\022\005<X\273\356<\005\332!=\254\315\300;\330\332M\275\260K\022<<\002\271<K\347\322<\3137\276\273\311\226><\356\203\310<\313\214\263<\272\205\310\274P\036+<g\025\207<]\350\274;]~\236:\317Th<\212\026U\274R\372A<\220\335\204<\270\332*=sG\267<\270\203\021\274\305c\300<I\217\305:LgH<\345\234\000=6Y\363<\247/\222<?\370.<~\213\025:\205\374{\275\r\331\037\275X\017\270\2725\036\267=*\233\317\275\225\335\252=\330\222@\275\315Z*\274\343\211M\275\264Y\244\275\350\270\000>\270\014X<\000p\341<\271\220u=\246\026\215<\226}\214=V\343@<\353\305\273\275\"\035\342<\272\032c=\257\211\'\275\301\372x\275\324Q\333:y\004\267=\003\217\240=>c\014\276\023^\316=\317\365\020>\3261\340;\231~\022\275\224\212\240=\341bI;p\346*<$\362f=;\021u=\267\221\322;\"\341;=4BV<\332^4=]\032)=\366\016\313\273\320\016\253<\r\027h=\037\3652=\226\370&\275\352H\250<\205\364\002=\rj\300<\334\365s<\3031\322<w\352\304\274\325\252A=\254\265\206=x\217\242=z\257\n=\213w\340<\324\014==\t\370\224<\302\340\373<\020Sg=\221\350L=\356\252\353<2\243\023=\007\260\221<9\245;=;Y\245=\374\204\363=bL\335;\371\341\207<*s2=\377H\265=\276y\265=\016\246\275\273\233\317\025=\246\377\206=\363#\262=\257\212\'\275\303\'/=\267\215-=\244\3503=\030\321\022=Y\321q=rw\032\275\211\\\311=\324V\247=\221\345\005>\317\357&=\207\353\246=\351\373\263=\222\347\315;r`\214=Z\366\317=\257\345\261=.,h=)\253\341<\370\240\021=\232\r\351<!\0147=>\315#=\265\304\2159\2431\212\2751I5=\2408-=\364[\000=\000\007l\274\357V\237;Rh,=\2732\302<L.\212\274\034j\233<T\2719=d\326\323;\371\322\241<O!\003\273\221\256R;\342\027r<\274\2620=8\227L=\266J\256<\214\223\234\273\376\021\351<n\031m;\302\274\203<\002\270\331<\316\245\016=\317*\233<\360\316\237<5[\025;8\3046=+\373\203\275h\004E\274=}\272=\274\334\n>\341*\312\275Tt\247\274q\322S\275w{5\275\260#\276\275\201a \275\302\225\214\273\035\317\241<\322~\345=\207\300\207<BR\200=\334v\233;W-\220\275\013\003j:V\t\267=8\314G<\021\364\217\274 \016\025=_\231\275\275\030z\035=\213\002\245=Os\006>\274a\332=\262\014g\274\021\265\303\274ULF=B\305\373;\001\2005=*\270\256=E\325p=\005\301G<?\324\n=\027-\226=>z\222=\221Xp=,D\316\273i\317?<\n\"\272=\337\265.=\324_\346\274\216\0329=\241\205\211=\230Z\263<\007\225c=Xe\332\273$\367Q;\034\2763={K\234=\310\271\276=P>\371<L#\024=0b9=/A\355<\217\021\r=\233\236\033=\211\230\234=\242C$=\236\313:=K>|\273\207\235\025=\250/\322=\312A\304=\213k\376<O\220J<\314\372\346=xo\317=\312\205\246=d\311\243<\305\232\006=\036\262\005>\3439\232=\032\255m\274?\310\256=\261`\214=g.;=_\243\232=\373G\014=\254\312\035=\312w\314=T\n\316=\274\356\">\346h\337<\006\231\246=\327\n\247=\226-\237<\030\240w=\022\351\314=\254\232\345=\267\200:=\223L\246=D|K=\374[\212<\006})=\202\002\001<\n\014-\273Hb\203\275P\226*=\326\204\034=\271\213`</\224\326;F\3438<c\r6<\026\344\003<\331T\221\274\305v\261<\353\323\243;\323\177\205<\031n\342\273\302\312_\274\351X\013=\010\035\267;\270\270\221\274\034J:\272\274\\W<\273\244?<\243\212\203\274\234F\204<h\322\306\274\327c\027=S\000\010=\340\370\243<1\270$=\200BX;\210j\237\274\341\203\232=L\023\353\275\365W\t\275.\034g\275\n\272\035\276z\217\006\275W\016\216\275\270*\013\274H[\342;\203\204\346<Qq\226<4\311b\275\342\225q\275\244\203A=9\303>\274W?\217\275L\201\000\276\364\310\264=\375*\373<\315L\271=\234\263\013==\257n\275`w \274\242\344%\275\231?L\274\234d\t>{\355\n>5\350\021>\017d\032\274\352\032\013\276h\256\310\273E\371\307<\035\177\233=\363\2011\274\342s\025\273/\371\373\275\243\261\335<U\321z=\340a\311<\024$\256<#\230\222<\310&*;Vl8<\010\211\030\275s\235\231<\245^\301<\264\031\207<\256%\202\274\354B\213\274g\254\006=h#5\273\306\r\337\274!\037\034\274\033\201\201<C\353U<j\035\366\274\225(\312;\227\3311\275\256n9=+1n=\304(\346<*\260/=\217\016@<\245a\346=\306\240\344=G\273^\273f\360\260<\302d\304\275\327Q\t=D\332\311=Y\033\335=\343\005\201<M\300\003=\301z\251<\362\036\214<\2075B\274\200D]=v\243\313<\\g\n=(>u<Dv.\275\353\370V=\246]\030=7\360\334\273N\035\001<\256\203\304;\365\310\262<\237\222h\274)\340\244<\322\272!\274\363s\275=\335a`=3$\n=H\350\210= \027\203<Fu\\;\270;\325\273>\222\226\274\006\367T\274p\316\353<\304\340\016<\343\231(\274\350\204\334\274\263b\232\273\242\207\005\2749\034\024\274\303\255\324\273\375|,<\037l^\274</)\274U\372\226\274\340\005\035\273h!\217\274\326\\\276\273\035 \237\274]\021\030;\341\307\316\274Z\002>\273\333\271n\274\311P\212\274\354K]\274\371\305\231\2738\006\211\274\377\265\336\273\220Wz\274\251\324f\274\206:\030\274\236J\364<\030p\222=\3339&=\021wW\274W*%<\036m\023=`\276-\275\361\227\377\274\320\3148\272>}\206\275\\\004\013\275\020\344k=j\211s<\210\330#=9\023\266<\326\2360\275\373\365k=s8|\274\341\270\375\2746a\306=\0223V\275_\033]\273q\205\031\275\327<\300<\256\234+=[\307\320\275\305U\202<\245<\000\275\242\372\363<\355\203\t\274\266\224\274\275\250\201\037=\177f\301;t\342\214\274j\n\021\275\326\'\200\274\n;\215\275\245\221d;\033\253\212\274\353\334\023\275\304T\271\273/\311d\274Z{\224\274\t-\237\274>~f<\370\027\346\274\211\247\010\275\003\236\006\275}\364@;^\357\007\275\205U\337\273\371\007h\275\241\350\007\275J\334B\275_W\025\274\'\325p\275WD\n\275I\345\340\274Cy\204\274l\372\025\275\025o\373\272\303\366\213\274\3118\004\275\002bt\274\031\034\264\273(\010\r\275-\024\211\275\306\362^\274Y\326$\275%2\261\273gK%\275\224\237\321\275\315\206\017<X,\302\274h<l\274\351\215?\275\'\013\221<\336c\036\275y\213M\275\002\367s\275\0147\"\274h^\010\275\254\222H<\317p\302\275o\005\200\275N\270\273\275J_E\274j\302\262\275\336D^\275\340>\261\274I\244J\275`\314\220\275h\244\274\274\023\206\007\275ss\237\274\372\256\331;\327\367\324\274\253\363\266\274T\3026<\311\331\221<H\363^<o\2478\275\307J\314\274S\331\022;g\310\026=\235\202\232;$\364M\274Bq\267<\346\345\235\273\206\256P<j\332\220\273\353\352\262<\320\357G<\320\315~=O,\236;D|\t=d\336\014\273\224\370\004<i\234\342;-B\343<+\243\234<\264\037\205<m\366\323<\247\037z<\237&\242\274]\021R<\223\2703<\356c|;\223\241f\275\364\362\324\275\362L<=R\032$\275Jq\203=\223V:\276\010\227\264=\245\357\037\275\034\323k\275\032Pg\274\0323\033>\263\341\245\275\360\257\200=\241\n\306\275J\341U=vgU=Z\032\030\276\353b\020<^3\346\2755\376\014\276l\r%\276\260\260\'\276\232\212]<WQ\005\276/&\001>\005\207\365=\301X\252=2\306\361\275\206\236\\=}B\264<\346\354k<\022 \330<\233\215U\275\246\240\320\274GGG=\3655\261\273\245\002\255=\005 \t\274\360\'\032\275\310\264\360<v\3125=\331-\354;\013X\220\274`9(={\371\t\274\365\251\371<\004\377>\274J\364!=7\345\216\274E\366\317=+\232i\274\360\364\200=\177\362\337<\337\334\202<\2310\221<\204\245\252=r\2066=@8&=\267Fd=$\376\'=e\026X\275\'\023+=G[\323<\236\177\200<\202\334\330\275_=\215\275\330\021\222=\000\302\251\273wI<>\255.\233\275\0252\'\275\247\312\273=\274\367O\274%\226c<\366\233\201\275\241\216\266=\304#\023\275\244I\357<\307\217\025=\360\260n=\360\021\247\275\336\334\255=\\\317\200\2755\277\362=K\206\256<L\377\251<4_\307<&\354\323=\3478\202=\220\271==\005\356\260=\\\317<=\256\311\007\275\031}\030=}\210c\2758\234E\2751/\307<\004\232\314\272\216T\030\2722\236\232\273o\262\313\274He\242<\034?|\272E\211\255<Tw\202:\276\335\274\273Tcs<\376\225\362\272\204N\313\271f\262\330\271\224\265\317<I\033\001\274\341<q<\356\332\3329\272\":<\326k\271\273\204Y\203;\312}y;\025cI<\227\322\334:\277\000:\273E\276e\273\324\334\362;\357\343%<S\377 <\006\367<\274\307\361\030;\227\355\305\273,\035\300\274\301\306g=YM\237=]o\036=M\260\007>bC)>2\262\342\275\242Lh=\376\202\020\275\340!\250\275S]M=@\260\217\275X \322\274pgA=\246\233\326<T}?=4:Y\274\ts\354;\014D(\275\260(\276=+i#>\350m\233=T\273\355\272\024\310\004>\332q\236<\211\025\272<\261d\277\275\032ZY\275\017\277\027\274\024\256\320=|\256\257\275\220\220\037=\223\364:=\223\344\214<\346\2560;\276pc\271\232w\026=E\357\325=Wie;F\350\210<\216Iu\273\006D\344\273*js=\357i[\271w\306=<A\215\317<\"\230\332<<\303\013\274\314\221\202=\307\345\226<\026\252\241=\264\035\037\274\004\312\336<\242\374j<\307\240\200<\315\334\370<j\031\202\273\257_\252;Z\252\256<\205\303\255<\272D\377<~m\212\274\255\275~=V\332\032\275\006H\033=\216\020\205<9\361\372\274\212\375-\273\2139/=\256\353\000>J\334\212<5\252t\273Yp\352<\024\221\226\274\010`\343=\"\275\320\274=\026\273<\036\250W=wjU\274$\035s\273\225P\000=t\377\314<\347\303\334=\257K\350:\331\244\027=\177\t\331<\335\374\023<B$N\274\367\222\214\274D\212\003\275 |\253\266\362\307\364<J\034\014=\373J\223\274\025\005\237=J\346\034\275"
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "\332\264]=\025\254.=\233\020\261;\344\365\034=\024\027\037\275\372:\222=9-,=\305J\210=I\331 =\254\r\366<D\370/=\200\212\254<\207\230\304;F.\203=\247\243\237=h\031\375<prq=K+t=\273\372\303<\227U\224=\213+\343<\233\001n=\350\314J=G\335i=\2703\307<\016\216<=\375J%=\303\322P=\262\277[=OkM;\214_\202=>\336\257<\n\023\r=\314\206\213<\021\211l\275\t\221s\274]\027T\274\030\240\261<\027\247\212\274\261X\027\275\276\264\370\274\004\247\261\274\306\017\354\274\324jy\273*\330\252<\223Aj=\254\"\023=^\245r<\255\177\347\274\005\023\177;&\265\325<\001Y\r\273\377\026\200</\256<<X\024\245\273\272\316\376:`\025\033\275M\0346\274\255\017\216<\224[\311<)\177g=\315\225\021\274)8+<w\352w<\241\243\260=UW\316=`\346#=\376X\200=B\265.>?B8>\270\332\230=U\253\342=\300\320r=\304\324u=\032\320\002>\217\377e=\371\203\214<\017h\026>\335\240\014>\321\261\\=\221\242\352=\261\235\307=\006\"\017>1\254\374=7\250\375=\332J\377=\314\200\202=\374\347\021>\234\206o=hs\326=\315O\245=~=\226=n\307\274=\366\341\017<\317\321\005>\304P\263<r\217\205=\003\201\361=Fp\264=p\370\251=\356T\004>\270\200m>4\324\332=\2321\020>\223\267\301=\250\210\246=&\022c>?\352\272=\363w+=i\006\202>\0146\004>\371\r\246=\300^\020>\374\321\005>\001\230->\340<\025>\345H/>U\325?>P0\201=\216\362/>g\243\342=S\244\327<\303\006\306=KP\343=\276\'\376=h\357\307<2\2255>@\345;="
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat"
  op: "ConcatV2"
  input: "split:1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_1"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_1/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_2"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_1:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_3"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_2"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_4"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_4"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_3"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_3"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_5"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_1"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_1/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_2"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_1:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_3"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_2"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_4"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_4"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_3"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_3"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_3"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_5"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_3"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_2/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_2/concat"
  op: "ConcatV2"
  input: "split:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_2/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_2/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_2/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_2/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_2"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_2/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_4"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_2:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_6"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_4"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_7"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_5"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_6"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_5"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_8"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_2/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_2/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_8"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_2/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_2/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_2/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_2/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_2"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_2/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_4"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_2:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_6"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_3"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_4"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_7"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_7"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_5"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_6"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_5"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_8"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_3/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_3/concat"
  op: "ConcatV2"
  input: "split:3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_8"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_3/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_3/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_3/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_3/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_3/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_3"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_3/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_6"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_3:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_9"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_9"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_10"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_6"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_10"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_10"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_7"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_7"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_11"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_3:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_11"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_3/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_3/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_8"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_3/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_3/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_3/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_3/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_3/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_3"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_3/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_6"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_3:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_9"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_9"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_10"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_6"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_10"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_10"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_7"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_9"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_7"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_11"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_3:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_11"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_7"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_4/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_4/concat"
  op: "ConcatV2"
  input: "split:4"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_4/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_4/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_4/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_4/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_4/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_4/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_4"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_4/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_8/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_8"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_4:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_8/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_12"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_12"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_13"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_8"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_13"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_9"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_12"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_9"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_14"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_4:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_14"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_4/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_4/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_14"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_4/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_4/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_4/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_4/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_4/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_4/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_4"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_4/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_8/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_8"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_4:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_8/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_12"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_12"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_7"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_13"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_8"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_13"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_13"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_9"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_12"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_9"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_14"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_4:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_14"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_9"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_5/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_5/concat"
  op: "ConcatV2"
  input: "split:5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_14"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_5/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_5/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_5/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_5/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_5/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_5/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_5"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_5/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_10/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_10"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_5:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_10/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_15"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_15"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_16"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_10"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_16"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_16"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_11"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_11"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_17"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_5:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_17"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_5/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_5/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_14"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_5/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_5/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_5/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_5/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_5/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_5/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_5"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_5/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_10/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_10"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_5:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_10/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_15"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_15"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_9"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_16"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_10"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_16"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_16"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_11"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_15"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_11"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_17"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_5:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_17"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_6/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_6/concat"
  op: "ConcatV2"
  input: "split:6"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_6/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_6/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_6/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_6/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_6/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_6/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_6"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_6/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_12/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_12"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_6:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_12/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_18"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_18"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_19"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_12"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_19"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_13"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_18"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_13"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_20"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_6:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_20"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_6/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_6/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_20"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_6/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_6/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_6/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_6/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_6/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_6/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_6"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_6/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_12/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_12"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_6:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_12/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_18"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_18"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_19"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_12"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_19"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_19"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_13"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_18"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_13"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_20"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_6:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_20"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_13"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_7/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_7/concat"
  op: "ConcatV2"
  input: "split:7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_20"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_7/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_7/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_7/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_7/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_7/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_7/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_7"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_7/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_14/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_14"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_7:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_14/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_21"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_21"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_22"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_14"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_22"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_22"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_15"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_15"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_23"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_7:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_23"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_7/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_7/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_20"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_7/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_7/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_7/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_7/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_7/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_7/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_7"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_7/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_14/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_14"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_7:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_14/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_21"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_21"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_13"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_22"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_14"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_22"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_22"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_15"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_21"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_15"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_23"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_7:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_23"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_15"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_8/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_8/concat"
  op: "ConcatV2"
  input: "split:8"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_8/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_8/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_8/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_8/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_8/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_8/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_8"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_8/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_8/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_16/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_16"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_8:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_16/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_24"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_24"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_25"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_16"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_25"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_17"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_24"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_17"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_26"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_8:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_26"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_8/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_8/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_26"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_8/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_8/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_8/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_8/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_8/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_8/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_8"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_8/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_8/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_16/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_16"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_8:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_16/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_24"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_24"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_15"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_25"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_16"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_25"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_25"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_17"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_24"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_17"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_26"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_8:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_26"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_9/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_9/concat"
  op: "ConcatV2"
  input: "split:9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_26"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_9/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_9/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_9/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_9/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_9/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_9/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_9"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_9/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_18/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_18"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_9:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_18/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_27"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_27"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_28"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_18"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_28"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_28"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_19"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_19"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_29"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_9:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_29"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_9/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_9/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_26"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_9/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_9/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_9/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_9/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_9/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_9/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_9"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_9/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_18/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_18"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_9:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_18/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_27"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_27"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_28"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_18"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_28"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_28"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_19"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_27"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_19"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_29"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_9:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_29"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_19"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_10/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_10/concat"
  op: "ConcatV2"
  input: "split:10"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_10/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_10/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_10/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_10/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_10/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_10/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_10"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_10/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_10/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_20/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_20"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_10:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_20/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_30"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_30"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_31"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_20"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_10:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_31"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_21"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_30"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_21"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_32"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_10:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_32"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_10/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_10/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_32"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_10/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_10/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_10/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_10/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_10/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_10/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_10"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_10/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_10/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_20/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_20"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_10:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_20/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_30"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_30"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_19"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_31"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_20"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_10:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_31"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_31"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_21"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_30"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_21"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_32"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_10:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_32"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_21"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_11/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_11/concat"
  op: "ConcatV2"
  input: "split:11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_32"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_11/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_11/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_11/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_11/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_11/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_11/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_11"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_11/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_11/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_22/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_22"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_11:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_22/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_33"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_33"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_34"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_22"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_34"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_34"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_23"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_23"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_35"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_11:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_35"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_11/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_11/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_32"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_11/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_11/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_11/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_11/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_11/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_11/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_11"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_11/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_11/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_22/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_22"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_11:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_22/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_33"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_33"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_21"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_34"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_22"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_34"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_34"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_23"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_33"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_23"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_35"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_11:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_35"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_12/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_12/concat"
  op: "ConcatV2"
  input: "split:12"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_12/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_12/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_12/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_12/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_12/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_12/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_12"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_12/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_12/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_24/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_24"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_12:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_24/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_36"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_36"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_37"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_24"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_37"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_25"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_36"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_25"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_38"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_12:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_38"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_12/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_12/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_38"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_12/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_12/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_12/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_12/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_12/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_12/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_12"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_12/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_12/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_24/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_24"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_12:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_24/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_36"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_36"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_37"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_24"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_37"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_37"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_25"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_36"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_25"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_38"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_12:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_38"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_25"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_13/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_13/concat"
  op: "ConcatV2"
  input: "split:13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_38"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_13/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_13/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_13/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_13/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_13/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_13/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_13"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_13/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_13/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_26/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_26"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_13:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_26/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_39"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_39"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_40"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_26"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_40"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_40"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_27"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_27"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_41"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_13:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_41"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_13/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_13/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_38"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_13/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_13/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_13/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_13/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_13/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_13/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_13"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_13/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_13/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_26/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_26"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_13:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_26/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_39"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_39"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_25"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_40"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_26"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_40"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_40"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_27"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_39"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_27"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_41"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_13:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_41"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_27"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_14/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_14/concat"
  op: "ConcatV2"
  input: "split:14"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_14/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_14/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_14/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_14/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_14/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_14/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_14"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_14/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_14/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_28/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_28"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_14:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_28/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_42"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_42"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_43"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_28"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_14:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_43"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_29"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_42"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_29"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_44"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_14:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_44"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_14/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_14/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_44"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_14/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_14/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_14/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_14/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_14/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_14/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_14"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_14/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_14/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_28/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_28"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_14:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_28/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_42"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_42"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_27"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_43"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_28"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_14:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_43"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_43"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_29"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_42"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_29"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_44"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_14:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_44"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_15/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_15/concat"
  op: "ConcatV2"
  input: "split:15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_44"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_15/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_15/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_15/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_15/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_15/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_15/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_15"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_15/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_15/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_30/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_30"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_15:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_30/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_45"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_45"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_46"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_30"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_15:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_46"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_46"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_31"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_31"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_47"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_15:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_47"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_15/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_15/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_44"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_15/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_15/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_15/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_15/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_15/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_15/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_15"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_15/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_15/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_30/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_30"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_15:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_30/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_45"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_45"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_46"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_30"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_15:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_46"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_46"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_31"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_45"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_31"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_47"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_15:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_47"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_31"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_16/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_16/concat"
  op: "ConcatV2"
  input: "split:16"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_16/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_16/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_16/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_16/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_16/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_16/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_16"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_16/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_16/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_32/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_32"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_16:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_32/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_48"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_48"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_49"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_32"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_16:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_49"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_33"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_48"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_33"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_50"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_16:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_50"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_16/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_16/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_50"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_16/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_16/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_16/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_16/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_16/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_16/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_16"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_16/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_16/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_32/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_32"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_16:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_32/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_48"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_48"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_31"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_49"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_32"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_16:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_49"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_49"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_33"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_48"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_33"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_50"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_16:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_50"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_33"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_17/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_17/concat"
  op: "ConcatV2"
  input: "split:17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_50"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_17/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_17/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_17/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_17/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_17/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_17/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_17"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_17/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_17/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_34/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_34"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_17:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_34/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_51"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_51"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_52"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_34"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_52"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_52"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_35"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_35"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_53"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_17:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_53"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_17/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_17/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_50"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_17/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_17/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_17/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_17/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_17/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_17/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_17"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_17/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_17/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_34/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_34"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_17:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_34/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_51"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_51"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_33"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_52"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_34"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_52"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_52"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_35"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_51"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_35"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_53"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_17:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_53"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_18/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_18/concat"
  op: "ConcatV2"
  input: "split:18"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_18/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_18/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_18/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_18/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_18/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_18/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_18"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_18/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_18/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_36/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_36"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_18:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_36/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_54"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_54"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_55"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_36"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_55"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_37"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_54"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_37"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_56"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_18:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_56"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_18/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_18/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_56"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_18/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_18/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_18/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_18/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_18/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_18/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_18"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_18/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_18/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_36/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_36"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_18:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_36/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_54"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_54"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_55"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_36"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_55"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_55"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_37"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_54"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_37"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_56"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_18:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_56"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_37"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_19/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_19/concat"
  op: "ConcatV2"
  input: "split:19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_56"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_19/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_19/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_19/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_19/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_19/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_19/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_19"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_19/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_19/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_38/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_38"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_19:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_38/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_57"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_57"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_58"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_38"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_58"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_58"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_39"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_39"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_59"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_19:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_59"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_19/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_19/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_56"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_19/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_19/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_19/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_19/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_19/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_19/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_19"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_19/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_19/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_38/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_38"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_19:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_38/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_57"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_57"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_37"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_58"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_38"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_58"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_58"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_39"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_57"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_39"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_59"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_19:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_59"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_39"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_20/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_20/concat"
  op: "ConcatV2"
  input: "split:20"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_20/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_20/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_20/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_20/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_20/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_20/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_20"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_20/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_20/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_40/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_40"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_20:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_40/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_60"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_60"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_61"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_40"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_20:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_61"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_41"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_60"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_41"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_62"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_20:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_62"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_20/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_20/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_62"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_20/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_20/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_20/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_20/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_20/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_20/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_20"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_20/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_20/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_40/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_40"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_20:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_40/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_60"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_60"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_39"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_61"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_40"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_20:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_61"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_61"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_41"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_60"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_41"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_62"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_20:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_62"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_21/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_21/concat"
  op: "ConcatV2"
  input: "split:21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_62"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_21/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_21/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_21/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_21/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_21/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_21/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_21"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_21/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_21/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_42/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_42"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_21:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_42/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_63"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_63"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_64"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_42"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_21:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_64"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_64"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_43"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_43"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_65"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_21:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_65"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_21/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_21/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_62"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_21/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_21/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_21/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_21/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_21/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_21/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_21"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_21/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_21/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_42/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_42"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_21:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_42/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_63"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_63"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_64"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_42"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_21:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_64"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_64"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_43"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_63"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_43"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_65"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_21:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_65"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_43"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_22/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_22/concat"
  op: "ConcatV2"
  input: "split:22"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_22/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_22/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_22/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_22/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_22/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_22/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_22"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_22/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_22/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_44/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_44"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_22:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_44/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_66"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_66"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_67"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_44"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_22:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_67"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_45"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_66"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_45"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_68"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_22:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_68"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_22/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_22/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_68"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_22/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_22/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_22/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_22/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_22/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_22/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_22"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_22/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_22/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_44/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_44"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_22:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_44/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_66"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_66"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_43"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_67"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_44"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_22:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_67"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_67"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_45"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_66"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_45"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_68"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_22:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_68"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_45"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_23/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_23/concat"
  op: "ConcatV2"
  input: "split:23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_68"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_23/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_23/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_23/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_23/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_23/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_23/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_23"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_23/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_23/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_46/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_46"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_23:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_46/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_69"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_69"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_70"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_46"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_23:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_70"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_70"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_47"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_47"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_71"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_23:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_71"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_23/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_23/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_68"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_23/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_23/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_23/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_23/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_23/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_23/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_23"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_23/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_23/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_46/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_46"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_23:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_46/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_69"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_69"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_45"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_70"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_46"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_23:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_70"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_70"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_47"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_69"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_47"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_71"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_23:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_71"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_24/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_24/concat"
  op: "ConcatV2"
  input: "split:24"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_24/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_24/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_24/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_24/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_24/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_24/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_24"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_24/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_24/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_48/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_48"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_24:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_48/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_72"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_72"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_73"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_48"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_73"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_49"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_72"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_49"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_74"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_24:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_74"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_24/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_24/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_74"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_24/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_24/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_24/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_24/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_24/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_24/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_24"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_24/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_24/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_48/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_48"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_24:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_48/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_72"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_72"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_73"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_48"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_73"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_73"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_49"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_72"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_49"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_74"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_24:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_74"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_49"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_25/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_25/concat"
  op: "ConcatV2"
  input: "split:25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_74"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_25/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_25/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_25/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_25/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_25/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_25/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_25"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_25/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_25/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_50/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_50"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_25:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_50/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_75"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_75"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_76"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_50"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_25:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_76"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_76"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_51"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_51"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_77"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_25:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_77"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_25/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_25/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_74"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_25/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_25/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_25/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_25/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_25/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_25/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_25"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_25/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_25/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_50/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_50"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_25:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_50/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_75"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_75"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_49"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_76"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_50"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_25:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_76"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_76"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_51"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_75"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_51"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_77"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_25:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_77"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_51"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_26/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_26/concat"
  op: "ConcatV2"
  input: "split:26"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_26/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_26/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_26/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_26/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_26/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_26/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_26"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_26/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_26/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_52/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_52"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_26:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_52/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_78"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_78"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_79"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_52"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_26:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_79"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_53"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_78"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_53"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_80"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_26:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_80"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_26/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_26/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_80"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_26/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_26/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_26/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_26/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_26/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_26/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_26"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_26/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_26/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_52/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_52"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_26:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_52/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_78"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_78"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_51"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_79"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_52"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_26:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_79"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_79"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_53"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_78"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_53"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_80"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_26:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_80"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_27/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_27/concat"
  op: "ConcatV2"
  input: "split:27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_80"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_27/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_27/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_27/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_27/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_27/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_27/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_27"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_27/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_27/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_54/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_54"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_27:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_54/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_81"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_81"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_82"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_54"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_27:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_82"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_82"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_55"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_55"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_83"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_27:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_83"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_27/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_27/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_80"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_27/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_27/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_27/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_27/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_27/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_27/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_27"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_27/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_27/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_54/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_54"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_27:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_54/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_81"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_81"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_82"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_54"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_27:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_82"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_82"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_55"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_81"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_55"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_83"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_27:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_83"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_55"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_28/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_28/concat"
  op: "ConcatV2"
  input: "split:28"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_28/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_28/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_28/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_28/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_28/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_28/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_28"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_28/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_28/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_56/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_56"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_28:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_56/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_84"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_84"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_85"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_56"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_28:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_85"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_57"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_84"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_57"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_86"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_28:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_86"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_28/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_28/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_86"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_28/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_28/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_28/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_28/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_28/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_28/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_28"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_28/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_28/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_56/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_56"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_28:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_56/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_84"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_84"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_55"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_85"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_56"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_28:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_85"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_85"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_57"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_84"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_57"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_86"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_28:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_86"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_57"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_29/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_29/concat"
  op: "ConcatV2"
  input: "split:29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_86"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_29/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_29/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_29/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_29/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_29/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_29/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_29"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_29/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_29/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_58/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_58"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_29:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_58/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_87"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_87"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_88"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_58"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_29:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_88"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_88"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_59"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_59"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_89"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_29:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_89"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_29/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_29/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_86"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_29/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_29/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_29/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_29/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_29/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_29/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_29"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_29/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_29/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_58/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_58"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_29:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_58/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_87"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_87"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_57"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_88"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_58"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_29:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_88"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_88"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_59"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_87"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_59"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_89"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_29:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_89"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_30/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_30/concat"
  op: "ConcatV2"
  input: "split:30"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_30/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_30/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_30/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_30/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_30/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_30/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_30"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_30/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_30/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_60/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_60"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_30:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_60/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_90"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_90"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_91"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_60"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_91"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_61"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_90"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_61"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_92"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_30:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_92"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_30/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_30/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_92"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_30/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_30/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_30/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_30/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_30/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_30/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_30"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_30/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_30/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_60/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_60"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_30:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_60/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_90"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_90"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_91"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_60"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_91"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_91"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_61"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_90"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_61"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_92"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_30:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_92"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_61"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_31/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_31/concat"
  op: "ConcatV2"
  input: "split:31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_92"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_31/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_31/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_31/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_31/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_31/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_31/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_31"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_31/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_31/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_62/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_62"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_31:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_62/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_93"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_93"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_94"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_62"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_31:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_94"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_94"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_63"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_63"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_95"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_31:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_95"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_31/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_31/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_92"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_31/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_31/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_31/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_31/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_31/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_31/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_31"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_31/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_31/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_62/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_62"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_31:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_62/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_93"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_93"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_61"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_94"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_62"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_31:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_94"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_94"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_63"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_93"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_63"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_95"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_31:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_95"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_63"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_32/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_32/concat"
  op: "ConcatV2"
  input: "split:32"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_32/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_32/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_32/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_32/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_32/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_32/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_32"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_32/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_32/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_64/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_64"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_32:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_64/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_96"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_96"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_97"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_64"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_32:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_97"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_65"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_96"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_65"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_98"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_32:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_98"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_32/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_32/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_98"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_32/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_32/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_32/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_32/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_32/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_32/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_32"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_32/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_32/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_64/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_64"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_32:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_64/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_96"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_96"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_63"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_97"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_64"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_32:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_97"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_97"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_65"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_96"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_65"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_98"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_32:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_98"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_33/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_33/concat"
  op: "ConcatV2"
  input: "split:33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_98"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_33/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_33/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_33/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_33/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_33/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_33/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_33"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_33/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_33/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_66/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_66"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_33:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_66/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_99"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_99"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_100"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_66"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_33:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_100"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_100"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_67"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_67"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_101"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_33:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_101"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_33/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_33/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_98"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_33/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_33/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_33/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_33/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_33/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_33/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_33"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_33/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_33/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_66/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_66"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_33:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_66/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_99"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_99"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_100"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_66"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_33:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_100"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_100"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_67"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_99"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_67"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_101"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_33:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_101"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_67"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_34/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_34/concat"
  op: "ConcatV2"
  input: "split:34"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_34/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_34/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_34/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_34/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_34/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_34/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_34"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_34/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_34/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_68/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_68"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_34:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_68/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_102"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_102"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_103"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_68"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_34:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_103"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_69"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_102"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_69"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_104"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_34:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_104"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_34/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_34/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_104"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_34/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_34/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_34/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_34/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_34/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_34/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_34"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_34/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_34/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_68/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_68"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_34:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_68/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_102"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_102"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_67"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_103"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_68"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_34:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_103"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_103"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_69"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_102"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_69"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_104"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_34:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_104"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_69"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_35/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_35/concat"
  op: "ConcatV2"
  input: "split:35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_104"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_35/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_35/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_35/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_35/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_35/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_35/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_35"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_35/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_35/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_70/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_70"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_35:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_70/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_105"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_105"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_106"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_70"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_35:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_106"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_106"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_71"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_71"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_107"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_35:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_107"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_35/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_35/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_104"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_35/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_35/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_35/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_35/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_35/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_35/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_35"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_35/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_35/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_70/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_70"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_35:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_70/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_105"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_105"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_69"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_106"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_70"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_35:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_106"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_106"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_71"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_105"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_71"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_107"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_35:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_107"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_36/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_36/concat"
  op: "ConcatV2"
  input: "split:36"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_36/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_36/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_36/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_36/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_36/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_36/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_36"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_36/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_36/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_72/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_72"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_36:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_72/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_108"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_108"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_109"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_72"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_109"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_73"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_108"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_73"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_110"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_36:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_110"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_36/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_36/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_110"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_36/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_36/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_36/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_36/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_36/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_36/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_36"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_36/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_36/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_72/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_72"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_36:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_72/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_108"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_108"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_109"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_72"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_109"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_109"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_73"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_108"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_73"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_110"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_36:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_110"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_73"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_37/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_37/concat"
  op: "ConcatV2"
  input: "split:37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_110"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_37/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_37/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_37/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_37/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_37/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_37/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_37"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_37/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_37/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_74/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_74"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_37:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_74/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_111"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_111"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_112"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_74"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_37:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_112"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_112"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_75"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_75"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_113"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_37:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_113"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_37/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_37/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_110"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_37/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_37/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_37/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_37/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_37/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_37/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_37"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_37/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_37/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_74/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_74"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_37:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_74/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_111"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_111"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_73"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_112"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_74"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_37:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_112"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_112"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_75"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_111"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_75"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_113"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_37:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_113"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_75"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_38/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_38/concat"
  op: "ConcatV2"
  input: "split:38"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_38/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_38/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_38/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_38/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_38/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_38/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_38"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_38/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_38/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_76/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_76"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_38:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_76/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_114"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_114"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_115"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_76"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_38:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_115"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_77"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_114"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_77"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_116"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_38:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_116"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_38/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_38/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_116"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_38/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_38/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_38/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_38/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_38/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_38/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_38"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_38/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_38/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_76/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_76"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_38:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_76/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_114"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_114"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_75"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_115"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_76"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_38:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_115"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_115"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_77"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_114"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_77"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_116"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_38:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_116"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_39/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_39/concat"
  op: "ConcatV2"
  input: "split:39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_116"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_39/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_39/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_39/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_39/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_39/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_39/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_39"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_39/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_39/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_78/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_78"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_39:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_78/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_117"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_117"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_118"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_78"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_39:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_118"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_118"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_79"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_79"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_119"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_39:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_119"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_39/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_39/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_116"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_39/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_39/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_39/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_39/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_39/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_39/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_39"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_39/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_39/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_78/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_78"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_39:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_78/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_117"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_117"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_118"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_78"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_39:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_118"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_118"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_79"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_117"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_79"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_119"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_39:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_119"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_79"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_40/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_40/concat"
  op: "ConcatV2"
  input: "split:40"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_40/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_40/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_40/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_40/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_40/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_40/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_40"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_40/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_40/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_80/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_80"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_40:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_80/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_120"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_120"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_121"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_80"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_40:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_121"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_81"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_120"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_81"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_122"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_40:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_122"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_40/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_40/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_122"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_40/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_40/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_40/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_40/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_40/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_40/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_40"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_40/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_40/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_80/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_80"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_40:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_80/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_120"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_120"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_79"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_121"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_80"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_40:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_121"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_121"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_81"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_120"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_81"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_122"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_40:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_122"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_81"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_41/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_41/concat"
  op: "ConcatV2"
  input: "split:41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_122"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_41/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_41/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_41/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_41/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_41/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_41/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_41"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_41/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_41/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_82/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_82"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_41:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_82/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_123"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_123"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_124"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_82"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_41:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_124"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_124"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_83"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_83"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_125"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_41:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_125"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_41/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_41/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_122"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_41/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_41/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_41/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_41/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_41/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_41/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_41"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_41/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_41/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_82/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_82"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_41:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_82/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_123"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_123"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_81"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_124"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_82"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_41:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_124"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_124"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_83"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_123"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_83"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_125"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_41:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_125"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_42/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_42/concat"
  op: "ConcatV2"
  input: "split:42"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_42/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_42/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_42/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_42/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_42/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_42/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_42"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_42/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_42/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_84/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_84"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_42:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_84/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_126"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_126"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_127"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_84"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_42:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_127"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_85"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_126"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_85"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_128"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_42:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_128"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_42/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_42/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_128"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_42/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_42/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_42/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_42/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_42/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_42/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_42"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_42/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_42/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_84/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_84"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_42:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_84/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_126"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_126"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_127"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_84"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_42:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_127"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_127"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_85"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_126"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_85"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_128"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_42:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_128"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_85"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_43/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_43/concat"
  op: "ConcatV2"
  input: "split:43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_128"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_43/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_43/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_43/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_43/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_43/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_43/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_43"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_43/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_43/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_86/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_86"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_43:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_86/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_129"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_129"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_130"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_86"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_43:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_130"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_130"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_87"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_129"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_87"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_131"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_43:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_131"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_43/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_43/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_128"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_43/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_43/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_43/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_43/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_43/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_43/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_43"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_43/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_43/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_86/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_86"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_43:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_86/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_129"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_129"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_85"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_130"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_86"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_43:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_130"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_130"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_87"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_129"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_87"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_131"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_43:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_131"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_87"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_44/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_44/concat"
  op: "ConcatV2"
  input: "split:44"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_131"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_44/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_44/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_44/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_44/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_44/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_44/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_44"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_44/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_44/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_88/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_88"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_44:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_88/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_132"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_132"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_133"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_88"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_44:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_133"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_133"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_89"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_132"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_89"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_134"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_44:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_134"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_44/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_44/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_134"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_44/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_44/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_44/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_44/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_44/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_44/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_44"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_44/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_44/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_88/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_88"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_44:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_88/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_132"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_132"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_87"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_133"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_88"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_44:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_133"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_133"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_89"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_132"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_89"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_134"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_44:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_134"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_45/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_45/concat"
  op: "ConcatV2"
  input: "split:45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_134"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_45/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_45/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_45/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_45/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_45/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_45/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_45"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_45/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_45/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_90/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_90"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_45:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_90/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_135"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_135"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_136"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_90"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_45:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_136"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_136"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_91"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_135"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_91"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_137"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_45:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_137"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_45/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_45/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_134"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_45/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_45/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_45/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_45/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_45/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_45/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_45"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_45/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_45/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_90/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_90"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_45:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_90/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_135"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_135"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_136"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_90"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_45:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_136"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_136"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_91"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_135"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_91"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_137"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_45:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_137"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_91"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_46/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_46/concat"
  op: "ConcatV2"
  input: "split:46"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_137"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_46/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_46/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_46/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_46/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_46/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_46/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_46"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_46/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_46/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_92/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_92"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_46:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_92/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_138"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_138"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_139"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_92"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_46:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_139"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_139"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_93"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_138"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_93"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_140"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_46:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_140"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_46/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_46/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_140"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_46/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_46/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_46/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_46/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_46/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_46/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_46"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_46/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_46/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_92/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_92"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_46:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_92/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_138"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_138"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_91"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_139"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_92"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_46:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_139"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_139"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_93"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_138"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_93"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_140"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_46:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_140"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_93"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_47/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_47/concat"
  op: "ConcatV2"
  input: "split:47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_140"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_47/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_47/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_47/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_47/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_47/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_47/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_47"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_47/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_47/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_94/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_94"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_47:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_94/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_141"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_141"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_142"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_94"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_47:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_142"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_142"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_95"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_141"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_95"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_143"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_47:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_143"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_47/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_47/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_140"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_47/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_47/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_47/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_47/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_47/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_47/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_47"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_47/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_47/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_94/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_94"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_47:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_94/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_141"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_141"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_93"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_142"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_94"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_47:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_142"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_142"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_95"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_141"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_95"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_143"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_47:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_143"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_48/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_48/concat"
  op: "ConcatV2"
  input: "split:48"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_143"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_48/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_48/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_48/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_48/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_48/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_48/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_48"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_48/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_48/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_96/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_96"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_48:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_96/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_144"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_144"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_145"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_96"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_145"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_145"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_97"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_144"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_97"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_146"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_48:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_146"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_48/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_48/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_146"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_48/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_48/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_48/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_48/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_48/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_48/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_48"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_48/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_48/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_96/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_96"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_48:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_96/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_144"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_144"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_145"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_96"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_145"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_145"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_97"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_144"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_97"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_146"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_48:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_146"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_97"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_49/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_49/concat"
  op: "ConcatV2"
  input: "split:49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_146"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_49/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_49/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_49/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_49/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_49/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_49/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_49"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_49/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_49/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_98/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_98"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_49:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_98/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_147"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_147"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_148"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_98"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_49:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_148"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_148"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_99"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_147"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_99"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_149"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_49:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_149"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_49/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_49/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_146"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_49/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_49/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_49/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_49/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_49/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_49/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_49"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_49/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_49/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_98/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_98"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_49:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_98/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_147"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_147"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_97"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_148"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_98"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_49:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_148"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_148"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_99"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_147"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_99"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_149"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_49:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_149"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_99"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_50/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_50/concat"
  op: "ConcatV2"
  input: "split:50"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_149"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_50/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_50/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_50/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_50/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_50/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_50/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_50"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_50/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_50/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_100/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_100"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_50:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_100/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_150"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_150"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_151"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_100"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_50:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_151"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_151"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_101"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_150"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_101"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_152"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_50:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_152"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_50/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_50/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_152"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_50/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_50/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_50/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_50/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_50/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_50/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_50"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_50/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_50/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_100/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_100"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_50:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_100/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_150"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_150"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_99"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_151"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_100"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_50:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_151"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_151"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_101"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_150"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_101"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_152"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_50:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_152"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_51/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_51/concat"
  op: "ConcatV2"
  input: "split:51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_152"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_51/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_51/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_51/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_51/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_51/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_51/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_51"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_51/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_51/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_102/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_102"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_51:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_102/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_153"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_153"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_154"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_102"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_51:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_154"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_154"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_103"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_153"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_103"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_155"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_51:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_155"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_51/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_51/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_152"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_51/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_51/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_51/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_51/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_51/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_51/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_51"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_51/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_51/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_102/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_102"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_51:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_102/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_153"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_153"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_154"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_102"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_51:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_154"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_154"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_103"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_153"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_103"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_155"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_51:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_155"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_103"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_52/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_52/concat"
  op: "ConcatV2"
  input: "split:52"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_155"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_52/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_52/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_52/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_52/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_52/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_52/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_52"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_52/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_52/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_104/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_104"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_52:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_104/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_156"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_156"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_157"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_104"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_52:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_157"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_157"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_105"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_156"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_105"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_158"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_52:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_158"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_52/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_52/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_158"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_52/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_52/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_52/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_52/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_52/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_52/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_52"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_52/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_52/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_104/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_104"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_52:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_104/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_156"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_156"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_103"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_157"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_104"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_52:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_157"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_157"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_105"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_156"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_105"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_158"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_52:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_158"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_105"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_53/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_53/concat"
  op: "ConcatV2"
  input: "split:53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_158"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_53/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_53/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_53/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_53/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_53/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_53/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_53"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_53/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_53/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_106/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_106"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_53:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_106/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_159"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_159"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_160"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_106"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_53:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_160"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_160"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_107"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_159"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_107"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_161"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_53:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_161"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_53/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_53/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_158"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_53/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_53/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_53/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_53/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_53/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_53/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_53"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_53/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_53/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_106/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_106"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_53:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_106/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_159"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_159"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_105"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_160"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_106"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_53:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_160"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_160"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_107"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_159"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_107"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_161"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_53:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_161"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_54/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_54/concat"
  op: "ConcatV2"
  input: "split:54"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_161"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_54/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_54/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_54/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_54/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_54/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_54/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_54"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_54/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_54/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_108/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_108"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_54:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_108/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_162"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_162"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_163"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_108"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_54:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_163"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_163"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_109"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_162"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_109"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_164"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_54:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_164"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_54/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_54/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_164"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_54/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_54/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_54/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_54/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_54/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_54/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_54"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_54/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_54/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_108/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_108"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_54:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_108/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_162"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_162"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_163"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_108"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_54:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_163"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_163"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_109"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_162"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_109"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_164"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_54:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_164"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_109"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_55/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_55/concat"
  op: "ConcatV2"
  input: "split:55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_164"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_55/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_55/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_55/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_55/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_55/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_55/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_55"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_55/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_55/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_110/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_110"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_55:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_110/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_165"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_165"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_166"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_110"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_55:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_166"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_166"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_111"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_165"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_111"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_167"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_55:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_167"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_55/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_55/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_164"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_55/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_55/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_55/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_55/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_55/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_55/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_55"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_55/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_55/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_110/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_110"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_55:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_110/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_165"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_165"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_109"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_166"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_110"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_55:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_166"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_166"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_111"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_165"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_111"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_167"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_55:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_167"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_111"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_56/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_56/concat"
  op: "ConcatV2"
  input: "split:56"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_167"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_56/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_56/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_56/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_56/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_56/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_56/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_56"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_56/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_56/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_112/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_112"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_56:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_112/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_168"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_168"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_169"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_112"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_56:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_169"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_169"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_113"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_168"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_113"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_170"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_56:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_170"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_56/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_56/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_170"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_56/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_56/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_56/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_56/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_56/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_56/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_56"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_56/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_56/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_112/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_112"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_56:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_112/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_168"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_168"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_111"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_169"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_112"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_56:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_169"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_169"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_113"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_168"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_113"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_170"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_56:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_170"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_57/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_57/concat"
  op: "ConcatV2"
  input: "split:57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_170"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_57/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_57/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_57/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_57/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_57/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_57/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_57"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_57/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_57/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_114/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_114"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_57:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_114/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_171"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_171"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_172"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_114"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_57:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_172"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_172"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_115"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_171"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_115"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_173"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_57:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_173"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_57/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_57/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_170"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_57/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_57/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_57/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_57/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_57/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_57/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_57"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_57/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_57/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_114/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_114"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_57:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_114/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_171"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_171"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_172"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_114"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_57:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_172"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_172"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_115"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_171"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_115"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_173"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_57:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_173"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_115"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_58/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_58/concat"
  op: "ConcatV2"
  input: "split:58"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_173"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_58/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_58/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_58/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_58/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_58/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_58/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_58"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_58/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_58/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_116/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_116"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_58:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_116/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_174"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_174"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_175"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_116"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_58:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_175"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_175"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_117"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_174"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_117"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_176"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_58:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_176"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_58/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_58/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_176"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_58/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_58/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_58/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_58/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_58/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_58/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_58"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_58/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_58/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_116/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_116"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_58:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_116/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_174"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_174"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_115"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_175"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_116"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_58:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_175"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_175"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_117"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_174"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_117"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_176"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_58:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_176"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_117"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_59/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_59/concat"
  op: "ConcatV2"
  input: "split:59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_176"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_59/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_59/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_59/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_59/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_59/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_59/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_59"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_59/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_59/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_118/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_118"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_59:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_118/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_177"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_177"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_178"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_118"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_59:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_178"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_178"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_119"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_177"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_119"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_179"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_59:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_179"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_59/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_59/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_176"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_59/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_59/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_59/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_59/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_59/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_59/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_59"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_59/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_59/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_118/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_118"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_59:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_118/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_177"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_177"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_117"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_178"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_118"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_59:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_178"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_178"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_119"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_177"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_119"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_179"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_59:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_179"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_60/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_60/concat"
  op: "ConcatV2"
  input: "split:60"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_179"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_60/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_60/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_60/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_60/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_60/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_60/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_60"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_60/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_60/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_120/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_120"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_60:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_120/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_180"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_180"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_181"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_120"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_60:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_181"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_181"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_121"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_180"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_121"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_182"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_60:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_182"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_60/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_60/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_182"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_60/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_60/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_60/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_60/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_60/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_60/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_60"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_60/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_60/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_120/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_120"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_60:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_120/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_180"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_180"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_181"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_120"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_60:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_181"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_181"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_121"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_180"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_121"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_182"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_60:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_182"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_121"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_61/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_61/concat"
  op: "ConcatV2"
  input: "split:61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_182"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_61/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_61/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_61/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_61/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_61/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_61/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_61"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_61/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_61/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_122/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_122"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_61:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_122/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_183"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_183"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_184"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_122"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_61:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_184"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_184"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_123"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_183"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_123"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_185"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_61:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_185"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_61/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_61/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_182"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_61/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_61/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_61/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_61/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_61/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_61/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_61"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_61/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_61/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_122/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_122"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_61:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_122/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_183"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_183"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_121"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_184"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_122"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_61:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_184"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_184"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_123"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_183"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_123"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_185"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_61:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_185"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_123"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_62/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_62/concat"
  op: "ConcatV2"
  input: "split:62"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_185"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_62/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_62/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_62/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_62/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_62/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_62/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_62"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_62/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_62/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_124/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_124"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_62:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_124/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_186"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_186"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_187"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_124"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_62:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_187"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_187"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_125"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_186"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_125"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_188"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_62:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_188"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_62/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_62/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_188"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_62/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_62/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_62/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_62/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_62/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_62/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_62"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_62/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_62/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_124/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_124"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_62:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_124/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_186"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_186"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_123"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_187"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_124"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_62:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_187"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_187"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_125"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_186"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_125"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_188"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_62:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_188"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_63/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_63/concat"
  op: "ConcatV2"
  input: "split:63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_188"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_63/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_63/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_63/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_63/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_63/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_63/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_63"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_63/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_63/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_126/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_126"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_63:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_126/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_189"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_189"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_190"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_126"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_63:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_190"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_190"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_127"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_189"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_127"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_191"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_63:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_191"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_63/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_63/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_188"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_63/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_63/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_63/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_63/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_63/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_63/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_63"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_63/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_63/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_126/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_126"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_63:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_126/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_189"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_189"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_190"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_126"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_63:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_190"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_190"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_127"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_189"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_127"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_191"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_63:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_191"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_127"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_64/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_64/concat"
  op: "ConcatV2"
  input: "split:64"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_191"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_64/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_64/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_64/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_64/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_64/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_64/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_64"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_64/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_64/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_128/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_128"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_64:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_128/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_192"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_192"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_193"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_128"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_64:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_193"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_193"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_129"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_192"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_129"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_194"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_64:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_194"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_129"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_64/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_64/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_194"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_64/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_64/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_64/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_64/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_64/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_64/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_64"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_64/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_64/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_128/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_128"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_64:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_128/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_192"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_192"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_127"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_193"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_128"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_64:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_193"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_193"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_129"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_192"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_129"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_194"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_64:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_194"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_129"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_65/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_65/concat"
  op: "ConcatV2"
  input: "split:65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_194"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_65/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_65/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_65/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_65/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_65/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_65/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_65"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_65/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_65/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_130/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_130"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_65:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_130/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_195"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_195"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_129"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_196"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_130"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_65:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_196"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_196"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_131"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_195"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_131"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_197"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_65:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_197"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_131"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_65/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_65/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_194"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_65/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_65/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_65/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_65/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_65/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_65/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_65"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_65/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_65/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_130/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_130"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_65:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_130/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_195"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_195"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_129"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_196"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_130"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_65:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_196"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_196"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_131"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_195"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_131"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_197"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_65:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_197"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_66/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_66/concat"
  op: "ConcatV2"
  input: "split:66"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_197"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_66/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_66/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_66/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_66/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_66/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_66/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_66"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_66/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_66/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_132/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_132"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_66:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_132/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_198"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_198"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_131"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_199"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_132"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_66:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_199"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_199"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_133"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_198"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_133"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_200"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_66:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_200"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_133"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_66/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_66/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_200"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_66/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_66/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_66/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_66/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_66/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_66/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_66"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_66/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_66/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_132/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_132"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_66:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_132/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_198"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_198"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_199"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_132"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_66:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_199"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_199"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_133"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_198"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_133"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_200"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_66:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_200"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_133"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_67/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_67/concat"
  op: "ConcatV2"
  input: "split:67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_200"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_67/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_67/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_67/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_67/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_67/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_67/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_67"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_67/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_67/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_134/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_134"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_67:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_134/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_201"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_201"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_133"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_202"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_134"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_67:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_202"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_202"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_135"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_201"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_135"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_203"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_67:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_203"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_135"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_67/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_67/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_200"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_67/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_67/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_67/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_67/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_67/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_67/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_67"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_67/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_67/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_134/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_134"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_67:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_134/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_201"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_201"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_133"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_202"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_134"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_67:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_202"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_202"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_135"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_201"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_135"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_203"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_67:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_203"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_135"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_68/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_68/concat"
  op: "ConcatV2"
  input: "split:68"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_203"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_68/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_68/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_68/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_68/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_68/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_68/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_68"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_68/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_68/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_136/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_136"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_68:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_136/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_204"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_204"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_135"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_205"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_136"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_68:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_205"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_205"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_137"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_204"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_137"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_206"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_68:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_206"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_137"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_68/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_68/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_206"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_68/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_68/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_68/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_68/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_68/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_68/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_68"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_68/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_68/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_136/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_136"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_68:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_136/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_204"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_204"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_135"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_205"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_136"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_68:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_205"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_205"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_137"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_204"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_137"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_206"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_68:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_206"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_69/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_69/concat"
  op: "ConcatV2"
  input: "split:69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_206"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_69/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_69/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_69/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_69/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_69/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_69/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_69"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_69/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_69/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_138/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_138"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_69:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_138/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_207"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_207"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_137"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_208"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_138"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_69:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_208"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_208"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_139"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_207"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_139"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_209"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_69:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_209"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_139"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_69/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_69/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_206"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_69/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_69/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_69/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_69/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_69/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_69/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_69"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_69/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_69/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_138/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_138"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_69:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_138/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_207"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_207"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_208"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_138"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_69:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_208"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_208"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_139"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_207"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_139"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_209"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_69:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_209"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_139"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_70/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_70/concat"
  op: "ConcatV2"
  input: "split:70"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_209"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_70/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_70/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_70/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_70/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_70/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_70/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_70"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_70/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_70/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_140/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_140"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_70:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_140/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_210"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_210"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_139"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_211"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_140"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_70:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_211"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_211"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_141"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_210"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_141"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_212"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_70:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_212"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_141"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_70/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_70/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_212"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_70/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_70/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_70/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_70/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_70/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_70/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_70"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_70/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_70/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_140/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_140"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_70:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_140/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_210"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_210"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_139"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_211"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_140"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_70:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_211"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_211"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_141"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_210"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_141"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_212"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_70:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_212"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_141"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_71/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_71/concat"
  op: "ConcatV2"
  input: "split:71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_212"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_71/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_71/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_71/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_71/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_71/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_71/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_71"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_71/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_71/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_142/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_142"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_71:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_142/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_213"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_213"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_141"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_214"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_142"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_71:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_214"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_214"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_143"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_213"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_143"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_215"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_71:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_215"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_143"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_71/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_71/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_212"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_71/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_71/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_71/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_71/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_71/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_71/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_71"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_71/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_71/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_142/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_142"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_71:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_142/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_213"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_213"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_141"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_214"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_142"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_71:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_214"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_214"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_143"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_213"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_143"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_215"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_71:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_215"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_72/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_72/concat"
  op: "ConcatV2"
  input: "split:72"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_215"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_72/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_72/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_72/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_72/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_72/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_72/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_72"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_72/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_72/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_144/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_144"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_72:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_144/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_216"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_216"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_143"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_217"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_144"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_72:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_217"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_217"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_145"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_216"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_145"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_218"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_72:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_218"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_145"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_72/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_72/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_218"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_72/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_72/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_72/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_72/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_72/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_72/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_72"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_72/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_72/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_144/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_144"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_72:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_144/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_216"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_216"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_217"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_144"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_72:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_217"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_217"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_145"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_216"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_145"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_218"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_72:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_218"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_145"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_73/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_73/concat"
  op: "ConcatV2"
  input: "split:73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_218"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_73/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_73/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_73/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_73/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_73/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_73/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_73"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_73/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_73/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_146/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_146"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_73:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_146/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_219"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_219"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_145"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_220"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_146"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_73:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_220"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_220"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_147"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_219"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_147"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_221"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_73:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_221"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_147"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_73/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_73/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_218"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_73/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_73/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_73/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_73/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_73/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_73/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_73"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_73/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_73/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_146/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_146"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_73:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_146/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_219"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_219"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_145"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_220"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_146"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_73:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_220"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_220"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_147"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_219"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_147"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_221"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_73:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_221"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_147"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_74/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_74/concat"
  op: "ConcatV2"
  input: "split:74"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_221"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_74/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_74/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_74/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_74/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_74/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_74/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_74"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_74/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_74/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_148/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_148"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_74:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_148/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_222"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_222"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_147"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_223"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_148"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_74:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_223"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_223"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_149"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_222"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_149"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_224"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_74:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_224"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_149"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_74/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_74/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_224"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_74/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_74/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_74/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_74/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_74/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_74/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_74"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_74/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_74/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_148/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_148"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_74:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_148/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_222"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_222"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_147"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_223"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_148"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_74:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_223"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_223"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_149"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_222"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_149"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_224"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_74:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_224"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_75/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_75/concat"
  op: "ConcatV2"
  input: "split:75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_224"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_75/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_75/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_75/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_75/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_75/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_75/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_75"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_75/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_75/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_150/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_150"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_75:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_150/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_225"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_225"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_149"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_226"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_150"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_75:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_226"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_226"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_151"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_225"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_151"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_227"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_75:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_227"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_151"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_75/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_75/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_224"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_75/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_75/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_75/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_75/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_75/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_75/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_75"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_75/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_75/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_150/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_150"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_75:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_150/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_225"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_225"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_226"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_150"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_75:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_226"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_226"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_151"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_225"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_151"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_227"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_75:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_227"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_151"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_76/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_76/concat"
  op: "ConcatV2"
  input: "split:76"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_227"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_76/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_76/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_76/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_76/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_76/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_76/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_76"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_76/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_76/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_152/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_152"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_76:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_152/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_228"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_228"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_151"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_229"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_152"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_76:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_229"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_229"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_153"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_228"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_153"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_230"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_76:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_230"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_153"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_76/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_76/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_230"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_76/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_76/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_76/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_76/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_76/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_76/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_76"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_76/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_76/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_152/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_152"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_76:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_152/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_228"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_228"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_151"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_229"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_152"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_76:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_229"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_229"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_153"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_228"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_153"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_230"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_76:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_230"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_153"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_77/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_77/concat"
  op: "ConcatV2"
  input: "split:77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_230"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_77/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_77/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_77/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_77/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_77/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_77/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_77"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_77/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_77/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_154/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_154"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_77:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_154/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_231"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_231"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_153"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_232"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_154"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_77:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_232"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_232"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_155"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_231"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_155"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_233"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_77:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_233"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_155"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_77/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_77/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_230"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_77/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_77/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_77/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_77/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_77/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_77/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_77"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_77/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_77/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_154/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_154"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_77:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_154/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_231"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_231"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_153"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_232"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_154"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_77:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_232"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_232"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_155"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_231"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_155"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_233"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_77:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_233"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_78/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_78/concat"
  op: "ConcatV2"
  input: "split:78"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_233"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_78/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_78/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_78/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_78/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_78/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_78/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_78"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_78/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_78/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_156/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_156"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_78:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_156/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_234"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_234"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_155"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_235"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_156"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_78:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_235"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_235"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_157"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_234"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_157"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_236"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_78:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_236"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_157"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_78/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_78/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_236"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_78/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_78/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_78/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_78/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_78/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_78/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_78"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_78/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_78/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_156/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_156"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_78:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_156/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_234"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_234"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_235"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_156"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_78:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_235"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_235"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_157"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_234"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_157"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_236"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_78:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_236"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_157"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_79/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_79/concat"
  op: "ConcatV2"
  input: "split:79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_236"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_79/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_79/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_79/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_79/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_79/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_79/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_79"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_79/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_79/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_158/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_158"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_79:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_158/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_237"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_237"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_157"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_238"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_158"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_79:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_238"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_238"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_159"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_237"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_159"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_239"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_79:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_239"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_159"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_79/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_79/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_236"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_79/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_79/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_79/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_79/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_79/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_79/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_79"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_79/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_79/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_158/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_158"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_79:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_158/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_237"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_237"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_157"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_238"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_158"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_79:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_238"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_238"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_159"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_237"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_159"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_239"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_79:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_239"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_159"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_80/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_80/concat"
  op: "ConcatV2"
  input: "split:80"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_239"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_80/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_80/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_80/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_80/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_80/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_80/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_80"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_80/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_80/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_160/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_160"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_80:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_160/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_240"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_240"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_159"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_241"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_160"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_80:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_241"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_241"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_161"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_240"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_161"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_242"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_80:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_242"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_161"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_80/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_80/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_242"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_80/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_80/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_80/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_80/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_80/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_80/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_80"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_80/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_80/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_160/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_160"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_80:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_160/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_240"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_240"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_159"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_241"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_160"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_80:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_241"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_241"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_161"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_240"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_161"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_242"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_80:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_242"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_81/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_81/concat"
  op: "ConcatV2"
  input: "split:81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_242"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_81/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_81/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_81/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_81/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_81/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_81/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_81"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_81/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_81/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_162/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_162"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_81:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_162/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_243"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_243"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_161"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_244"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_162"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_81:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_244"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_244"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_163"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_243"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_163"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_245"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_81:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_245"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_163"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_81/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_81/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_242"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_81/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_81/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_81/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_81/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_81/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_81/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_81"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_81/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_81/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_162/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_162"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_81:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_162/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_243"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_243"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_244"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_162"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_81:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_244"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_244"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_163"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_243"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_163"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_245"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_81:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_245"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_163"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_82/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_82/concat"
  op: "ConcatV2"
  input: "split:82"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_245"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_82/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_82/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_82/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_82/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_82/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_82/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_82"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_82/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_82/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_164/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_164"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_82:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_164/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_246"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_246"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_163"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_247"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_164"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_82:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_247"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_247"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_165"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_246"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_165"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_248"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_82:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_248"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_165"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_82/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_82/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_248"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_82/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_82/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_82/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_82/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_82/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_82/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_82"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_82/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_82/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_164/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_164"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_82:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_164/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_246"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_246"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_163"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_247"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_164"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_82:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_247"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_247"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_165"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_246"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_165"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_248"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_82:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_248"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_165"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_83/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_83/concat"
  op: "ConcatV2"
  input: "split:83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_248"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_83/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_83/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_83/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_83/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_83/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_83/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_83"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_83/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_83/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_166/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_166"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_83:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_166/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_249"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_249"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_165"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_250"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_166"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_83:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_250"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_250"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_167"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_249"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_167"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_251"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_83:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_251"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_167"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_83/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_83/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_248"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_83/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_83/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_83/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_83/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_83/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_83/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_83"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_83/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_83/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_166/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_166"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_83:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_166/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_249"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_249"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_165"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_250"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_166"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_83:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_250"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_250"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_167"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_249"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_167"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_251"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_83:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_251"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_84/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_84/concat"
  op: "ConcatV2"
  input: "split:84"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_251"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_84/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_84/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_84/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_84/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_84/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_84/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_84"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_84/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_84/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_168/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_168"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_84:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_168/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_252"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_252"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_167"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_253"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_168"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_84:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_253"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_253"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_169"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_252"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_169"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_254"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_84:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_254"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_169"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_84/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_84/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_254"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_84/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_84/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_84/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_84/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_84/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_84/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_84"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_84/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_84/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_168/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_168"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_84:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_168/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_252"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_252"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_253"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_168"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_84:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_253"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_253"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_169"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_252"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_169"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_254"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_84:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_254"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_169"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_85/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_85/concat"
  op: "ConcatV2"
  input: "split:85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_254"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_85/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_85/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_85/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_85/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_85/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_85/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_85"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_85/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_85/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_170/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_170"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_85:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_170/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_255"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_255"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_169"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_256"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_170"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_85:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_256"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_256"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_171"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_255"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_171"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_257"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_85:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_257"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_171"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_85/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_85/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_257"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_254"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_85/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_85/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_85/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_85/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_85/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_85/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_85"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_85/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_85/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_170/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_170"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_85:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_170/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_255"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_255"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_169"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_256"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_170"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_85:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_256"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_256"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_171"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_255"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_171"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_257"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_85:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_257"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_171"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_86/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_86/concat"
  op: "ConcatV2"
  input: "split:86"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_257"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_86/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_86/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_86/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_86/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_86/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_86/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_86"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_86/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_86/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_172/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_172"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_86:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_172/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_258"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_258"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_171"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_259"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_172"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_86:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_259"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_259"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_173"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_258"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_173"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_260"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_86:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_260"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_173"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_86/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_86/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_260"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_257"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_86/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_86/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_86/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_86/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_86/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_86/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_86"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_86/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_86/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_172/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_172"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_86:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_172/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_258"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_258"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_171"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_259"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_172"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_86:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_259"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_259"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_173"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_258"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_173"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_260"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_86:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_260"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_87/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_87/concat"
  op: "ConcatV2"
  input: "split:87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_260"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_87/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_87/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_87/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_87/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_87/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_87/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_87"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_87/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_87/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_174/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_174"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_87:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_174/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_261"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_261"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_173"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_262"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_174"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_87:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_262"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_262"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_175"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_261"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_175"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_263"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_87:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_263"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_175"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_87/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_87/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_263"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_260"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_87/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_87/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_87/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_87/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_87/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_87/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_87"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_87/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_87/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_174/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_174"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_87:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_174/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_261"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_261"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_262"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_174"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_87:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_262"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_262"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_175"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_261"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_175"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_263"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_87:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_263"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_175"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_88/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_88/concat"
  op: "ConcatV2"
  input: "split:88"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_263"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_88/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_88/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_88/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_88/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_88/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_88/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_88"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_88/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_88/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_176/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_176"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_88:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_176/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_264"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_264"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_175"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_265"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_176"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_88:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_265"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_265"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_177"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_264"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_177"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_266"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_88:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_266"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_177"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_88/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_88/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_266"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_263"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_88/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_88/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_88/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_88/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_88/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_88/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_88"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_88/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_88/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_176/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_176"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_88:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_176/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_264"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_264"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_175"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_265"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_176"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_88:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_265"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_265"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_177"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_264"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_177"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_266"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_88:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_266"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_177"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_89/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_89/concat"
  op: "ConcatV2"
  input: "split:89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_266"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_89/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_89/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_89/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_89/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_89/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_89/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_89"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_89/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_89/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_178/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_178"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_89:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_178/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_267"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_267"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_177"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_268"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_178"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_89:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_268"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_268"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_179"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_267"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_179"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_269"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_89:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_269"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_179"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_89/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_89/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_269"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_266"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_89/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_89/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_89/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_89/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_89/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_89/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_89"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_89/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_89/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_178/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_178"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_89:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_178/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_267"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_267"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_177"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_268"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_178"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_89:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_268"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_268"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_179"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_267"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_179"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_269"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_89:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_269"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_90/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_90/concat"
  op: "ConcatV2"
  input: "split:90"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_269"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_90/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_90/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_90/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_90/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_90/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_90/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_90"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_90/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_90/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_180/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_180"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_90:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_180/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_270"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_270"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_179"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_271"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_180"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_90:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_271"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_271"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_181"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_270"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_181"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_272"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_90:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_272"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_181"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_90/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_90/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_272"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_269"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_90/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_90/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_90/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_90/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_90/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_90/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_90"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_90/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_90/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_180/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_180"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_90:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_180/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_270"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_270"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_271"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_180"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_90:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_271"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_271"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_181"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_270"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_181"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_272"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_90:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_272"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_181"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_91/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_91/concat"
  op: "ConcatV2"
  input: "split:91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_272"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_91/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_91/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_91/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_91/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_91/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_91/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_91"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_91/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_91/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_182/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_182"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_91:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_182/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_273"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_273"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_181"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_274"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_182"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_91:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_274"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_274"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_183"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_273"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_183"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_275"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_91:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_275"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_183"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_91/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_91/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_275"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_272"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_91/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_91/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_91/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_91/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_91/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_91/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_91"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_91/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_91/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_182/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_182"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_91:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_182/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_273"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_273"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_181"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_274"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_182"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_91:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_274"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_274"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_183"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_273"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_183"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_275"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_91:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_275"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_183"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_92/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_92/concat"
  op: "ConcatV2"
  input: "split:92"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_275"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_92/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_92/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_92/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_92/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_92/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_92/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_92"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_92/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_92/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_184/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_184"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_92:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_184/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_276"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_276"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_183"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_277"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_184"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_92:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_277"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_277"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_185"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_276"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_185"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_278"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_92:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_278"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_185"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_92/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_92/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_278"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_275"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_92/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_92/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_92/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_92/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_92/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_92/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_92"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_92/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_92/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_184/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_184"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_92:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_184/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_276"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_276"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_183"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_277"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_184"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_92:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_277"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_277"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_185"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_276"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_185"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_278"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_92:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_278"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_93/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_93/concat"
  op: "ConcatV2"
  input: "split:93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_278"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_93/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_93/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_93/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_93/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_93/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_93/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_93"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_93/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_93/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_186/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_186"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_93:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_186/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_279"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_279"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_185"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_280"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_186"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_93:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_280"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_280"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_187"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_279"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_187"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_281"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_93:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_281"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_187"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_93/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_93/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_281"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_278"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_93/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_93/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_93/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_93/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_93/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_93/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_93"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_93/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_93/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_186/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_186"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_93:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_186/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_279"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_279"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_280"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_186"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_93:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_280"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_280"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_187"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_279"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_187"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_281"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_93:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_281"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_187"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_94/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_94/concat"
  op: "ConcatV2"
  input: "split:94"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_281"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_94/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_94/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_94/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_94/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_94/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_94/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_94"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_94/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_94/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_188/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_188"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_94:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_188/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_282"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_282"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_187"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_283"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_188"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_94:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_283"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_283"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_189"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_282"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_189"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_284"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_94:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_284"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_189"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_94/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_94/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_284"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_281"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_94/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_94/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_94/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_94/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_94/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_94/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_94"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_94/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_94/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_188/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_188"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_94:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_188/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_282"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_282"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_187"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_283"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_188"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_94:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_283"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_283"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_189"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_282"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_189"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_284"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_94:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_284"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_189"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_95/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_95/concat"
  op: "ConcatV2"
  input: "split:95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_284"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_95/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_95/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_95/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_95/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_95/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_95/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_95"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_95/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_95/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_190/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_190"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_95:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_190/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_285"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_285"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_189"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_286"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_190"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_95:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_286"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_286"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_191"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_285"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_191"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_287"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_95:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_287"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_191"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_95/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_95/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_287"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_284"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_95/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_95/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_95/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_95/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_95/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_95/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_95"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_95/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_95/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_190/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_190"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_95:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_190/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_285"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_285"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_189"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_286"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_190"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_95:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_286"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_286"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_191"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_285"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_191"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_287"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_95:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_287"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_96/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_96/concat"
  op: "ConcatV2"
  input: "split:96"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_287"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_96/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_96/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_96/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_96/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_96/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_96/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_96"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_96/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_96/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_192/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_192"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_96:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_192/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_288"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_288"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_191"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_289"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_192"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_96:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_289"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_289"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_193"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_288"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_193"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_290"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_96:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_290"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_193"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_96/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_96/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_290"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_287"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_96/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_96/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_96/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_96/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_96/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_96/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_96"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_96/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_96/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_192/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_192"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_96:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_192/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_288"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_288"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_289"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_192"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_96:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_289"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_289"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_193"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_288"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_193"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_290"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_96:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_290"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_193"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_97/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_97/concat"
  op: "ConcatV2"
  input: "split:97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_290"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_97/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_97/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_97/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_97/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_97/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_97/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_97"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_97/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_97/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_194/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_194"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_97:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_194/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_291"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_291"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_193"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_292"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_194"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_97:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_292"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_292"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_195"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_291"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_195"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_293"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_97:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_293"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_195"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_97/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_97/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_293"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_290"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_97/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_97/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_97/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_97/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_97/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_97/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_97"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_97/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_97/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_194/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_194"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_97:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_194/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_291"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_291"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_193"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_292"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_194"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_97:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_292"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_292"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_195"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_291"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_195"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_293"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_97:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_293"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_195"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_98/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_98/concat"
  op: "ConcatV2"
  input: "split:98"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_293"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_98/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_98/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_98/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_98/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_98/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_98/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_98"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_98/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_98/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_196/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_196"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_98:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_196/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_294"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_294"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_195"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_295"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_196"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_98:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_295"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_295"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_197"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_294"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_197"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_296"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_98:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_296"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_197"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_98/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_98/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_296"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_293"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_98/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_98/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_98/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_98/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_98/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_98/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_98"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_98/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_98/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_196/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_196"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_98:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_196/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_294"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_294"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_195"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_295"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_196"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_98:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_295"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_295"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_197"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_294"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_197"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_296"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_98:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_296"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_99/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_99/concat"
  op: "ConcatV2"
  input: "split:99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_296"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_99/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_99/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_99/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_99/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_99/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_99/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_99"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_99/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_99/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_198/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_198"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_99:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_198/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_297"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_297"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_197"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_298"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_198"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_99:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_298"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_298"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_199"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_297"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_199"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_299"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_99:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_299"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_199"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_99/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_99/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_299"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_296"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_99/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_99/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_99/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_99/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_99/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_99/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_99"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_99/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_99/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_198/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_198"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_99:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_198/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_297"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_297"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_298"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_198"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_99:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_298"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_298"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_199"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_297"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_199"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_299"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_99:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_299"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_199"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_100/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_100/concat"
  op: "ConcatV2"
  input: "split:100"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_299"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_100/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_100/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_100/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_100/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_100/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_100/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_100"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_100/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_100/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_200/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_200"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_100:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_200/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_300"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_300"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_199"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_301"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_200"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_100:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_301"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_301"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_201"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_300"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_201"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_302"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_100:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_302"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_201"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_100/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_100/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_302"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_299"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_100/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_100/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_100/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_100/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_100/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_100/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_100"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_100/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_100/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_200/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_200"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_100:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_200/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_300"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_300"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_199"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_301"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_200"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_100:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_301"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_301"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_201"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_300"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_201"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_302"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_100:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_302"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_201"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_101/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_101/concat"
  op: "ConcatV2"
  input: "split:101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_302"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_101/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_101/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_101/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_101/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_101/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_101/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_101"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_101/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_101/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_202/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_202"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_101:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_202/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_303"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_303"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_201"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_304"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_202"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_101:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_304"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_304"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_203"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_303"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_203"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_305"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_101:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_305"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_203"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_101/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_101/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_305"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_302"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_101/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_101/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_101/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_101/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_101/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_101/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_101"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_101/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_101/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_202/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_202"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_101:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_202/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_303"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_303"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_201"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_304"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_202"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_101:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_304"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_304"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_203"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_303"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_203"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_305"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_101:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_305"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_102/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_102/concat"
  op: "ConcatV2"
  input: "split:102"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_305"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_102/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_102/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_102/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_102/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_102/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_102/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_102"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_102/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_102/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_204/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_204"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_102:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_204/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_306"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_306"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_203"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_307"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_204"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_102:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_307"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_307"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_205"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_306"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_205"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_308"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_102:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_308"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_205"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_102/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_102/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_308"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_305"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_102/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_102/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_102/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_102/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_102/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_102/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_102"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_102/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_102/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_204/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_204"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_102:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_204/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_306"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_306"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_307"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_204"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_102:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_307"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_307"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_205"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_306"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_205"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_308"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_102:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_308"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_205"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_103/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_103/concat"
  op: "ConcatV2"
  input: "split:103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_308"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_103/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_103/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_103/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_103/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_103/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_103/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_103"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_103/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_103/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_206/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_206"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_103:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_206/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_309"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_309"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_205"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_310"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_206"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_103:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_310"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_310"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_207"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_309"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_207"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_311"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_103:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_311"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_207"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_103/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_103/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_311"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_308"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_103/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_103/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_103/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_103/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_103/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_103/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_103"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_103/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_103/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_206/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_206"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_103:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_206/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_309"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_309"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_205"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_310"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_206"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_103:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_310"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_310"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_207"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_309"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_207"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_311"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_103:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_311"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_207"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_104/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_104/concat"
  op: "ConcatV2"
  input: "split:104"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_311"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_104/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_104/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_104/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_104/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_104/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_104/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_104"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_104/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_104/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_208/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_208"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_104:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_208/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_312"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_312"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_207"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_313"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_208"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_104:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_313"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_313"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_209"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_312"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_209"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_314"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_104:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_314"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_209"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_104/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_104/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_314"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_311"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_104/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_104/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_104/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_104/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_104/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_104/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_104"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_104/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_104/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_208/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_208"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_104:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_208/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_312"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_312"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_207"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_313"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_208"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_104:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_313"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_313"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_209"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_312"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_209"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_314"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_104:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_314"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_105/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_105/concat"
  op: "ConcatV2"
  input: "split:105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_314"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_105/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_105/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_105/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_105/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_105/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_105/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_105"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_105/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_105/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_210/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_210"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_105:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_210/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_315"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_315"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_209"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_316"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_210"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_105:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_316"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_316"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_211"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_315"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_211"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_317"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_105:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_317"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_211"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_105/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_105/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_317"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_314"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_105/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_105/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_105/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_105/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_105/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_105/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_105"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_105/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_105/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_210/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_210"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_105:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_210/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_315"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_315"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_316"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_210"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_105:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_316"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_316"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_211"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_315"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_211"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_317"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_105:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_317"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_211"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_106/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_106/concat"
  op: "ConcatV2"
  input: "split:106"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_317"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_106/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_106/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_106/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_106/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_106/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_106/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_106"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_106/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_106/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_212/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_212"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_106:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_212/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_318"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_318"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_211"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_319"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_212"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_106:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_319"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_319"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_213"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_318"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_213"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_320"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_106:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_320"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_213"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_106/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_106/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_320"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_317"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_106/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_106/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_106/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_106/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_106/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_106/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_106"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_106/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_106/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_212/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_212"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_106:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_212/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_318"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_318"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_211"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_319"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_212"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_106:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_319"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_319"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_213"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_318"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_213"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_320"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_106:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_320"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_213"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_107/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_107/concat"
  op: "ConcatV2"
  input: "split:107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_320"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_107/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_107/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_107/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_107/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_107/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_107/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_107"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_107/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_107/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_214/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_214"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_107:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_214/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_321"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_321"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_213"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_322"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_214"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_107:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_322"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_322"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_215"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_321"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_215"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_323"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_107:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_323"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_215"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_107/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_107/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_323"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_320"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_107/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_107/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_107/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_107/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_107/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_107/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_107"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_107/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_107/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_214/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_214"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_107:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_214/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_321"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_321"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_213"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_322"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_214"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_107:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_322"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_322"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_215"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_321"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_215"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_323"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_107:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_323"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_108/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_108/concat"
  op: "ConcatV2"
  input: "split:108"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_323"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_108/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_108/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_108/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_108/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_108/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_108/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_108"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_108/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_108/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_216/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_216"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_108:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_216/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_324"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_324"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_215"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_325"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_216"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_108:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_325"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_325"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_217"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_324"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_217"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_326"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_108:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_326"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_217"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_108/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_108/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_326"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_323"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_108/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_108/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_108/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_108/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_108/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_108/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_108"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_108/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_108/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_216/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_216"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_108:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_216/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_324"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_324"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_325"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_216"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_108:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_325"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_325"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_217"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_324"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_217"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_326"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_108:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_326"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_217"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_109/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_109/concat"
  op: "ConcatV2"
  input: "split:109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_326"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_109/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_109/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_109/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_109/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_109/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_109/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_109"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_109/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_109/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_218/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_218"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_109:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_218/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_327"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_327"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_217"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_328"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_218"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_109:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_328"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_328"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_219"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_327"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_219"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_329"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_109:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_329"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_219"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_109/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_109/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_329"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_326"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_109/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_109/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_109/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_109/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_109/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_109/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_109"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_109/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_109/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_218/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_218"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_109:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_218/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_327"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_327"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_217"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_328"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_218"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_109:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_328"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_328"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_219"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_327"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_219"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_329"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_109:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_329"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_219"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_110/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_110/concat"
  op: "ConcatV2"
  input: "split:110"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_329"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_110/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_110/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_110/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_110/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_110/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_110/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_110"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_110/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_110/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_220/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_220"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_110:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_220/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_330"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_330"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_219"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_331"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_220"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_110:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_331"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_331"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_221"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_330"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_221"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_332"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_110:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_332"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_221"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_110/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_110/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_332"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_329"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_110/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_110/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_110/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_110/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_110/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_110/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_110"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_110/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_110/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_220/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_220"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_110:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_220/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_330"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_330"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_219"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_331"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_220"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_110:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_331"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_331"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_221"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_330"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_221"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_332"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_110:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_332"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_111/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_111/concat"
  op: "ConcatV2"
  input: "split:111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_332"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_111/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_111/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_111/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_111/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_111/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_111/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_111"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_111/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_111/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_222/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_222"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_111:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_222/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_333"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_333"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_221"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_334"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_222"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_111:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_334"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_334"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_223"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_333"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_223"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_335"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_111:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_335"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_223"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_111/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_111/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_335"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_332"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_111/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_111/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_111/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_111/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_111/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_111/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_111"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_111/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_111/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_222/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_222"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_111:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_222/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_333"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_333"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_334"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_222"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_111:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_334"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_334"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_223"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_333"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_223"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_335"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_111:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_335"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_223"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_112/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_112/concat"
  op: "ConcatV2"
  input: "split:112"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_335"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_112/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_112/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_112/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_112/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_112/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_112/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_112"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_112/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_112/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_224/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_224"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_112:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_224/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_336"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_336"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_223"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_337"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_224"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_112:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_337"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_337"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_225"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_336"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_225"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_338"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_112:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_338"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_225"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_112/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_112/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_338"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_335"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_112/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_112/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_112/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_112/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_112/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_112/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_112"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_112/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_112/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_224/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_224"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_112:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_224/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_336"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_336"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_223"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_337"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_224"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_112:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_337"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_337"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_225"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_336"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_225"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_338"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_112:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_338"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_225"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_113/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_113/concat"
  op: "ConcatV2"
  input: "split:113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_338"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_113/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_113/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_113/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_113/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_113/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_113/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_113"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_113/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_113/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_226/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_226"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_113:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_226/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_339"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_339"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_225"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_340"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_226"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_113:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_340"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_340"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_227"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_339"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_227"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_341"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_113:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_341"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_227"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_113/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_113/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_341"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_338"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_113/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_113/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_113/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_113/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_113/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_113/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_113"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_113/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_113/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_226/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_226"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_113:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_226/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_339"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_339"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_225"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_340"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_226"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_113:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_340"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_340"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_227"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_339"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_227"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_341"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_113:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_341"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_114/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_114/concat"
  op: "ConcatV2"
  input: "split:114"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_341"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_114/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_114/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_114/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_114/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_114/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_114/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_114"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_114/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_114/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_228/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_228"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_114:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_228/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_342"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_342"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_227"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_343"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_228"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_114:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_343"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_343"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_229"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_342"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_229"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_344"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_114:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_344"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_229"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_114/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_114/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_344"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_341"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_114/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_114/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_114/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_114/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_114/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_114/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_114"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_114/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_114/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_228/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_228"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_114:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_228/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_342"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_342"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_343"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_228"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_114:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_343"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_343"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_229"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_342"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_229"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_344"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_114:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_344"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_229"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_115/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_115/concat"
  op: "ConcatV2"
  input: "split:115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_344"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_115/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_115/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_115/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_115/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_115/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_115/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_115"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_115/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_115/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_230/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_230"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_115:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_230/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_345"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_345"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_229"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_346"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_230"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_115:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_346"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_346"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_231"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_345"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_231"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_347"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_115:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_347"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_231"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_115/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_115/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_347"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_344"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_115/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_115/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_115/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_115/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_115/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_115/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_115"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_115/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_115/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_230/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_230"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_115:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_230/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_345"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_345"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_229"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_346"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_230"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_115:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_346"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_346"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_231"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_345"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_231"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_347"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_115:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_347"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_231"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_116/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_116/concat"
  op: "ConcatV2"
  input: "split:116"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_347"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_116/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_116/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_116/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_116/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_116/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_116/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_116"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_116/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_116/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_232/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_232"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_116:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_232/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_348"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_348"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_231"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_349"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_232"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_116:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_349"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_349"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_233"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_348"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_233"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_350"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_116:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_350"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_233"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_116/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_116/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_350"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_347"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_116/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_116/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_116/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_116/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_116/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_116/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_116"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_116/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_116/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_232/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_232"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_116:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_232/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_348"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_348"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_231"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_349"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_232"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_116:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_349"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_349"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_233"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_348"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_233"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_350"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_116:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_350"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_117/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_117/concat"
  op: "ConcatV2"
  input: "split:117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_350"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_117/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_117/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_117/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_117/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_117/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_117/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_117"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_117/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_117/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_234/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_234"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_117:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_234/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_351"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_351"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_233"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_352"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_234"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_117:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_352"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_352"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_235"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_351"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_235"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_353"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_117:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_353"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_235"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_117/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_117/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_353"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_350"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_117/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_117/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_117/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_117/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_117/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_117/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_117"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_117/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_117/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_234/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_234"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_117:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_234/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_351"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_351"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_352"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_234"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_117:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_352"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_352"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_235"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_351"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_235"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_353"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_117:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_353"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_235"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_118/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_118/concat"
  op: "ConcatV2"
  input: "split:118"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_353"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_118/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_118/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_118/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_118/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_118/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_118/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_118"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_118/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_118/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_236/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_236"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_118:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_236/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_354"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_354"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_235"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_355"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_236"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_118:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_355"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_355"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_237"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_354"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_237"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_356"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_118:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_356"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_237"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_118/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_118/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_356"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_353"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_118/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_118/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_118/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_118/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_118/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_118/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_118"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_118/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_118/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_236/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_236"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_118:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_236/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_354"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_354"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_235"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_355"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_236"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_118:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_355"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_355"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_237"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_354"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_237"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_356"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_118:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_356"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_237"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_119/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_119/concat"
  op: "ConcatV2"
  input: "split:119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_356"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_119/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_119/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_119/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_119/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_119/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_119/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_119"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_119/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_119/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_238/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_238"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_119:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_238/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_357"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_357"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_237"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_358"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_238"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_119:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_358"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_358"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_239"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_357"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_239"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_359"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_119:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_359"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_239"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_119/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_119/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_359"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_356"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_119/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_119/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_119/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_119/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_119/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_119/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_119"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_119/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_119/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_238/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_238"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_119:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_238/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_357"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_357"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_237"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_358"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_238"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_119:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_358"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_358"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_239"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_357"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_239"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_359"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_119:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_359"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_120/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_120/concat"
  op: "ConcatV2"
  input: "split:120"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_359"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_120/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_120/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_120/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_120/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_120/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_120/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_120"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_120/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_120/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_240/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_240"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_120:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_240/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_360"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_360"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_239"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_360"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_361"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_240"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_120:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_361"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_361"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_241"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_360"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_361"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_241"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_362"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_120:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_362"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_241"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_120/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_120/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_362"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_359"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_120/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_120/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_120/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_120/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_120/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_120/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_120"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_120/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_120/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_240/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_240"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_120:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_240/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_360"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_360"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_360"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_361"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_240"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_120:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_361"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_361"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_241"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_360"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_361"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_241"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_362"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_120:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_362"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_241"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_121/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_121/concat"
  op: "ConcatV2"
  input: "split:121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_362"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_121/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_121/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_121/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_121/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_121/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_121/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_121"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_121/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_121/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_242/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_242"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_121:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_242/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_363"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_363"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_241"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_363"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_364"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_242"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_121:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_364"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_364"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_243"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_363"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_364"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_243"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_365"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_121:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_365"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_243"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_121/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_121/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_365"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_362"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_121/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_121/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_121/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_121/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_121/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_121/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_121"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_121/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_121/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_242/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_242"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_121:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_242/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_363"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_363"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_241"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_363"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_364"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_242"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_121:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_364"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_364"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_243"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_363"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_364"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_243"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_365"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_121:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_365"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_243"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_122/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_122/concat"
  op: "ConcatV2"
  input: "split:122"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_365"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_122/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_122/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_122/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_122/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_122/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_122/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_122"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_122/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_122/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_244/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_244"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_122:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_244/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_366"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_366"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_243"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_366"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_367"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_244"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_122:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_367"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_367"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_245"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_366"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_367"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_245"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_368"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_122:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_368"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_245"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_122/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_122/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_368"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_365"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_122/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_122/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_122/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_122/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_122/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_122/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_122"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_122/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_122/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_244/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_244"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_122:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_244/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_366"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_366"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_243"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_366"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_367"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_244"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_122:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_367"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_367"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_245"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_366"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_367"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_245"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_368"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_122:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_368"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_123/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_123/concat"
  op: "ConcatV2"
  input: "split:123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_368"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_123/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_123/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_123/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_123/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_123/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_123/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_123"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_123/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_123/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_246/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_246"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_123:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_246/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_369"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_369"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_245"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_369"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_370"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_246"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_123:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_370"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_370"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_247"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_369"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_370"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_247"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_371"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_123:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_371"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_247"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_123/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_123/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_371"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_368"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_123/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_123/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_123/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_123/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_123/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_123/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_123"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_123/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_123/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_246/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_246"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_123:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_246/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_369"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_369"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_369"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_370"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_246"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_123:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_370"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_370"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_247"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_369"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_370"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_247"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_371"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_123:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_371"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_247"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_124/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_124/concat"
  op: "ConcatV2"
  input: "split:124"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_371"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_124/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_124/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_124/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_124/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_124/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_124/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_124"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_124/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_124/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_248/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_248"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_124:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_248/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_372"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_372"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_247"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_372"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_373"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_248"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_124:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_373"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_373"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_249"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_372"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_373"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_249"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_374"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_124:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_374"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_249"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_124/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_124/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_374"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_371"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_124/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_124/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_124/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_124/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_124/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_124/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_124"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_124/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_124/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_248/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_248"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_124:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_248/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_372"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_372"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_247"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_372"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_373"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_248"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_124:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_373"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_373"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_249"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_372"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_373"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_249"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_374"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_124:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_374"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_249"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_125/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_125/concat"
  op: "ConcatV2"
  input: "split:125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_374"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_125/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_125/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_125/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_125/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_125/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_125/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_125"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_125/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_125/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_250/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_250"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_125:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_250/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_375"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_375"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_249"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_375"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_376"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_250"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_125:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_376"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_376"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_251"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_375"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_376"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_251"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_377"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_125:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_377"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_251"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_125/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_125/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_377"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_374"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_125/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_125/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_125/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_125/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_125/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_125/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_125"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_125/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_125/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_250/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_250"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_125:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_250/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_375"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_375"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_249"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_375"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_376"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_250"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_125:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_376"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_376"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_251"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_375"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_376"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_251"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_377"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_125:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_377"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_126/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_126/concat"
  op: "ConcatV2"
  input: "split:126"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_377"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_126/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_126/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_126/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_126/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_126/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_126/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_126"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_126/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_126/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_252/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_252"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_126:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_252/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_378"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_378"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_251"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_378"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_379"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_252"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_126:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_379"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_379"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_253"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_378"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_253"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_380"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_126:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_380"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_253"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_126/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_126/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_380"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_377"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_126/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_126/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_126/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_126/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_126/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_126/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_126"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_126/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_126/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_252/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_252"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_126:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_252/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_378"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_378"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_378"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_379"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_252"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_126:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_379"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_379"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_253"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_378"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_253"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_380"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_126:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_380"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_253"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_127/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_127/concat"
  op: "ConcatV2"
  input: "split:127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_380"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_127/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_127/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_127/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_127/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_127/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_127/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_127"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_127/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell_127/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_254/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_254"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_127:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_254/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_381"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_381"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_253"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_381"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_382"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_254"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_127:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_382"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_382"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_255"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_381"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_382"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_255"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_383"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_127:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_383"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_255"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_127/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_127/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_383"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_380"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_127/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_127/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_127/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_127/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_127/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_127/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_127"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_127/split_dim"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell_127/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_254/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_254"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_127:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_254/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_381"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_381"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_253"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_381"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_382"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_254"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_127:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_382"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_382"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_255"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_381"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_382"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_255"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_383"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_127:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_383"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_255"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w_out"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 6
          }
        }
        tensor_content: "\312+\311=\224\035o\275nI\263\276D\351\217?\225\013\021\277\376,\377\275\010\013\010=q\222\304\276;\204\254\276\214}\037?\306\265S\276l[\235>4\267M\275b\247\354\276(\353S?#1\240\275`c2>\313\006\366\276]\220\324\276\360\260\371=\204\326S=\277R\347\275\300\273\375>\265\274\336\276\027HQ?[\347\003\277\255\025w\276\247\201\271\276\351\025\r>M?h\275\362I\201\276\316\256\216\276i\335\251>\334b\222?\010\361\r\277\231-<\276\236\304\260>\342\257\320=K\306\343<{9\370\276\226\265\341>\305\2701?s\313\304>\351J\243?\377\255\034>R\364\304>|\331\217\276B\244\007\277k>\245\276M\231l\2742$\370\275\222(\027\276|\277+?\273a \276\360\n\254>\002\024U>n9L;\177\252\341\275\234\214\036\276\2142c\276h\302\315\2760\310R>\213\224\364>\202\341~\277\342X7\277z\223\003>\253=\201\276m=\346\276Ro\227>\333Y\333\274\236\311\203;\314r\260>\"2\227><\'n=\304\322\252=\232\004\241=;\371\014\277\177\262\245\275\314\t;\277/L\005\277\323\227D>\346\235\007?\323>S>L\343b>p\316\230\276\226\335`\276\263$\203\276\351Hu=J\304\024=\236\027\304>H%\311\276\253\237\343>\210\002\302\275\"R%\276\262\236 >\327K<>a\303v\276\300g\235\276\357\030\260>4\265o\276Y\224y?\000\2169\276b0\307\2767L\232\276\005\372\365>\216\023\260\276&\377\262\275@2\247>\315\263\031\277\305b\027\276w\217\014\274%G\226?\'\244\n?\035g\233=\374B\030?\034\226\277\276\361\372\322>?\357\367>V\257A\276;\322\377\276\247\245y>h\333\325\276\374\211\003\277\305\351\313=\367\026\341>\237:\200\276\252\243\201\276\310U=?\272z\373\276\002\360\246\275)WT?\240\016\022\277\347\235-\276\312n\233\275\215\014\234>\003\336\206\276\222\240J\274]M\201>#\343n>\321\203\004\277[\033\306>J\234\253\272)]\232>\267j\327\276\342\324\372\275\017f\231>\006\377-?\036uz\274G\177\303\275&\022\352\276\365^\334=u4:>.\355g>\350\251\274>\351\333\211\276\227gC\276\365\242\225\276\2024\326>~\346R>\310N`=\334\214b\276\271n7>\n\030$\277\014\204\275>\270\245\335;;\277\277>\361\256\240\276\232\344\273=\366\016e\276}\321\340=\246g\326\276\323\272\357>\005\241\224\276y\235j>\267\017\206>\223\023\303\276p\r\255\274\031j\230= \003\374=\263\004#\276LK\000?\202V\214>\026F\211>\036+k\277\001y\022\277\031[\214>\237\302P\274\002\314\205\274\210w\236=\021>\003\276\203\223\300>o\367\017\277"
      }
    }
  }
}
node {
  name: "b_out"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\036\224\215?4J\233\276\337 2>\301\366h\277CQ\215?h\324S="
      }
    }
  }
}
node {
  name: "output/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_383"
  input: "w_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "output"
  op: "BiasAdd"
  input: "output/MatMul"
  input: "b_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
